{
  "version": 3,
  "sources": ["../../@metaplex-foundation/mpl-token-metadata/src/accounts/constants.ts", "../../@metaplex-foundation/mpl-token-metadata/node_modules/buffer/index.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/errors.ts", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/accounts/Account.ts", "../../@babel/runtime/helpers/esm/defineProperty.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/node_modules/base64-js/index.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/node_modules/ieee754/index.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/node_modules/buffer/index.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/node_modules/rollup-plugin-node-polyfills/polyfills/global.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/node_modules/rollup-plugin-node-polyfills/polyfills/util.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/node_modules/rollup-plugin-node-polyfills/polyfills/assert.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/node_modules/buffer-layout/lib/Layout.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/client/layout.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/client/util/send-and-confirm-transaction.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@solana/spl-token/client/token.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/accounts/TokenAccount.ts", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/accounts/index.ts", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/config.ts", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/Program.ts", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/Transaction.ts", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/dist/src/types.js", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/utils/borsh.ts", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/utils/tupleNumeric.ts", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/utils/index.ts", "../../@metaplex-foundation/mpl-token-metadata/node_modules/@metaplex-foundation/mpl-core/src/mpl-core.ts", "../../@metaplex-foundation/mpl-token-metadata/src/MetadataProgram.ts", "../../@metaplex-foundation/mpl-token-metadata/src/accounts/Edition.ts", "../../@metaplex-foundation/mpl-token-metadata/src/accounts/MasterEdition.ts", "../../@metaplex-foundation/mpl-token-metadata/src/accounts/Uses.ts", "../../@metaplex-foundation/mpl-token-metadata/src/accounts/Collection.ts", "../../@metaplex-foundation/mpl-token-metadata/src/accounts/Metadata.ts", "../../@metaplex-foundation/mpl-token-metadata/src/accounts/EditionMarker.ts", "../../@metaplex-foundation/mpl-token-metadata/src/accounts/index.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/CreateMetadata.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/UpdateMetadata.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/CreateMasterEdition.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/MintNewEditionFromMasterEditionViaToken.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/UpdatePrimarySaleHappenedViaToken.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/SignMetadata.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/UpdateMetadataV2.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/CreateMetadataV2.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/CreateMasterEditionV3.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/VerifyCollection.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/UnverifyCollection.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/SetAndVerifyCollection.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/ApproveUseAuthority.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/RevokeUseAuthority.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/ApproveCollectionAuthority.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/RevokeCollectionAuthority.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/Utilize.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/FreezeDelegatedAccount.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/ThawDelegatedAccount.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/RemoveCreatorVerification.ts", "../../@metaplex-foundation/mpl-token-metadata/src/transactions/index.ts", "../../@metaplex-foundation/mpl-token-metadata/src/mpl-token-metadata.ts", "dep:@metaplex-foundation_mpl-token-metadata"],
  "sourcesContent": [null, "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", null, null, "export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});", "\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n", "\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport {isBuffer} from 'buffer';\nimport {isPrimitive, inherits, isError, isFunction, isRegExp, isDate, inspect as utilInspect} from 'util';\nvar pSlice = Array.prototype.slice;\nvar _functionsHaveNames;\nfunction functionsHaveNames() {\n  if (typeof _functionsHaveNames !== 'undefined') {\n    return _functionsHaveNames;\n  }\n  return _functionsHaveNames = (function () {\n    return function foo() {}.name === 'foo';\n  }());\n}\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nfunction assert(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nexport default assert;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames()) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = AssertionError;\nexport function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}\n\n// assert.AssertionError instanceof Error\ninherits(AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames() || !isFunction(something)) {\n    return utilInspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nexport function fail(actual, expected, message, operator, stackStartFunction) {\n  throw new AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nexport function ok(value, message) {\n  if (!value) fail(value, true, message, '==', ok);\n}\nassert.ok = ok;\nexport {ok as assert};\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\nassert.equal = equal;\nexport function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', equal);\n}\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\nassert.notEqual = notEqual;\nexport function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', notEqual);\n  }\n}\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\nassert.deepEqual = deepEqual;\nexport function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', deepEqual);\n  }\n}\nassert.deepStrictEqual = deepStrictEqual;\nexport function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', deepStrictEqual);\n  }\n}\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (isDate(actual) && isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (isRegExp(actual) && isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (isPrimitive(a) || isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\nassert.notDeepEqual = notDeepEqual;\nexport function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', notDeepEqual);\n  }\n}\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nexport function notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\nassert.strictEqual = strictEqual;\nexport function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', strictEqual);\n  }\n}\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\nassert.notStrictEqual = notStrictEqual;\nexport function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', notStrictEqual);\n  }\n}\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\nassert.throws = throws;\nexport function throws(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n}\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = doesNotThrow;\nexport function doesNotThrow(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n}\n\nassert.ifError = ifError;\nexport function ifError(err) {\n  if (err) throw err;\n}\n", "/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n", "// @flow\n\nimport * as BufferLayout from 'buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey'): Object => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64'): Object => {\n  return BufferLayout.blob(8, property);\n};\n", "// @flow\n\nimport {sendAndConfirmTransaction as realSendAndConfirmTransaction} from '@solana/web3.js';\nimport type {\n  Connection,\n  Signer,\n  Transaction,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nexport function sendAndConfirmTransaction(\n  title: string,\n  connection: Connection,\n  transaction: Transaction,\n  ...signers: Array<Signer>\n): Promise<TransactionSignature> {\n  return realSendAndConfirmTransaction(connection, transaction, signers, {\n    skipPreflight: false,\n  });\n}\n", "/**\n * @flow\n */\n\nimport {Buffer} from 'buffer';\nimport assert from 'assert';\nimport BN from 'bn.js';\nimport * as BufferLayout from 'buffer-layout';\nimport {\n  Keypair,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n  SYSVAR_RENT_PUBKEY,\n} from '@solana/web3.js';\nimport type {\n  Connection,\n  Commitment,\n  Signer,\n  TransactionSignature,\n} from '@solana/web3.js';\n\nimport * as Layout from './layout';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\n\nexport const TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',\n);\n\nexport const ASSOCIATED_TOKEN_PROGRAM_ID: PublicKey = new PublicKey(\n  'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',\n);\n\nconst FAILED_TO_FIND_ACCOUNT = 'Failed to find account';\nconst INVALID_ACCOUNT_OWNER = 'Invalid account owner';\n\n/**\n * Unfortunately, BufferLayout.encode uses an `instanceof` check for `Buffer`\n * which fails when using `publicKey.toBuffer()` directly because the bundled `Buffer`\n * class in `@solana/web3.js` is different from the bundled `Buffer` class in this package\n */\nfunction pubkeyToBuffer(publicKey: PublicKey): typeof Buffer {\n  return Buffer.from(publicKey.toBuffer());\n}\n\n/**\n * 64-bit value\n */\nexport class u64 extends BN {\n  /**\n   * Convert to Buffer representation\n   */\n  toBuffer(): typeof Buffer {\n    const a = super.toArray().reverse();\n    const b = Buffer.from(a);\n    if (b.length === 8) {\n      return b;\n    }\n    assert(b.length < 8, 'u64 too large');\n\n    const zeroPad = Buffer.alloc(8);\n    b.copy(zeroPad);\n    return zeroPad;\n  }\n\n  /**\n   * Construct a u64 from Buffer representation\n   */\n  static fromBuffer(buffer: typeof Buffer): u64 {\n    assert(buffer.length === 8, `Invalid buffer length: ${buffer.length}`);\n    return new u64(\n      [...buffer]\n        .reverse()\n        .map(i => `00${i.toString(16)}`.slice(-2))\n        .join(''),\n      16,\n    );\n  }\n}\n\nfunction isAccount(accountOrPublicKey: any): boolean {\n  return 'publicKey' in accountOrPublicKey;\n}\n\ntype AuthorityType =\n  | 'MintTokens'\n  | 'FreezeAccount'\n  | 'AccountOwner'\n  | 'CloseAccount';\n\nconst AuthorityTypeCodes = {\n  MintTokens: 0,\n  FreezeAccount: 1,\n  AccountOwner: 2,\n  CloseAccount: 3,\n};\n\n// The address of the special mint for wrapped native token.\nexport const NATIVE_MINT: PublicKey = new PublicKey(\n  'So11111111111111111111111111111111111111112',\n);\n\n/**\n * Information about the mint\n */\ntype MintInfo = {|\n  /**\n   * Optional authority used to mint new tokens. The mint authority may only be provided during\n   * mint creation. If no mint authority is present then the mint has a fixed supply and no\n   * further tokens may be minted.\n   */\n  mintAuthority: null | PublicKey,\n\n  /**\n   * Total supply of tokens\n   */\n  supply: u64,\n\n  /**\n   * Number of base 10 digits to the right of the decimal place\n   */\n  decimals: number,\n\n  /**\n   * Is this mint initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Optional authority to freeze token accounts\n   */\n  freezeAuthority: null | PublicKey,\n|};\n\nexport const MintLayout: typeof BufferLayout.Structure = BufferLayout.struct([\n  BufferLayout.u32('mintAuthorityOption'),\n  Layout.publicKey('mintAuthority'),\n  Layout.uint64('supply'),\n  BufferLayout.u8('decimals'),\n  BufferLayout.u8('isInitialized'),\n  BufferLayout.u32('freezeAuthorityOption'),\n  Layout.publicKey('freezeAuthority'),\n]);\n\n/**\n * Information about an account\n */\ntype AccountInfo = {|\n  /**\n   * The address of this account\n   */\n  address: PublicKey,\n\n  /**\n   * The mint associated with this account\n   */\n  mint: PublicKey,\n\n  /**\n   * Owner of this account\n   */\n  owner: PublicKey,\n\n  /**\n   * Amount of tokens this account holds\n   */\n  amount: u64,\n\n  /**\n   * The delegate for this account\n   */\n  delegate: null | PublicKey,\n\n  /**\n   * The amount of tokens the delegate authorized to the delegate\n   */\n  delegatedAmount: u64,\n\n  /**\n   * Is this account initialized\n   */\n  isInitialized: boolean,\n\n  /**\n   * Is this account frozen\n   */\n  isFrozen: boolean,\n\n  /**\n   * Is this a native token account\n   */\n  isNative: boolean,\n\n  /**\n   * If this account is a native token, it must be rent-exempt. This\n   * value logs the rent-exempt reserve which must remain in the balance\n   * until the account is closed.\n   */\n  rentExemptReserve: null | u64,\n\n  /**\n   * Optional authority to close the account\n   */\n  closeAuthority: null | PublicKey,\n|};\n\n/**\n * @private\n */\nexport const AccountLayout: typeof BufferLayout.Structure = BufferLayout.struct(\n  [\n    Layout.publicKey('mint'),\n    Layout.publicKey('owner'),\n    Layout.uint64('amount'),\n    BufferLayout.u32('delegateOption'),\n    Layout.publicKey('delegate'),\n    BufferLayout.u8('state'),\n    BufferLayout.u32('isNativeOption'),\n    Layout.uint64('isNative'),\n    Layout.uint64('delegatedAmount'),\n    BufferLayout.u32('closeAuthorityOption'),\n    Layout.publicKey('closeAuthority'),\n  ],\n);\n\n/**\n * Information about an multisig\n */\ntype MultisigInfo = {|\n  /**\n   * The number of signers required\n   */\n  m: number,\n\n  /**\n   * Number of possible signers, corresponds to the\n   * number of `signers` that are valid.\n   */\n  n: number,\n\n  /**\n   * Is this mint initialized\n   */\n  initialized: boolean,\n\n  /**\n   * The signers\n   */\n  signer1: PublicKey,\n  signer2: PublicKey,\n  signer3: PublicKey,\n  signer4: PublicKey,\n  signer5: PublicKey,\n  signer6: PublicKey,\n  signer7: PublicKey,\n  signer8: PublicKey,\n  signer9: PublicKey,\n  signer10: PublicKey,\n  signer11: PublicKey,\n|};\n\n/**\n * @private\n */\nconst MultisigLayout = BufferLayout.struct([\n  BufferLayout.u8('m'),\n  BufferLayout.u8('n'),\n  BufferLayout.u8('is_initialized'),\n  Layout.publicKey('signer1'),\n  Layout.publicKey('signer2'),\n  Layout.publicKey('signer3'),\n  Layout.publicKey('signer4'),\n  Layout.publicKey('signer5'),\n  Layout.publicKey('signer6'),\n  Layout.publicKey('signer7'),\n  Layout.publicKey('signer8'),\n  Layout.publicKey('signer9'),\n  Layout.publicKey('signer10'),\n  Layout.publicKey('signer11'),\n]);\n\n/**\n * An ERC20-like Token\n */\nexport class Token {\n  /**\n   * @private\n   */\n  connection: Connection;\n\n  /**\n   * The public key identifying this mint\n   */\n  publicKey: PublicKey;\n\n  /**\n   * Program Identifier for the Token program\n   */\n  programId: PublicKey;\n\n  /**\n   * Program Identifier for the Associated Token program\n   */\n  associatedProgramId: PublicKey;\n\n  /**\n   * Fee payer\n   */\n  payer: Signer;\n\n  /**\n   * Create a Token object attached to the specific mint\n   *\n   * @param connection The connection to use\n   * @param token Public key of the mint\n   * @param programId token programId\n   * @param payer Payer of fees\n   */\n  constructor(\n    connection: Connection,\n    publicKey: PublicKey,\n    programId: PublicKey,\n    payer: Signer,\n  ) {\n    Object.assign(this, {\n      connection,\n      publicKey,\n      programId,\n      payer,\n      // Hard code is ok; Overriding is needed only for tests\n      associatedProgramId: ASSOCIATED_TOKEN_PROGRAM_ID,\n    });\n  }\n\n  /**\n   * Get the minimum balance for the mint to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMint(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(MintLayout.span);\n  }\n\n  /**\n   * Get the minimum balance for the account to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptAccount(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      AccountLayout.span,\n    );\n  }\n\n  /**\n   * Get the minimum balance for the multsig to be rent exempt\n   *\n   * @return Number of lamports required\n   */\n  static async getMinBalanceRentForExemptMultisig(\n    connection: Connection,\n  ): Promise<number> {\n    return await connection.getMinimumBalanceForRentExemption(\n      MultisigLayout.span,\n    );\n  }\n\n  /**\n   * Create and initialize a token.\n   *\n   * @param connection The connection to use\n   * @param payer Fee payer for transaction\n   * @param mintAuthority Account or multisig that will control minting\n   * @param freezeAuthority Optional account or multisig that can freeze token accounts\n   * @param decimals Location of the decimal place\n   * @param programId Optional token programId, uses the system programId by default\n   * @return Token object for the newly minted token\n   */\n  static async createMint(\n    connection: Connection,\n    payer: Signer,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n    decimals: number,\n    programId: PublicKey,\n  ): Promise<Token> {\n    const mintAccount = Keypair.generate();\n    const token = new Token(\n      connection,\n      mintAccount.publicKey,\n      programId,\n      payer,\n    );\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMint(\n      connection,\n    );\n\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: mintAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MintLayout.span,\n        programId,\n      }),\n    );\n\n    transaction.add(\n      Token.createInitMintInstruction(\n        programId,\n        mintAccount.publicKey,\n        decimals,\n        mintAuthority,\n        freezeAuthority,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMint',\n      connection,\n      transaction,\n      payer,\n      mintAccount,\n    );\n\n    return token;\n  }\n\n  /**\n   * Create and initialize a new account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new empty account\n   */\n  async createAccount(owner: PublicKey): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      this.connection,\n    );\n\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    const mintPublicKey = this.publicKey;\n    transaction.add(\n      Token.createInitAccountInstruction(\n        this.programId,\n        mintPublicKey,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeAccount',\n      this.connection,\n      transaction,\n      this.payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize the associated account.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return Public key of the new associated account\n   */\n  async createAssociatedTokenAccount(owner: PublicKey): Promise<PublicKey> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    return this.createAssociatedTokenAccountInternal(owner, associatedAddress);\n  }\n\n  async createAssociatedTokenAccountInternal(\n    owner: PublicKey,\n    associatedAddress: PublicKey,\n  ): Promise<PublicKey> {\n    await sendAndConfirmTransaction(\n      'CreateAssociatedTokenAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createAssociatedTokenAccountInstruction(\n          this.associatedProgramId,\n          this.programId,\n          this.publicKey,\n          associatedAddress,\n          owner,\n          this.payer.publicKey,\n        ),\n      ),\n      this.payer,\n    );\n\n    return associatedAddress;\n  }\n\n  /**\n   * Retrieve the associated account or create one if not found.\n   *\n   * This account may then be used as a `transfer()` or `approve()` destination\n   *\n   * @param owner User account that will own the new account\n   * @return The new associated account\n   */\n  async getOrCreateAssociatedAccountInfo(\n    owner: PublicKey,\n  ): Promise<AccountInfo> {\n    const associatedAddress = await Token.getAssociatedTokenAddress(\n      this.associatedProgramId,\n      this.programId,\n      this.publicKey,\n      owner,\n    );\n\n    // This is the optimum logic, considering TX fee, client-side computation,\n    // RPC roundtrips and guaranteed idempotent.\n    // Sadly we can't do this atomically;\n    try {\n      return await this.getAccountInfo(associatedAddress);\n    } catch (err) {\n      // INVALID_ACCOUNT_OWNER can be possible if the associatedAddress has\n      // already been received some lamports (= became system accounts).\n      // Assuming program derived addressing is safe, this is the only case\n      // for the INVALID_ACCOUNT_OWNER in this code-path\n      if (\n        err.message === FAILED_TO_FIND_ACCOUNT ||\n        err.message === INVALID_ACCOUNT_OWNER\n      ) {\n        // as this isn't atomic, it's possible others can create associated\n        // accounts meanwhile\n        try {\n          await this.createAssociatedTokenAccountInternal(\n            owner,\n            associatedAddress,\n          );\n        } catch (err) {\n          // ignore all errors; for now there is no API compatible way to\n          // selectively ignore the expected instruction error if the\n          // associated account is existing already.\n        }\n\n        // Now this should always succeed\n        return await this.getAccountInfo(associatedAddress);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Create and initialize a new account on the special native token mint.\n   *\n   * In order to be wrapped, the account must have a balance of native tokens\n   * when it is initialized with the token program.\n   *\n   * This function sends lamports to the new account before initializing it.\n   *\n   * @param connection A solana web3 connection\n   * @param programId The token program ID\n   * @param owner The owner of the new token account\n   * @param payer The source of the lamports to initialize, and payer of the initialization fees.\n   * @param amount The amount of lamports to wrap\n   * @return {Promise<PublicKey>} The new token account\n   */\n  static async createWrappedNativeAccount(\n    connection: Connection,\n    programId: PublicKey,\n    owner: PublicKey,\n    payer: Signer,\n    amount: number,\n  ): Promise<PublicKey> {\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptAccount(\n      connection,\n    );\n\n    // Create a new account\n    const newAccount = Keypair.generate();\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: newAccount.publicKey,\n        lamports: balanceNeeded,\n        space: AccountLayout.span,\n        programId,\n      }),\n    );\n\n    // Send lamports to it (these will be wrapped into native tokens by the token program)\n    transaction.add(\n      SystemProgram.transfer({\n        fromPubkey: payer.publicKey,\n        toPubkey: newAccount.publicKey,\n        lamports: amount,\n      }),\n    );\n\n    // Assign the new account to the native token mint.\n    // the account will be initialized with a balance equal to the native token balance.\n    // (i.e. amount)\n    transaction.add(\n      Token.createInitAccountInstruction(\n        programId,\n        NATIVE_MINT,\n        newAccount.publicKey,\n        owner,\n      ),\n    );\n\n    // Send the three instructions\n    await sendAndConfirmTransaction(\n      'createAccount, transfer, and initializeAccount',\n      connection,\n      transaction,\n      payer,\n      newAccount,\n    );\n\n    return newAccount.publicKey;\n  }\n\n  /**\n   * Create and initialize a new multisig.\n   *\n   * This account may then be used for multisignature verification\n   *\n   * @param m Number of required signatures\n   * @param signers Full set of signers\n   * @return Public key of the new multisig account\n   */\n  async createMultisig(\n    m: number,\n    signers: Array<PublicKey>,\n  ): Promise<PublicKey> {\n    const multisigAccount = Keypair.generate();\n\n    // Allocate memory for the account\n    const balanceNeeded = await Token.getMinBalanceRentForExemptMultisig(\n      this.connection,\n    );\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: this.payer.publicKey,\n        newAccountPubkey: multisigAccount.publicKey,\n        lamports: balanceNeeded,\n        space: MultisigLayout.span,\n        programId: this.programId,\n      }),\n    );\n\n    // create the new account\n    let keys = [\n      {pubkey: multisigAccount.publicKey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    signers.forEach(signer =>\n      keys.push({pubkey: signer, isSigner: false, isWritable: false}),\n    );\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('m'),\n    ]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 2, // InitializeMultisig instruction\n        m,\n      },\n      data,\n    );\n    transaction.add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n\n    // Send the two instructions\n    await sendAndConfirmTransaction(\n      'createAccount and InitializeMultisig',\n      this.connection,\n      transaction,\n      this.payer,\n      multisigAccount,\n    );\n\n    return multisigAccount.publicKey;\n  }\n\n  /**\n   * Retrieve mint information\n   */\n  async getMintInfo(): Promise<MintInfo> {\n    const info = await this.connection.getAccountInfo(this.publicKey);\n    if (info === null) {\n      throw new Error('Failed to find mint account');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid mint owner: ${JSON.stringify(info.owner)}`);\n    }\n    if (info.data.length != MintLayout.span) {\n      throw new Error(`Invalid mint size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const mintInfo = MintLayout.decode(data);\n\n    if (mintInfo.mintAuthorityOption === 0) {\n      mintInfo.mintAuthority = null;\n    } else {\n      mintInfo.mintAuthority = new PublicKey(mintInfo.mintAuthority);\n    }\n\n    mintInfo.supply = u64.fromBuffer(mintInfo.supply);\n    mintInfo.isInitialized = mintInfo.isInitialized != 0;\n\n    if (mintInfo.freezeAuthorityOption === 0) {\n      mintInfo.freezeAuthority = null;\n    } else {\n      mintInfo.freezeAuthority = new PublicKey(mintInfo.freezeAuthority);\n    }\n    return mintInfo;\n  }\n\n  /**\n   * Retrieve account information\n   *\n   * @param account Public key of the account\n   */\n  async getAccountInfo(\n    account: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo> {\n    const info = await this.connection.getAccountInfo(account, commitment);\n    if (info === null) {\n      throw new Error(FAILED_TO_FIND_ACCOUNT);\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(INVALID_ACCOUNT_OWNER);\n    }\n    if (info.data.length != AccountLayout.span) {\n      throw new Error(`Invalid account size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const accountInfo = AccountLayout.decode(data);\n    accountInfo.address = account;\n    accountInfo.mint = new PublicKey(accountInfo.mint);\n    accountInfo.owner = new PublicKey(accountInfo.owner);\n    accountInfo.amount = u64.fromBuffer(accountInfo.amount);\n\n    if (accountInfo.delegateOption === 0) {\n      accountInfo.delegate = null;\n      accountInfo.delegatedAmount = new u64();\n    } else {\n      accountInfo.delegate = new PublicKey(accountInfo.delegate);\n      accountInfo.delegatedAmount = u64.fromBuffer(accountInfo.delegatedAmount);\n    }\n\n    accountInfo.isInitialized = accountInfo.state !== 0;\n    accountInfo.isFrozen = accountInfo.state === 2;\n\n    if (accountInfo.isNativeOption === 1) {\n      accountInfo.rentExemptReserve = u64.fromBuffer(accountInfo.isNative);\n      accountInfo.isNative = true;\n    } else {\n      accountInfo.rentExemptReserve = null;\n      accountInfo.isNative = false;\n    }\n\n    if (accountInfo.closeAuthorityOption === 0) {\n      accountInfo.closeAuthority = null;\n    } else {\n      accountInfo.closeAuthority = new PublicKey(accountInfo.closeAuthority);\n    }\n\n    if (!accountInfo.mint.equals(this.publicKey)) {\n      throw new Error(\n        `Invalid account mint: ${JSON.stringify(\n          accountInfo.mint,\n        )} !== ${JSON.stringify(this.publicKey)}`,\n      );\n    }\n    return accountInfo;\n  }\n\n  /**\n   * Retrieve Multisig information\n   *\n   * @param multisig Public key of the account\n   */\n  async getMultisigInfo(multisig: PublicKey): Promise<MultisigInfo> {\n    const info = await this.connection.getAccountInfo(multisig);\n    if (info === null) {\n      throw new Error('Failed to find multisig');\n    }\n    if (!info.owner.equals(this.programId)) {\n      throw new Error(`Invalid multisig owner`);\n    }\n    if (info.data.length != MultisigLayout.span) {\n      throw new Error(`Invalid multisig size`);\n    }\n\n    const data = Buffer.from(info.data);\n    const multisigInfo = MultisigLayout.decode(data);\n    multisigInfo.signer1 = new PublicKey(multisigInfo.signer1);\n    multisigInfo.signer2 = new PublicKey(multisigInfo.signer2);\n    multisigInfo.signer3 = new PublicKey(multisigInfo.signer3);\n    multisigInfo.signer4 = new PublicKey(multisigInfo.signer4);\n    multisigInfo.signer5 = new PublicKey(multisigInfo.signer5);\n    multisigInfo.signer6 = new PublicKey(multisigInfo.signer6);\n    multisigInfo.signer7 = new PublicKey(multisigInfo.signer7);\n    multisigInfo.signer8 = new PublicKey(multisigInfo.signer8);\n    multisigInfo.signer9 = new PublicKey(multisigInfo.signer9);\n    multisigInfo.signer10 = new PublicKey(multisigInfo.signer10);\n    multisigInfo.signer11 = new PublicKey(multisigInfo.signer11);\n\n    return multisigInfo;\n  }\n\n  /**\n   * Transfer tokens to another account\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  async transfer(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'Transfer',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferInstruction(\n          this.programId,\n          source,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  async approve(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Approve',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveInstruction(\n          this.programId,\n          account,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Remove approval for the transfer of any remaining tokens\n   *\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  async revoke(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Revoke',\n      this.connection,\n      new Transaction().add(\n        Token.createRevokeInstruction(\n          this.programId,\n          account,\n          ownerPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Assign a new authority to the account\n   *\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the account\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  async setAuthority(\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let currentAuthorityPublicKey: PublicKey;\n    let signers;\n    if (isAccount(currentAuthority)) {\n      currentAuthorityPublicKey = currentAuthority.publicKey;\n      signers = [currentAuthority];\n    } else {\n      currentAuthorityPublicKey = currentAuthority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'SetAuthority',\n      this.connection,\n      new Transaction().add(\n        Token.createSetAuthorityInstruction(\n          this.programId,\n          account,\n          newAuthority,\n          authorityType,\n          currentAuthorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  async mintTo(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintTo',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   */\n  async burn(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'Burn',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Close account\n   *\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Authority which is allowed to close the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async closeAccount(\n    account: PublicKey,\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'CloseAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createCloseAccountInstruction(\n          this.programId,\n          account,\n          dest,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Freeze account\n   *\n   * @param account Account to freeze\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async freezeAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'FreezeAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createFreezeAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Thaw account\n   *\n   * @param account Account to thaw\n   * @param authority The mint freeze authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   */\n  async thawAccount(\n    account: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n  ): Promise<void> {\n    let authorityPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      authorityPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      authorityPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ThawAccount',\n      this.connection,\n      new Transaction().add(\n        Token.createThawAccountInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          authorityPublicKey,\n          multiSigners,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Transfer tokens to another account, asserting the token mint and decimals\n   *\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  async transferChecked(\n    source: PublicKey,\n    destination: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<TransactionSignature> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    return await sendAndConfirmTransaction(\n      'TransferChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createTransferCheckedInstruction(\n          this.programId,\n          source,\n          this.publicKey,\n          destination,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Grant a third-party permission to transfer up the specified number of tokens from an account,\n   * asserting the token mint and decimals\n   *\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  async approveChecked(\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'ApproveChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createApproveCheckedInstruction(\n          this.programId,\n          account,\n          this.publicKey,\n          delegate,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Mint new tokens, asserting the token mint and decimals\n   *\n   * @param dest Public key of the account to mint to\n   * @param authority Minting authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  async mintToChecked(\n    dest: PublicKey,\n    authority: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(authority)) {\n      ownerPublicKey = authority.publicKey;\n      signers = [authority];\n    } else {\n      ownerPublicKey = authority;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'MintToChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createMintToCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          dest,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Burn tokens, asserting the token mint and decimals\n   *\n   * @param account Account to burn tokens from\n   * @param owner Account owner\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Amount to burn\n   * @param decimals Number of decimals in amount to burn\n   */\n  async burnChecked(\n    account: PublicKey,\n    owner: any,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): Promise<void> {\n    let ownerPublicKey;\n    let signers;\n    if (isAccount(owner)) {\n      ownerPublicKey = owner.publicKey;\n      signers = [owner];\n    } else {\n      ownerPublicKey = owner;\n      signers = multiSigners;\n    }\n    await sendAndConfirmTransaction(\n      'BurnChecked',\n      this.connection,\n      new Transaction().add(\n        Token.createBurnCheckedInstruction(\n          this.programId,\n          this.publicKey,\n          account,\n          ownerPublicKey,\n          multiSigners,\n          amount,\n          decimals,\n        ),\n      ),\n      this.payer,\n      ...signers,\n    );\n  }\n\n  /**\n   * Sync amount in native SPL token account to underlying lamports\n   *\n   * @param nativeAccount Account to sync\n   */\n  async syncNative(nativeAccount: PublicKey): Promise<void> {\n    await sendAndConfirmTransaction(\n      'SyncNative',\n      this.connection,\n      new Transaction().add(\n        Token.createSyncNativeInstruction(this.programId, nativeAccount),\n      ),\n      this.payer,\n    );\n  }\n\n  /**\n   * Construct an InitializeMint instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param decimals Number of decimals in token account amounts\n   * @param mintAuthority Minting authority\n   * @param freezeAuthority Optional authority that can freeze token accounts\n   */\n  static createInitMintInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    decimals: number,\n    mintAuthority: PublicKey,\n    freezeAuthority: PublicKey | null,\n  ): TransactionInstruction {\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('decimals'),\n      Layout.publicKey('mintAuthority'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('freezeAuthority'),\n    ]);\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 0, // InitializeMint instruction\n          decimals,\n          mintAuthority: pubkeyToBuffer(mintAuthority),\n          option: freezeAuthority === null ? 0 : 1,\n          freezeAuthority: pubkeyToBuffer(freezeAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an InitializeAccount instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param account New account\n   * @param owner Owner of the new account\n   */\n  static createInitAccountInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n  ): TransactionInstruction {\n    const keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 1, // InitializeAccount instruction\n      },\n      data,\n    );\n\n    return new TransactionInstruction({\n      keys,\n      programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Transfer instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   */\n  static createTransferInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 3, // Transfer instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an Approve instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   */\n  static createApproveInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 4, // Approve instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Revoke instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createRevokeInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 5, // Approve instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SetAuthority instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param newAuthority New authority of the account\n   * @param authorityType Type of authority to set\n   * @param currentAuthority Current authority of the specified type\n   * @param multiSigners Signing accounts if `currentAuthority` is a multiSig\n   */\n  static createSetAuthorityInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    newAuthority: PublicKey | null,\n    authorityType: AuthorityType,\n    currentAuthority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const commandDataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u8('authorityType'),\n      BufferLayout.u8('option'),\n      Layout.publicKey('newAuthority'),\n    ]);\n\n    let data = Buffer.alloc(1024);\n    {\n      const encodeLength = commandDataLayout.encode(\n        {\n          instruction: 6, // SetAuthority instruction\n          authorityType: AuthorityTypeCodes[authorityType],\n          option: newAuthority === null ? 0 : 1,\n          newAuthority: pubkeyToBuffer(newAuthority || new PublicKey(0)),\n        },\n        data,\n      );\n      data = data.slice(0, encodeLength);\n    }\n\n    let keys = [{pubkey: account, isSigner: false, isWritable: true}];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: currentAuthority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: currentAuthority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintTo instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   */\n  static createMintToInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 7, // MintTo instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Burn instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 8, // Burn instruction\n        amount: new u64(amount).toBuffer(),\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Close instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to close\n   * @param dest Account to receive the remaining balance of the closed account\n   * @param authority Account Close authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createCloseAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    dest: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 9, // CloseAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Freeze instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to freeze\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createFreezeAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 10, // FreezeAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a Thaw instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Account to thaw\n   * @param mint Mint account\n   * @param authority Mint freeze authority\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   */\n  static createThawAccountInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 11, // ThawAccount instruction\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: authority, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a TransferChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param source Source account\n   * @param mint Mint account\n   * @param destination Destination account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Number of tokens to transfer\n   * @param decimals Number of decimals in transfer amount\n   */\n  static createTransferCheckedInstruction(\n    programId: PublicKey,\n    source: PublicKey,\n    mint: PublicKey,\n    destination: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 12, // TransferChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: source, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: destination, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct an ApproveChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param account Public key of the account\n   * @param mint Mint account\n   * @param delegate Account authorized to perform a transfer of tokens from the source account\n   * @param owner Owner of the source account\n   * @param multiSigners Signing accounts if `owner` is a multiSig\n   * @param amount Maximum number of tokens the delegate may transfer\n   * @param decimals Number of decimals in approve amount\n   */\n  static createApproveCheckedInstruction(\n    programId: PublicKey,\n    account: PublicKey,\n    mint: PublicKey,\n    delegate: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 13, // ApproveChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: delegate, isSigner: false, isWritable: false},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({pubkey: owner, isSigner: true, isWritable: false});\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a MintToChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Public key of the mint\n   * @param dest Public key of the account to mint to\n   * @param authority The mint authority\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount Amount to mint\n   * @param decimals Number of decimals in amount to mint\n   */\n  static createMintToCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    dest: PublicKey,\n    authority: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 14, // MintToChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: mint, isSigner: false, isWritable: true},\n      {pubkey: dest, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: authority,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: authority, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a BurnChecked instruction\n   *\n   * @param programId SPL Token program account\n   * @param mint Mint for the account\n   * @param account Account to burn tokens from\n   * @param owner Owner of the account\n   * @param multiSigners Signing accounts if `authority` is a multiSig\n   * @param amount amount to burn\n   */\n  static createBurnCheckedInstruction(\n    programId: PublicKey,\n    mint: PublicKey,\n    account: PublicKey,\n    owner: PublicKey,\n    multiSigners: Array<Signer>,\n    amount: number | u64,\n    decimals: number,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([\n      BufferLayout.u8('instruction'),\n      Layout.uint64('amount'),\n      BufferLayout.u8('decimals'),\n    ]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 15, // BurnChecked instruction\n        amount: new u64(amount).toBuffer(),\n        decimals,\n      },\n      data,\n    );\n\n    let keys = [\n      {pubkey: account, isSigner: false, isWritable: true},\n      {pubkey: mint, isSigner: false, isWritable: true},\n    ];\n    if (multiSigners.length === 0) {\n      keys.push({\n        pubkey: owner,\n        isSigner: true,\n        isWritable: false,\n      });\n    } else {\n      keys.push({pubkey: owner, isSigner: false, isWritable: false});\n      multiSigners.forEach(signer =>\n        keys.push({\n          pubkey: signer.publicKey,\n          isSigner: true,\n          isWritable: false,\n        }),\n      );\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: programId,\n      data,\n    });\n  }\n\n  /**\n   * Construct a SyncNative instruction\n   *\n   * @param programId SPL Token program account\n   * @param nativeAccount Account to sync lamports from\n   */\n  static createSyncNativeInstruction(\n    programId: PublicKey,\n    nativeAccount: PublicKey,\n  ): TransactionInstruction {\n    const dataLayout = BufferLayout.struct([BufferLayout.u8('instruction')]);\n\n    const data = Buffer.alloc(dataLayout.span);\n    dataLayout.encode(\n      {\n        instruction: 17, // SyncNative instruction\n      },\n      data,\n    );\n\n    let keys = [{pubkey: nativeAccount, isSigner: false, isWritable: true}];\n    return new TransactionInstruction({keys, programId: programId, data});\n  }\n\n  /**\n   * Get the address for the associated token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param owner Owner of the new account\n   * @return Public key of the associated token account\n   */\n  static async getAssociatedTokenAddress(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    owner: PublicKey,\n    allowOwnerOffCurve: boolean = false,\n  ): Promise<PublicKey> {\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) {\n      throw new Error(`Owner cannot sign: ${owner.toString()}`);\n    }\n    return (\n      await PublicKey.findProgramAddress(\n        [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n        associatedProgramId,\n      )\n    )[0];\n  }\n\n  /**\n   * Construct the AssociatedTokenProgram instruction to create the associated\n   * token account\n   *\n   * @param associatedProgramId SPL Associated Token program account\n   * @param programId SPL Token program account\n   * @param mint Token mint account\n   * @param associatedAccount New associated account\n   * @param owner Owner of the new account\n   * @param payer Payer of fees\n   */\n  static createAssociatedTokenAccountInstruction(\n    associatedProgramId: PublicKey,\n    programId: PublicKey,\n    mint: PublicKey,\n    associatedAccount: PublicKey,\n    owner: PublicKey,\n    payer: PublicKey,\n  ): TransactionInstruction {\n    const data = Buffer.alloc(0);\n\n    let keys = [\n      {pubkey: payer, isSigner: true, isWritable: true},\n      {pubkey: associatedAccount, isSigner: false, isWritable: true},\n      {pubkey: owner, isSigner: false, isWritable: false},\n      {pubkey: mint, isSigner: false, isWritable: false},\n      {pubkey: SystemProgram.programId, isSigner: false, isWritable: false},\n      {pubkey: programId, isSigner: false, isWritable: false},\n      {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n    ];\n\n    return new TransactionInstruction({\n      keys,\n      programId: associatedProgramId,\n      data,\n    });\n  }\n}\n", null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "export default require(\"./node_modules/@metaplex-foundation/mpl-token-metadata/dist/src/mpl-token-metadata.js\");"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAY;AAAZ,KAAA,SAAYA,cAAW;AACrB,MAAAA,aAAAA,aAAA,mBAAA,KAAA;AACA,MAAAA,aAAAA,aAAA,gBAAA,KAAA;AACA,MAAAA,aAAAA,aAAA,eAAA,KAAA;AACA,MAAAA,aAAAA,aAAA,qBAAA,KAAA;AACA,MAAAA,aAAAA,aAAA,qBAAA,KAAA;AACA,MAAAA,aAAAA,aAAA,mBAAA,KAAA;AACA,MAAAA,aAAAA,aAAA,wBAAA,KAAA;AACA,MAAAA,aAAAA,aAAA,+BAAA,KAAA;IACF,GATY,cAAA,QAAA,gBAAA,QAAA,cAAW,CAAA,EAAA;AAWvB,QAAY;AAAZ,KAAA,SAAYC,YAAS;AACnB,MAAAA,WAAAA,WAAA,UAAA,KAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,KAAA;AACA,MAAAA,WAAAA,WAAA,cAAA,KAAA;IACF,GAJY,YAAA,QAAA,cAAA,QAAA,YAAS,CAAA,EAAA;AAMrB,QAAY;AAAZ,KAAA,SAAYC,gBAAa;AACvB,MAAAA,eAAAA,eAAA,iBAAA,KAAA;AACA,MAAAA,eAAAA,eAAA,mBAAA,KAAA;AACA,MAAAA,eAAAA,eAAA,cAAA,KAAA;AACA,MAAAA,eAAAA,eAAA,wBAAA,KAAA;IACF,GALY,gBAAA,QAAA,kBAAA,QAAA,gBAAa,CAAA,EAAA;;;;;ACjBzB;AAAA;AAAA;AAUA,QAAM,SAAS;AACf,QAAMC,WAAU;AAChB,QAAM,sBACH,OAAO,WAAW,cAAc,OAAO,OAAO,WAAW,aACtD,OAAO,OAAO,4BAA4B,IAC1C;AAEN,YAAQ,SAASC;AACjB,YAAQ,aAAa;AACrB,YAAQ,oBAAoB;AAE5B,QAAM,eAAe;AACrB,YAAQ,aAAa;AAgBrB,IAAAA,QAAO,sBAAsB,kBAAkB;AAE/C,QAAI,CAACA,QAAO,uBAAuB,OAAO,YAAY,eAClD,OAAO,QAAQ,UAAU,YAAY;AACvC,cAAQ;AAAA,QACN;AAAA,MAEF;AAAA,IACF;AAEA,aAAS,oBAAqB;AAE5B,UAAI;AACF,cAAM,MAAM,IAAI,WAAW,CAAC;AAC5B,cAAM,QAAQ,EAAE,KAAK,WAAY;AAAE,iBAAO;AAAA,QAAG,EAAE;AAC/C,eAAO,eAAe,OAAO,WAAW,SAAS;AACjD,eAAO,eAAe,KAAK,KAAK;AAChC,eAAO,IAAI,IAAI,MAAM;AAAA,MACvB,SAAS,GAAP;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,eAAeA,QAAO,WAAW,UAAU;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,YAAI,CAACA,QAAO,SAAS,IAAI;AAAG,iBAAO;AACnC,eAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AAED,WAAO,eAAeA,QAAO,WAAW,UAAU;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,YAAI,CAACA,QAAO,SAAS,IAAI;AAAG,iBAAO;AACnC,eAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AAED,aAAS,aAAc,QAAQ;AAC7B,UAAI,SAAS,cAAc;AACzB,cAAM,IAAI,WAAW,gBAAgB,SAAS,gCAAgC;AAAA,MAChF;AAEA,YAAM,MAAM,IAAI,WAAW,MAAM;AACjC,aAAO,eAAe,KAAKA,QAAO,SAAS;AAC3C,aAAO;AAAA,IACT;AAYA,aAASA,QAAQ,KAAK,kBAAkB,QAAQ;AAE9C,UAAI,OAAO,QAAQ,UAAU;AAC3B,YAAI,OAAO,qBAAqB,UAAU;AACxC,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,QACF;AACA,eAAO,YAAY,GAAG;AAAA,MACxB;AACA,aAAO,KAAK,KAAK,kBAAkB,MAAM;AAAA,IAC3C;AAEA,IAAAA,QAAO,WAAW;AAElB,aAAS,KAAM,OAAO,kBAAkB,QAAQ;AAC9C,UAAI,OAAO,UAAU,UAAU;AAC7B,eAAO,WAAW,OAAO,gBAAgB;AAAA,MAC3C;AAEA,UAAI,YAAY,OAAO,KAAK,GAAG;AAC7B,eAAO,cAAc,KAAK;AAAA,MAC5B;AAEA,UAAI,SAAS,MAAM;AACjB,cAAM,IAAI;AAAA,UACR,oHAC0C,OAAO;AAAA,QACnD;AAAA,MACF;AAEA,UAAI,WAAW,OAAO,WAAW,KAC5B,SAAS,WAAW,MAAM,QAAQ,WAAW,GAAI;AACpD,eAAO,gBAAgB,OAAO,kBAAkB,MAAM;AAAA,MACxD;AAEA,UAAI,OAAO,sBAAsB,gBAC5B,WAAW,OAAO,iBAAiB,KACnC,SAAS,WAAW,MAAM,QAAQ,iBAAiB,IAAK;AAC3D,eAAO,gBAAgB,OAAO,kBAAkB,MAAM;AAAA,MACxD;AAEA,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,YAAM,UAAU,MAAM,WAAW,MAAM,QAAQ;AAC/C,UAAI,WAAW,QAAQ,YAAY,OAAO;AACxC,eAAOA,QAAO,KAAK,SAAS,kBAAkB,MAAM;AAAA,MACtD;AAEA,YAAM,IAAI,WAAW,KAAK;AAC1B,UAAI;AAAG,eAAO;AAEd,UAAI,OAAO,WAAW,eAAe,OAAO,eAAe,QACvD,OAAO,MAAM,OAAO,iBAAiB,YAAY;AACnD,eAAOA,QAAO,KAAK,MAAM,OAAO,aAAa,QAAQ,GAAG,kBAAkB,MAAM;AAAA,MAClF;AAEA,YAAM,IAAI;AAAA,QACR,oHAC0C,OAAO;AAAA,MACnD;AAAA,IACF;AAUA,IAAAA,QAAO,OAAO,SAAU,OAAO,kBAAkB,QAAQ;AACvD,aAAO,KAAK,OAAO,kBAAkB,MAAM;AAAA,IAC7C;AAIA,WAAO,eAAeA,QAAO,WAAW,WAAW,SAAS;AAC5D,WAAO,eAAeA,SAAQ,UAAU;AAExC,aAAS,WAAY,MAAM;AACzB,UAAI,OAAO,SAAS,UAAU;AAC5B,cAAM,IAAI,UAAU,wCAAwC;AAAA,MAC9D,WAAW,OAAO,GAAG;AACnB,cAAM,IAAI,WAAW,gBAAgB,OAAO,gCAAgC;AAAA,MAC9E;AAAA,IACF;AAEA,aAAS,MAAO,MAAM,MAAM,UAAU;AACpC,iBAAW,IAAI;AACf,UAAI,QAAQ,GAAG;AACb,eAAO,aAAa,IAAI;AAAA,MAC1B;AACA,UAAI,SAAS,QAAW;AAItB,eAAO,OAAO,aAAa,WACvB,aAAa,IAAI,EAAE,KAAK,MAAM,QAAQ,IACtC,aAAa,IAAI,EAAE,KAAK,IAAI;AAAA,MAClC;AACA,aAAO,aAAa,IAAI;AAAA,IAC1B;AAMA,IAAAA,QAAO,QAAQ,SAAU,MAAM,MAAM,UAAU;AAC7C,aAAO,MAAM,MAAM,MAAM,QAAQ;AAAA,IACnC;AAEA,aAAS,YAAa,MAAM;AAC1B,iBAAW,IAAI;AACf,aAAO,aAAa,OAAO,IAAI,IAAI,QAAQ,IAAI,IAAI,CAAC;AAAA,IACtD;AAKA,IAAAA,QAAO,cAAc,SAAU,MAAM;AACnC,aAAO,YAAY,IAAI;AAAA,IACzB;AAIA,IAAAA,QAAO,kBAAkB,SAAU,MAAM;AACvC,aAAO,YAAY,IAAI;AAAA,IACzB;AAEA,aAAS,WAAY,QAAQ,UAAU;AACrC,UAAI,OAAO,aAAa,YAAY,aAAa,IAAI;AACnD,mBAAW;AAAA,MACb;AAEA,UAAI,CAACA,QAAO,WAAW,QAAQ,GAAG;AAChC,cAAM,IAAI,UAAU,uBAAuB,QAAQ;AAAA,MACrD;AAEA,YAAM,SAASC,YAAW,QAAQ,QAAQ,IAAI;AAC9C,UAAI,MAAM,aAAa,MAAM;AAE7B,YAAM,SAAS,IAAI,MAAM,QAAQ,QAAQ;AAEzC,UAAI,WAAW,QAAQ;AAIrB,cAAM,IAAI,MAAM,GAAG,MAAM;AAAA,MAC3B;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAe,OAAO;AAC7B,YAAM,SAAS,MAAM,SAAS,IAAI,IAAI,QAAQ,MAAM,MAAM,IAAI;AAC9D,YAAM,MAAM,aAAa,MAAM;AAC/B,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAClC,YAAI,KAAK,MAAM,KAAK;AAAA,MACtB;AACA,aAAO;AAAA,IACT;AAEA,aAAS,cAAe,WAAW;AACjC,UAAI,WAAW,WAAW,UAAU,GAAG;AACrC,cAAM,OAAO,IAAI,WAAW,SAAS;AACrC,eAAO,gBAAgB,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU;AAAA,MACtE;AACA,aAAO,cAAc,SAAS;AAAA,IAChC;AAEA,aAAS,gBAAiB,OAAO,YAAY,QAAQ;AACnD,UAAI,aAAa,KAAK,MAAM,aAAa,YAAY;AACnD,cAAM,IAAI,WAAW,sCAAsC;AAAA,MAC7D;AAEA,UAAI,MAAM,aAAa,cAAc,UAAU,IAAI;AACjD,cAAM,IAAI,WAAW,sCAAsC;AAAA,MAC7D;AAEA,UAAI;AACJ,UAAI,eAAe,UAAa,WAAW,QAAW;AACpD,cAAM,IAAI,WAAW,KAAK;AAAA,MAC5B,WAAW,WAAW,QAAW;AAC/B,cAAM,IAAI,WAAW,OAAO,UAAU;AAAA,MACxC,OAAO;AACL,cAAM,IAAI,WAAW,OAAO,YAAY,MAAM;AAAA,MAChD;AAGA,aAAO,eAAe,KAAKD,QAAO,SAAS;AAE3C,aAAO;AAAA,IACT;AAEA,aAAS,WAAY,KAAK;AACxB,UAAIA,QAAO,SAAS,GAAG,GAAG;AACxB,cAAM,MAAM,QAAQ,IAAI,MAAM,IAAI;AAClC,cAAM,MAAM,aAAa,GAAG;AAE5B,YAAI,IAAI,WAAW,GAAG;AACpB,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,KAAK,GAAG,GAAG,GAAG;AACvB,eAAO;AAAA,MACT;AAEA,UAAI,IAAI,WAAW,QAAW;AAC5B,YAAI,OAAO,IAAI,WAAW,YAAY,YAAY,IAAI,MAAM,GAAG;AAC7D,iBAAO,aAAa,CAAC;AAAA,QACvB;AACA,eAAO,cAAc,GAAG;AAAA,MAC1B;AAEA,UAAI,IAAI,SAAS,YAAY,MAAM,QAAQ,IAAI,IAAI,GAAG;AACpD,eAAO,cAAc,IAAI,IAAI;AAAA,MAC/B;AAAA,IACF;AAEA,aAAS,QAAS,QAAQ;AAGxB,UAAI,UAAU,cAAc;AAC1B,cAAM,IAAI,WAAW,4DACa,aAAa,SAAS,EAAE,IAAI,QAAQ;AAAA,MACxE;AACA,aAAO,SAAS;AAAA,IAClB;AAEA,aAAS,WAAY,QAAQ;AAC3B,UAAI,CAAC,UAAU,QAAQ;AACrB,iBAAS;AAAA,MACX;AACA,aAAOA,QAAO,MAAM,CAAC,MAAM;AAAA,IAC7B;AAEA,IAAAA,QAAO,WAAW,SAAS,SAAU,GAAG;AACtC,aAAO,KAAK,QAAQ,EAAE,cAAc,QAClC,MAAMA,QAAO;AAAA,IACjB;AAEA,IAAAA,QAAO,UAAU,SAASE,SAAS,GAAG,GAAG;AACvC,UAAI,WAAW,GAAG,UAAU;AAAG,YAAIF,QAAO,KAAK,GAAG,EAAE,QAAQ,EAAE,UAAU;AACxE,UAAI,WAAW,GAAG,UAAU;AAAG,YAAIA,QAAO,KAAK,GAAG,EAAE,QAAQ,EAAE,UAAU;AACxE,UAAI,CAACA,QAAO,SAAS,CAAC,KAAK,CAACA,QAAO,SAAS,CAAC,GAAG;AAC9C,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,UAAI,MAAM;AAAG,eAAO;AAEpB,UAAI,IAAI,EAAE;AACV,UAAI,IAAI,EAAE;AAEV,eAAS,IAAI,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,GAAG,IAAI,KAAK,EAAE,GAAG;AAClD,YAAI,EAAE,OAAO,EAAE,IAAI;AACjB,cAAI,EAAE;AACN,cAAI,EAAE;AACN;AAAA,QACF;AAAA,MACF;AAEA,UAAI,IAAI;AAAG,eAAO;AAClB,UAAI,IAAI;AAAG,eAAO;AAClB,aAAO;AAAA,IACT;AAEA,IAAAA,QAAO,aAAa,SAAS,WAAY,UAAU;AACjD,cAAQ,OAAO,QAAQ,EAAE,YAAY;AAAA,aAC9B;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACH,iBAAO;AAAA;AAEP,iBAAO;AAAA;AAAA,IAEb;AAEA,IAAAA,QAAO,SAAS,SAAS,OAAQ,MAAM,QAAQ;AAC7C,UAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,cAAM,IAAI,UAAU,6CAA6C;AAAA,MACnE;AAEA,UAAI,KAAK,WAAW,GAAG;AACrB,eAAOA,QAAO,MAAM,CAAC;AAAA,MACvB;AAEA,UAAI;AACJ,UAAI,WAAW,QAAW;AACxB,iBAAS;AACT,aAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,oBAAU,KAAK,GAAG;AAAA,QACpB;AAAA,MACF;AAEA,YAAMG,UAASH,QAAO,YAAY,MAAM;AACxC,UAAI,MAAM;AACV,WAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,YAAI,MAAM,KAAK;AACf,YAAI,WAAW,KAAK,UAAU,GAAG;AAC/B,cAAI,MAAM,IAAI,SAASG,QAAO,QAAQ;AACpC,gBAAI,CAACH,QAAO,SAAS,GAAG;AAAG,oBAAMA,QAAO,KAAK,GAAG;AAChD,gBAAI,KAAKG,SAAQ,GAAG;AAAA,UACtB,OAAO;AACL,uBAAW,UAAU,IAAI;AAAA,cACvBA;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF,WAAW,CAACH,QAAO,SAAS,GAAG,GAAG;AAChC,gBAAM,IAAI,UAAU,6CAA6C;AAAA,QACnE,OAAO;AACL,cAAI,KAAKG,SAAQ,GAAG;AAAA,QACtB;AACA,eAAO,IAAI;AAAA,MACb;AACA,aAAOA;AAAA,IACT;AAEA,aAASF,YAAY,QAAQ,UAAU;AACrC,UAAID,QAAO,SAAS,MAAM,GAAG;AAC3B,eAAO,OAAO;AAAA,MAChB;AACA,UAAI,YAAY,OAAO,MAAM,KAAK,WAAW,QAAQ,WAAW,GAAG;AACjE,eAAO,OAAO;AAAA,MAChB;AACA,UAAI,OAAO,WAAW,UAAU;AAC9B,cAAM,IAAI;AAAA,UACR,6FACmB,OAAO;AAAA,QAC5B;AAAA,MACF;AAEA,YAAM,MAAM,OAAO;AACnB,YAAM,YAAa,UAAU,SAAS,KAAK,UAAU,OAAO;AAC5D,UAAI,CAAC,aAAa,QAAQ;AAAG,eAAO;AAGpC,UAAI,cAAc;AAClB,iBAAS;AACP,gBAAQ;AAAA,eACD;AAAA,eACA;AAAA,eACA;AACH,mBAAO;AAAA,eACJ;AAAA,eACA;AACH,mBAAO,YAAY,MAAM,EAAE;AAAA,eACxB;AAAA,eACA;AAAA,eACA;AAAA,eACA;AACH,mBAAO,MAAM;AAAA,eACV;AACH,mBAAO,QAAQ;AAAA,eACZ;AACH,mBAAO,cAAc,MAAM,EAAE;AAAA;AAE7B,gBAAI,aAAa;AACf,qBAAO,YAAY,KAAK,YAAY,MAAM,EAAE;AAAA,YAC9C;AACA,wBAAY,KAAK,UAAU,YAAY;AACvC,0BAAc;AAAA;AAAA,MAEpB;AAAA,IACF;AACA,IAAAA,QAAO,aAAaC;AAEpB,aAAS,aAAc,UAAU,OAAO,KAAK;AAC3C,UAAI,cAAc;AASlB,UAAI,UAAU,UAAa,QAAQ,GAAG;AACpC,gBAAQ;AAAA,MACV;AAGA,UAAI,QAAQ,KAAK,QAAQ;AACvB,eAAO;AAAA,MACT;AAEA,UAAI,QAAQ,UAAa,MAAM,KAAK,QAAQ;AAC1C,cAAM,KAAK;AAAA,MACb;AAEA,UAAI,OAAO,GAAG;AACZ,eAAO;AAAA,MACT;AAGA,eAAS;AACT,iBAAW;AAEX,UAAI,OAAO,OAAO;AAChB,eAAO;AAAA,MACT;AAEA,UAAI,CAAC;AAAU,mBAAW;AAE1B,aAAO,MAAM;AACX,gBAAQ;AAAA,eACD;AACH,mBAAO,SAAS,MAAM,OAAO,GAAG;AAAA,eAE7B;AAAA,eACA;AACH,mBAAO,UAAU,MAAM,OAAO,GAAG;AAAA,eAE9B;AACH,mBAAO,WAAW,MAAM,OAAO,GAAG;AAAA,eAE/B;AAAA,eACA;AACH,mBAAO,YAAY,MAAM,OAAO,GAAG;AAAA,eAEhC;AACH,mBAAO,YAAY,MAAM,OAAO,GAAG;AAAA,eAEhC;AAAA,eACA;AAAA,eACA;AAAA,eACA;AACH,mBAAO,aAAa,MAAM,OAAO,GAAG;AAAA;AAGpC,gBAAI;AAAa,oBAAM,IAAI,UAAU,uBAAuB,QAAQ;AACpE,wBAAY,WAAW,IAAI,YAAY;AACvC,0BAAc;AAAA;AAAA,MAEpB;AAAA,IACF;AAQA,IAAAD,QAAO,UAAU,YAAY;AAE7B,aAAS,KAAM,GAAG,GAAG,GAAG;AACtB,YAAM,IAAI,EAAE;AACZ,QAAE,KAAK,EAAE;AACT,QAAE,KAAK;AAAA,IACT;AAEA,IAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,YAAM,MAAM,KAAK;AACjB,UAAI,MAAM,MAAM,GAAG;AACjB,cAAM,IAAI,WAAW,2CAA2C;AAAA,MAClE;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,aAAK,MAAM,GAAG,IAAI,CAAC;AAAA,MACrB;AACA,aAAO;AAAA,IACT;AAEA,IAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,YAAM,MAAM,KAAK;AACjB,UAAI,MAAM,MAAM,GAAG;AACjB,cAAM,IAAI,WAAW,2CAA2C;AAAA,MAClE;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,aAAK,MAAM,GAAG,IAAI,CAAC;AACnB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AAEA,IAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,YAAM,MAAM,KAAK;AACjB,UAAI,MAAM,MAAM,GAAG;AACjB,cAAM,IAAI,WAAW,2CAA2C;AAAA,MAClE;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,aAAK,MAAM,GAAG,IAAI,CAAC;AACnB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AACvB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AACvB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AAEA,IAAAA,QAAO,UAAU,WAAW,SAAS,WAAY;AAC/C,YAAM,SAAS,KAAK;AACpB,UAAI,WAAW;AAAG,eAAO;AACzB,UAAI,UAAU,WAAW;AAAG,eAAO,UAAU,MAAM,GAAG,MAAM;AAC5D,aAAO,aAAa,MAAM,MAAM,SAAS;AAAA,IAC3C;AAEA,IAAAA,QAAO,UAAU,iBAAiBA,QAAO,UAAU;AAEnD,IAAAA,QAAO,UAAU,SAAS,SAAS,OAAQ,GAAG;AAC5C,UAAI,CAACA,QAAO,SAAS,CAAC;AAAG,cAAM,IAAI,UAAU,2BAA2B;AACxE,UAAI,SAAS;AAAG,eAAO;AACvB,aAAOA,QAAO,QAAQ,MAAM,CAAC,MAAM;AAAA,IACrC;AAEA,IAAAA,QAAO,UAAU,UAAU,SAASI,WAAW;AAC7C,UAAI,MAAM;AACV,YAAM,MAAM,QAAQ;AACpB,YAAM,KAAK,SAAS,OAAO,GAAG,GAAG,EAAE,QAAQ,WAAW,KAAK,EAAE,KAAK;AAClE,UAAI,KAAK,SAAS;AAAK,eAAO;AAC9B,aAAO,aAAa,MAAM;AAAA,IAC5B;AACA,QAAI,qBAAqB;AACvB,MAAAJ,QAAO,UAAU,uBAAuBA,QAAO,UAAU;AAAA,IAC3D;AAEA,IAAAA,QAAO,UAAU,UAAU,SAASE,SAAS,QAAQ,OAAO,KAAK,WAAW,SAAS;AACnF,UAAI,WAAW,QAAQ,UAAU,GAAG;AAClC,iBAASF,QAAO,KAAK,QAAQ,OAAO,QAAQ,OAAO,UAAU;AAAA,MAC/D;AACA,UAAI,CAACA,QAAO,SAAS,MAAM,GAAG;AAC5B,cAAM,IAAI;AAAA,UACR,mFACoB,OAAO;AAAA,QAC7B;AAAA,MACF;AAEA,UAAI,UAAU,QAAW;AACvB,gBAAQ;AAAA,MACV;AACA,UAAI,QAAQ,QAAW;AACrB,cAAM,SAAS,OAAO,SAAS;AAAA,MACjC;AACA,UAAI,cAAc,QAAW;AAC3B,oBAAY;AAAA,MACd;AACA,UAAI,YAAY,QAAW;AACzB,kBAAU,KAAK;AAAA,MACjB;AAEA,UAAI,QAAQ,KAAK,MAAM,OAAO,UAAU,YAAY,KAAK,UAAU,KAAK,QAAQ;AAC9E,cAAM,IAAI,WAAW,oBAAoB;AAAA,MAC3C;AAEA,UAAI,aAAa,WAAW,SAAS,KAAK;AACxC,eAAO;AAAA,MACT;AACA,UAAI,aAAa,SAAS;AACxB,eAAO;AAAA,MACT;AACA,UAAI,SAAS,KAAK;AAChB,eAAO;AAAA,MACT;AAEA,iBAAW;AACX,eAAS;AACT,qBAAe;AACf,mBAAa;AAEb,UAAI,SAAS;AAAQ,eAAO;AAE5B,UAAI,IAAI,UAAU;AAClB,UAAI,IAAI,MAAM;AACd,YAAM,MAAM,KAAK,IAAI,GAAG,CAAC;AAEzB,YAAM,WAAW,KAAK,MAAM,WAAW,OAAO;AAC9C,YAAM,aAAa,OAAO,MAAM,OAAO,GAAG;AAE1C,eAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,YAAI,SAAS,OAAO,WAAW,IAAI;AACjC,cAAI,SAAS;AACb,cAAI,WAAW;AACf;AAAA,QACF;AAAA,MACF;AAEA,UAAI,IAAI;AAAG,eAAO;AAClB,UAAI,IAAI;AAAG,eAAO;AAClB,aAAO;AAAA,IACT;AAWA,aAAS,qBAAsBG,SAAQ,KAAK,YAAY,UAAU,KAAK;AAErE,UAAIA,QAAO,WAAW;AAAG,eAAO;AAGhC,UAAI,OAAO,eAAe,UAAU;AAClC,mBAAW;AACX,qBAAa;AAAA,MACf,WAAW,aAAa,YAAY;AAClC,qBAAa;AAAA,MACf,WAAW,aAAa,aAAa;AACnC,qBAAa;AAAA,MACf;AACA,mBAAa,CAAC;AACd,UAAI,YAAY,UAAU,GAAG;AAE3B,qBAAa,MAAM,IAAKA,QAAO,SAAS;AAAA,MAC1C;AAGA,UAAI,aAAa;AAAG,qBAAaA,QAAO,SAAS;AACjD,UAAI,cAAcA,QAAO,QAAQ;AAC/B,YAAI;AAAK,iBAAO;AAAA;AACX,uBAAaA,QAAO,SAAS;AAAA,MACpC,WAAW,aAAa,GAAG;AACzB,YAAI;AAAK,uBAAa;AAAA;AACjB,iBAAO;AAAA,MACd;AAGA,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAMH,QAAO,KAAK,KAAK,QAAQ;AAAA,MACjC;AAGA,UAAIA,QAAO,SAAS,GAAG,GAAG;AAExB,YAAI,IAAI,WAAW,GAAG;AACpB,iBAAO;AAAA,QACT;AACA,eAAO,aAAaG,SAAQ,KAAK,YAAY,UAAU,GAAG;AAAA,MAC5D,WAAW,OAAO,QAAQ,UAAU;AAClC,cAAM,MAAM;AACZ,YAAI,OAAO,WAAW,UAAU,YAAY,YAAY;AACtD,cAAI,KAAK;AACP,mBAAO,WAAW,UAAU,QAAQ,KAAKA,SAAQ,KAAK,UAAU;AAAA,UAClE,OAAO;AACL,mBAAO,WAAW,UAAU,YAAY,KAAKA,SAAQ,KAAK,UAAU;AAAA,UACtE;AAAA,QACF;AACA,eAAO,aAAaA,SAAQ,CAAC,GAAG,GAAG,YAAY,UAAU,GAAG;AAAA,MAC9D;AAEA,YAAM,IAAI,UAAU,sCAAsC;AAAA,IAC5D;AAEA,aAAS,aAAc,KAAK,KAAK,YAAY,UAAU,KAAK;AAC1D,UAAI,YAAY;AAChB,UAAI,YAAY,IAAI;AACpB,UAAI,YAAY,IAAI;AAEpB,UAAI,aAAa,QAAW;AAC1B,mBAAW,OAAO,QAAQ,EAAE,YAAY;AACxC,YAAI,aAAa,UAAU,aAAa,WACpC,aAAa,aAAa,aAAa,YAAY;AACrD,cAAI,IAAI,SAAS,KAAK,IAAI,SAAS,GAAG;AACpC,mBAAO;AAAA,UACT;AACA,sBAAY;AACZ,uBAAa;AACb,uBAAa;AACb,wBAAc;AAAA,QAChB;AAAA,MACF;AAEA,eAAS,KAAM,KAAKE,IAAG;AACrB,YAAI,cAAc,GAAG;AACnB,iBAAO,IAAIA;AAAA,QACb,OAAO;AACL,iBAAO,IAAI,aAAaA,KAAI,SAAS;AAAA,QACvC;AAAA,MACF;AAEA,UAAI;AACJ,UAAI,KAAK;AACP,YAAI,aAAa;AACjB,aAAK,IAAI,YAAY,IAAI,WAAW,KAAK;AACvC,cAAI,KAAK,KAAK,CAAC,MAAM,KAAK,KAAK,eAAe,KAAK,IAAI,IAAI,UAAU,GAAG;AACtE,gBAAI,eAAe;AAAI,2BAAa;AACpC,gBAAI,IAAI,aAAa,MAAM;AAAW,qBAAO,aAAa;AAAA,UAC5D,OAAO;AACL,gBAAI,eAAe;AAAI,mBAAK,IAAI;AAChC,yBAAa;AAAA,UACf;AAAA,QACF;AAAA,MACF,OAAO;AACL,YAAI,aAAa,YAAY;AAAW,uBAAa,YAAY;AACjE,aAAK,IAAI,YAAY,KAAK,GAAG,KAAK;AAChC,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,gBAAI,KAAK,KAAK,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,GAAG;AACrC,sBAAQ;AACR;AAAA,YACF;AAAA,UACF;AACA,cAAI;AAAO,mBAAO;AAAA,QACpB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,IAAAL,QAAO,UAAU,WAAW,SAAS,SAAU,KAAK,YAAY,UAAU;AACxE,aAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,MAAM;AAAA,IACrD;AAEA,IAAAA,QAAO,UAAU,UAAU,SAAS,QAAS,KAAK,YAAY,UAAU;AACtE,aAAO,qBAAqB,MAAM,KAAK,YAAY,UAAU,IAAI;AAAA,IACnE;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,KAAK,YAAY,UAAU;AAC9E,aAAO,qBAAqB,MAAM,KAAK,YAAY,UAAU,KAAK;AAAA,IACpE;AAEA,aAAS,SAAU,KAAK,QAAQ,QAAQ,QAAQ;AAC9C,eAAS,OAAO,MAAM,KAAK;AAC3B,YAAM,YAAY,IAAI,SAAS;AAC/B,UAAI,CAAC,QAAQ;AACX,iBAAS;AAAA,MACX,OAAO;AACL,iBAAS,OAAO,MAAM;AACtB,YAAI,SAAS,WAAW;AACtB,mBAAS;AAAA,QACX;AAAA,MACF;AAEA,YAAM,SAAS,OAAO;AAEtB,UAAI,SAAS,SAAS,GAAG;AACvB,iBAAS,SAAS;AAAA,MACpB;AACA,UAAI;AACJ,WAAK,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC3B,cAAM,SAAS,SAAS,OAAO,OAAO,IAAI,GAAG,CAAC,GAAG,EAAE;AACnD,YAAI,YAAY,MAAM;AAAG,iBAAO;AAChC,YAAI,SAAS,KAAK;AAAA,MACpB;AACA,aAAO;AAAA,IACT;AAEA,aAAS,UAAW,KAAK,QAAQ,QAAQ,QAAQ;AAC/C,aAAO,WAAW,YAAY,QAAQ,IAAI,SAAS,MAAM,GAAG,KAAK,QAAQ,MAAM;AAAA,IACjF;AAEA,aAAS,WAAY,KAAK,QAAQ,QAAQ,QAAQ;AAChD,aAAO,WAAW,aAAa,MAAM,GAAG,KAAK,QAAQ,MAAM;AAAA,IAC7D;AAEA,aAAS,YAAa,KAAK,QAAQ,QAAQ,QAAQ;AACjD,aAAO,WAAW,cAAc,MAAM,GAAG,KAAK,QAAQ,MAAM;AAAA,IAC9D;AAEA,aAAS,UAAW,KAAK,QAAQ,QAAQ,QAAQ;AAC/C,aAAO,WAAW,eAAe,QAAQ,IAAI,SAAS,MAAM,GAAG,KAAK,QAAQ,MAAM;AAAA,IACpF;AAEA,IAAAA,QAAO,UAAU,QAAQ,SAAS,MAAO,QAAQ,QAAQ,QAAQ,UAAU;AAEzE,UAAI,WAAW,QAAW;AACxB,mBAAW;AACX,iBAAS,KAAK;AACd,iBAAS;AAAA,MAEX,WAAW,WAAW,UAAa,OAAO,WAAW,UAAU;AAC7D,mBAAW;AACX,iBAAS,KAAK;AACd,iBAAS;AAAA,MAEX,WAAW,SAAS,MAAM,GAAG;AAC3B,iBAAS,WAAW;AACpB,YAAI,SAAS,MAAM,GAAG;AACpB,mBAAS,WAAW;AACpB,cAAI,aAAa;AAAW,uBAAW;AAAA,QACzC,OAAO;AACL,qBAAW;AACX,mBAAS;AAAA,QACX;AAAA,MACF,OAAO;AACL,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,YAAM,YAAY,KAAK,SAAS;AAChC,UAAI,WAAW,UAAa,SAAS;AAAW,iBAAS;AAEzD,UAAK,OAAO,SAAS,MAAM,SAAS,KAAK,SAAS,MAAO,SAAS,KAAK,QAAQ;AAC7E,cAAM,IAAI,WAAW,wCAAwC;AAAA,MAC/D;AAEA,UAAI,CAAC;AAAU,mBAAW;AAE1B,UAAI,cAAc;AAClB,iBAAS;AACP,gBAAQ;AAAA,eACD;AACH,mBAAO,SAAS,MAAM,QAAQ,QAAQ,MAAM;AAAA,eAEzC;AAAA,eACA;AACH,mBAAO,UAAU,MAAM,QAAQ,QAAQ,MAAM;AAAA,eAE1C;AAAA,eACA;AAAA,eACA;AACH,mBAAO,WAAW,MAAM,QAAQ,QAAQ,MAAM;AAAA,eAE3C;AAEH,mBAAO,YAAY,MAAM,QAAQ,QAAQ,MAAM;AAAA,eAE5C;AAAA,eACA;AAAA,eACA;AAAA,eACA;AACH,mBAAO,UAAU,MAAM,QAAQ,QAAQ,MAAM;AAAA;AAG7C,gBAAI;AAAa,oBAAM,IAAI,UAAU,uBAAuB,QAAQ;AACpE,wBAAY,KAAK,UAAU,YAAY;AACvC,0BAAc;AAAA;AAAA,MAEpB;AAAA,IACF;AAEA,IAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM,MAAM,UAAU,MAAM,KAAK,KAAK,QAAQ,MAAM,CAAC;AAAA,MACvD;AAAA,IACF;AAEA,aAAS,YAAa,KAAK,OAAO,KAAK;AACrC,UAAI,UAAU,KAAK,QAAQ,IAAI,QAAQ;AACrC,eAAO,OAAO,cAAc,GAAG;AAAA,MACjC,OAAO;AACL,eAAO,OAAO,cAAc,IAAI,MAAM,OAAO,GAAG,CAAC;AAAA,MACnD;AAAA,IACF;AAEA,aAAS,UAAW,KAAK,OAAO,KAAK;AACnC,YAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAC9B,YAAM,MAAM,CAAC;AAEb,UAAI,IAAI;AACR,aAAO,IAAI,KAAK;AACd,cAAM,YAAY,IAAI;AACtB,YAAI,YAAY;AAChB,YAAI,mBAAoB,YAAY,MAChC,IACC,YAAY,MACT,IACC,YAAY,MACT,IACA;AAEZ,YAAI,IAAI,oBAAoB,KAAK;AAC/B,cAAI,YAAY,WAAW,YAAY;AAEvC,kBAAQ;AAAA,iBACD;AACH,kBAAI,YAAY,KAAM;AACpB,4BAAY;AAAA,cACd;AACA;AAAA,iBACG;AACH,2BAAa,IAAI,IAAI;AACrB,mBAAK,aAAa,SAAU,KAAM;AAChC,iCAAiB,YAAY,OAAS,IAAO,aAAa;AAC1D,oBAAI,gBAAgB,KAAM;AACxB,8BAAY;AAAA,gBACd;AAAA,cACF;AACA;AAAA,iBACG;AACH,2BAAa,IAAI,IAAI;AACrB,0BAAY,IAAI,IAAI;AACpB,mBAAK,aAAa,SAAU,QAAS,YAAY,SAAU,KAAM;AAC/D,iCAAiB,YAAY,OAAQ,MAAO,aAAa,OAAS,IAAO,YAAY;AACrF,oBAAI,gBAAgB,SAAU,gBAAgB,SAAU,gBAAgB,QAAS;AAC/E,8BAAY;AAAA,gBACd;AAAA,cACF;AACA;AAAA,iBACG;AACH,2BAAa,IAAI,IAAI;AACrB,0BAAY,IAAI,IAAI;AACpB,2BAAa,IAAI,IAAI;AACrB,mBAAK,aAAa,SAAU,QAAS,YAAY,SAAU,QAAS,aAAa,SAAU,KAAM;AAC/F,iCAAiB,YAAY,OAAQ,MAAQ,aAAa,OAAS,MAAO,YAAY,OAAS,IAAO,aAAa;AACnH,oBAAI,gBAAgB,SAAU,gBAAgB,SAAU;AACtD,8BAAY;AAAA,gBACd;AAAA,cACF;AAAA;AAAA,QAEN;AAEA,YAAI,cAAc,MAAM;AAGtB,sBAAY;AACZ,6BAAmB;AAAA,QACrB,WAAW,YAAY,OAAQ;AAE7B,uBAAa;AACb,cAAI,KAAK,cAAc,KAAK,OAAQ,KAAM;AAC1C,sBAAY,QAAS,YAAY;AAAA,QACnC;AAEA,YAAI,KAAK,SAAS;AAClB,aAAK;AAAA,MACP;AAEA,aAAO,sBAAsB,GAAG;AAAA,IAClC;AAKA,QAAM,uBAAuB;AAE7B,aAAS,sBAAuB,YAAY;AAC1C,YAAM,MAAM,WAAW;AACvB,UAAI,OAAO,sBAAsB;AAC/B,eAAO,OAAO,aAAa,MAAM,QAAQ,UAAU;AAAA,MACrD;AAGA,UAAI,MAAM;AACV,UAAI,IAAI;AACR,aAAO,IAAI,KAAK;AACd,eAAO,OAAO,aAAa;AAAA,UACzB;AAAA,UACA,WAAW,MAAM,GAAG,KAAK,oBAAoB;AAAA,QAC/C;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,WAAY,KAAK,OAAO,KAAK;AACpC,UAAI,MAAM;AACV,YAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAE9B,eAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,eAAO,OAAO,aAAa,IAAI,KAAK,GAAI;AAAA,MAC1C;AACA,aAAO;AAAA,IACT;AAEA,aAAS,YAAa,KAAK,OAAO,KAAK;AACrC,UAAI,MAAM;AACV,YAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAE9B,eAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,eAAO,OAAO,aAAa,IAAI,EAAE;AAAA,MACnC;AACA,aAAO;AAAA,IACT;AAEA,aAAS,SAAU,KAAK,OAAO,KAAK;AAClC,YAAM,MAAM,IAAI;AAEhB,UAAI,CAAC,SAAS,QAAQ;AAAG,gBAAQ;AACjC,UAAI,CAAC,OAAO,MAAM,KAAK,MAAM;AAAK,cAAM;AAExC,UAAI,MAAM;AACV,eAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,eAAO,oBAAoB,IAAI;AAAA,MACjC;AACA,aAAO;AAAA,IACT;AAEA,aAAS,aAAc,KAAK,OAAO,KAAK;AACtC,YAAM,QAAQ,IAAI,MAAM,OAAO,GAAG;AAClC,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG;AAC5C,eAAO,OAAO,aAAa,MAAM,KAAM,MAAM,IAAI,KAAK,GAAI;AAAA,MAC5D;AACA,aAAO;AAAA,IACT;AAEA,IAAAA,QAAO,UAAU,QAAQ,SAAS,MAAO,OAAO,KAAK;AACnD,YAAM,MAAM,KAAK;AACjB,cAAQ,CAAC,CAAC;AACV,YAAM,QAAQ,SAAY,MAAM,CAAC,CAAC;AAElC,UAAI,QAAQ,GAAG;AACb,iBAAS;AACT,YAAI,QAAQ;AAAG,kBAAQ;AAAA,MACzB,WAAW,QAAQ,KAAK;AACtB,gBAAQ;AAAA,MACV;AAEA,UAAI,MAAM,GAAG;AACX,eAAO;AACP,YAAI,MAAM;AAAG,gBAAM;AAAA,MACrB,WAAW,MAAM,KAAK;AACpB,cAAM;AAAA,MACR;AAEA,UAAI,MAAM;AAAO,cAAM;AAEvB,YAAM,SAAS,KAAK,SAAS,OAAO,GAAG;AAEvC,aAAO,eAAe,QAAQA,QAAO,SAAS;AAE9C,aAAO;AAAA,IACT;AAKA,aAAS,YAAa,QAAQ,KAAK,QAAQ;AACzC,UAAK,SAAS,MAAO,KAAK,SAAS;AAAG,cAAM,IAAI,WAAW,oBAAoB;AAC/E,UAAI,SAAS,MAAM;AAAQ,cAAM,IAAI,WAAW,uCAAuC;AAAA,IACzF;AAEA,IAAAA,QAAO,UAAU,aACjBA,QAAO,UAAU,aAAa,SAAS,WAAY,QAAQC,aAAY,UAAU;AAC/E,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC;AAAU,oBAAY,QAAQA,aAAY,KAAK,MAAM;AAE1D,UAAI,MAAM,KAAK;AACf,UAAI,MAAM;AACV,UAAI,IAAI;AACR,aAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,eAAO,KAAK,SAAS,KAAK;AAAA,MAC5B;AAEA,aAAO;AAAA,IACT;AAEA,IAAAD,QAAO,UAAU,aACjBA,QAAO,UAAU,aAAa,SAAS,WAAY,QAAQC,aAAY,UAAU;AAC/E,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC,UAAU;AACb,oBAAY,QAAQA,aAAY,KAAK,MAAM;AAAA,MAC7C;AAEA,UAAI,MAAM,KAAK,SAAS,EAAEA;AAC1B,UAAI,MAAM;AACV,aAAOA,cAAa,MAAM,OAAO,MAAQ;AACvC,eAAO,KAAK,SAAS,EAAEA,eAAc;AAAA,MACvC;AAEA,aAAO;AAAA,IACT;AAEA,IAAAD,QAAO,UAAU,YACjBA,QAAO,UAAU,YAAY,SAAS,UAAW,QAAQ,UAAU;AACjE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,KAAK;AAAA,IACd;AAEA,IAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,KAAK,UAAW,KAAK,SAAS,MAAM;AAAA,IAC7C;AAEA,IAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAQ,KAAK,WAAW,IAAK,KAAK,SAAS;AAAA,IAC7C;AAEA,IAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,cAAS,KAAK,UACT,KAAK,SAAS,MAAM,IACpB,KAAK,SAAS,MAAM,MACpB,KAAK,SAAS,KAAK;AAAA,IAC1B;AAEA,IAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,aAAQ,KAAK,UAAU,YACnB,KAAK,SAAS,MAAM,KACrB,KAAK,SAAS,MAAM,IACrB,KAAK,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAiB,QAAQ;AACtF,eAAS,WAAW;AACpB,qBAAe,QAAQ,QAAQ;AAC/B,YAAM,QAAQ,KAAK;AACnB,YAAM,OAAO,KAAK,SAAS;AAC3B,UAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,oBAAY,QAAQ,KAAK,SAAS,CAAC;AAAA,MACrC;AAEA,YAAM,KAAK,QACT,KAAK,EAAE,UAAU,KAAK,IACtB,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK;AAExB,YAAM,KAAK,KAAK,EAAE,UAChB,KAAK,EAAE,UAAU,KAAK,IACtB,KAAK,EAAE,UAAU,KAAK,KACtB,OAAO,KAAK;AAEd,aAAO,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE;AAAA,IAC9C,CAAC;AAED,IAAAA,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAiB,QAAQ;AACtF,eAAS,WAAW;AACpB,qBAAe,QAAQ,QAAQ;AAC/B,YAAM,QAAQ,KAAK;AACnB,YAAM,OAAO,KAAK,SAAS;AAC3B,UAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,oBAAY,QAAQ,KAAK,SAAS,CAAC;AAAA,MACrC;AAEA,YAAM,KAAK,QAAQ,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,IACtB,KAAK,EAAE;AAET,YAAM,KAAK,KAAK,EAAE,UAAU,KAAK,KAC/B,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,IACtB;AAEF,cAAQ,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE;AAAA,IAC/C,CAAC;AAED,IAAAA,QAAO,UAAU,YAAY,SAAS,UAAW,QAAQC,aAAY,UAAU;AAC7E,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC;AAAU,oBAAY,QAAQA,aAAY,KAAK,MAAM;AAE1D,UAAI,MAAM,KAAK;AACf,UAAI,MAAM;AACV,UAAI,IAAI;AACR,aAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,eAAO,KAAK,SAAS,KAAK;AAAA,MAC5B;AACA,aAAO;AAEP,UAAI,OAAO;AAAK,eAAO,KAAK,IAAI,GAAG,IAAIA,WAAU;AAEjD,aAAO;AAAA,IACT;AAEA,IAAAD,QAAO,UAAU,YAAY,SAAS,UAAW,QAAQC,aAAY,UAAU;AAC7E,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC;AAAU,oBAAY,QAAQA,aAAY,KAAK,MAAM;AAE1D,UAAI,IAAIA;AACR,UAAI,MAAM;AACV,UAAI,MAAM,KAAK,SAAS,EAAE;AAC1B,aAAO,IAAI,MAAM,OAAO,MAAQ;AAC9B,eAAO,KAAK,SAAS,EAAE,KAAK;AAAA,MAC9B;AACA,aAAO;AAEP,UAAI,OAAO;AAAK,eAAO,KAAK,IAAI,GAAG,IAAIA,WAAU;AAEjD,aAAO;AAAA,IACT;AAEA,IAAAD,QAAO,UAAU,WAAW,SAAS,SAAU,QAAQ,UAAU;AAC/D,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,UAAI,EAAE,KAAK,UAAU;AAAO,eAAQ,KAAK;AACzC,cAAS,MAAO,KAAK,UAAU,KAAK;AAAA,IACtC;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,YAAM,MAAM,KAAK,UAAW,KAAK,SAAS,MAAM;AAChD,aAAQ,MAAM,QAAU,MAAM,aAAa;AAAA,IAC7C;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,YAAM,MAAM,KAAK,SAAS,KAAM,KAAK,WAAW;AAChD,aAAQ,MAAM,QAAU,MAAM,aAAa;AAAA,IAC7C;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,aAAQ,KAAK,UACV,KAAK,SAAS,MAAM,IACpB,KAAK,SAAS,MAAM,KACpB,KAAK,SAAS,MAAM;AAAA,IACzB;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,aAAQ,KAAK,WAAW,KACrB,KAAK,SAAS,MAAM,KACpB,KAAK,SAAS,MAAM,IACpB,KAAK,SAAS;AAAA,IACnB;AAEA,IAAAA,QAAO,UAAU,iBAAiB,mBAAmB,SAAS,eAAgB,QAAQ;AACpF,eAAS,WAAW;AACpB,qBAAe,QAAQ,QAAQ;AAC/B,YAAM,QAAQ,KAAK;AACnB,YAAM,OAAO,KAAK,SAAS;AAC3B,UAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,oBAAY,QAAQ,KAAK,SAAS,CAAC;AAAA,MACrC;AAEA,YAAM,MAAM,KAAK,SAAS,KACxB,KAAK,SAAS,KAAK,KAAK,IACxB,KAAK,SAAS,KAAK,KAAK,MACvB,QAAQ;AAEX,cAAQ,OAAO,GAAG,KAAK,OAAO,EAAE,KAC9B,OAAO,QACP,KAAK,EAAE,UAAU,KAAK,IACtB,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,EAAE;AAAA,IAC5B,CAAC;AAED,IAAAA,QAAO,UAAU,iBAAiB,mBAAmB,SAAS,eAAgB,QAAQ;AACpF,eAAS,WAAW;AACpB,qBAAe,QAAQ,QAAQ;AAC/B,YAAM,QAAQ,KAAK;AACnB,YAAM,OAAO,KAAK,SAAS;AAC3B,UAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,oBAAY,QAAQ,KAAK,SAAS,CAAC;AAAA,MACrC;AAEA,YAAM,OAAO,SAAS,MACpB,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,IACtB,KAAK,EAAE;AAET,cAAQ,OAAO,GAAG,KAAK,OAAO,EAAE,KAC9B,OAAO,KAAK,EAAE,UAAU,KAAK,KAC7B,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,IACtB,IAAI;AAAA,IACR,CAAC;AAED,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAOD,SAAQ,KAAK,MAAM,QAAQ,MAAM,IAAI,CAAC;AAAA,IAC/C;AAEA,IAAAC,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAOD,SAAQ,KAAK,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,IAChD;AAEA,IAAAC,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAOD,SAAQ,KAAK,MAAM,QAAQ,MAAM,IAAI,CAAC;AAAA,IAC/C;AAEA,IAAAC,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,oBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAOD,SAAQ,KAAK,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,IAChD;AAEA,aAAS,SAAU,KAAK,OAAO,QAAQ,KAAK,KAAK,KAAK;AACpD,UAAI,CAACC,QAAO,SAAS,GAAG;AAAG,cAAM,IAAI,UAAU,6CAA6C;AAC5F,UAAI,QAAQ,OAAO,QAAQ;AAAK,cAAM,IAAI,WAAW,mCAAmC;AACxF,UAAI,SAAS,MAAM,IAAI;AAAQ,cAAM,IAAI,WAAW,oBAAoB;AAAA,IAC1E;AAEA,IAAAA,QAAO,UAAU,cACjBA,QAAO,UAAU,cAAc,SAAS,YAAa,OAAO,QAAQC,aAAY,UAAU;AACxF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC,UAAU;AACb,cAAM,WAAW,KAAK,IAAI,GAAG,IAAIA,WAAU,IAAI;AAC/C,iBAAS,MAAM,OAAO,QAAQA,aAAY,UAAU,CAAC;AAAA,MACvD;AAEA,UAAI,MAAM;AACV,UAAI,IAAI;AACR,WAAK,UAAU,QAAQ;AACvB,aAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,aAAK,SAAS,KAAM,QAAQ,MAAO;AAAA,MACrC;AAEA,aAAO,SAASA;AAAA,IAClB;AAEA,IAAAD,QAAO,UAAU,cACjBA,QAAO,UAAU,cAAc,SAAS,YAAa,OAAO,QAAQC,aAAY,UAAU;AACxF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC,UAAU;AACb,cAAM,WAAW,KAAK,IAAI,GAAG,IAAIA,WAAU,IAAI;AAC/C,iBAAS,MAAM,OAAO,QAAQA,aAAY,UAAU,CAAC;AAAA,MACvD;AAEA,UAAI,IAAIA,cAAa;AACrB,UAAI,MAAM;AACV,WAAK,SAAS,KAAK,QAAQ;AAC3B,aAAO,EAAE,KAAK,MAAM,OAAO,MAAQ;AACjC,aAAK,SAAS,KAAM,QAAQ,MAAO;AAAA,MACrC;AAEA,aAAO,SAASA;AAAA,IAClB;AAEA,IAAAD,QAAO,UAAU,aACjBA,QAAO,UAAU,aAAa,SAAS,WAAY,OAAO,QAAQ,UAAU;AAC1E,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,iBAAS,MAAM,OAAO,QAAQ,GAAG,KAAM,CAAC;AACvD,WAAK,UAAW,QAAQ;AACxB,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,iBAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,CAAC;AACzD,WAAK,UAAW,QAAQ;AACxB,WAAK,SAAS,KAAM,UAAU;AAC9B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,iBAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,CAAC;AACzD,WAAK,UAAW,UAAU;AAC1B,WAAK,SAAS,KAAM,QAAQ;AAC5B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,iBAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,CAAC;AAC7D,WAAK,SAAS,KAAM,UAAU;AAC9B,WAAK,SAAS,KAAM,UAAU;AAC9B,WAAK,SAAS,KAAM,UAAU;AAC9B,WAAK,UAAW,QAAQ;AACxB,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,iBAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,CAAC;AAC7D,WAAK,UAAW,UAAU;AAC1B,WAAK,SAAS,KAAM,UAAU;AAC9B,WAAK,SAAS,KAAM,UAAU;AAC9B,WAAK,SAAS,KAAM,QAAQ;AAC5B,aAAO,SAAS;AAAA,IAClB;AAEA,aAAS,eAAgB,KAAK,OAAO,QAAQ,KAAK,KAAK;AACrD,iBAAW,OAAO,KAAK,KAAK,KAAK,QAAQ,CAAC;AAE1C,UAAI,KAAK,OAAO,QAAQ,OAAO,UAAU,CAAC;AAC1C,UAAI,YAAY;AAChB,WAAK,MAAM;AACX,UAAI,YAAY;AAChB,WAAK,MAAM;AACX,UAAI,YAAY;AAChB,WAAK,MAAM;AACX,UAAI,YAAY;AAChB,UAAI,KAAK,OAAO,SAAS,OAAO,EAAE,IAAI,OAAO,UAAU,CAAC;AACxD,UAAI,YAAY;AAChB,WAAK,MAAM;AACX,UAAI,YAAY;AAChB,WAAK,MAAM;AACX,UAAI,YAAY;AAChB,WAAK,MAAM;AACX,UAAI,YAAY;AAChB,aAAO;AAAA,IACT;AAEA,aAAS,eAAgB,KAAK,OAAO,QAAQ,KAAK,KAAK;AACrD,iBAAW,OAAO,KAAK,KAAK,KAAK,QAAQ,CAAC;AAE1C,UAAI,KAAK,OAAO,QAAQ,OAAO,UAAU,CAAC;AAC1C,UAAI,SAAS,KAAK;AAClB,WAAK,MAAM;AACX,UAAI,SAAS,KAAK;AAClB,WAAK,MAAM;AACX,UAAI,SAAS,KAAK;AAClB,WAAK,MAAM;AACX,UAAI,SAAS,KAAK;AAClB,UAAI,KAAK,OAAO,SAAS,OAAO,EAAE,IAAI,OAAO,UAAU,CAAC;AACxD,UAAI,SAAS,KAAK;AAClB,WAAK,MAAM;AACX,UAAI,SAAS,KAAK;AAClB,WAAK,MAAM;AACX,UAAI,SAAS,KAAK;AAClB,WAAK,MAAM;AACX,UAAI,UAAU;AACd,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,mBAAmB,mBAAmB,SAAS,iBAAkB,OAAO,SAAS,GAAG;AACnG,aAAO,eAAe,MAAM,OAAO,QAAQ,OAAO,CAAC,GAAG,OAAO,oBAAoB,CAAC;AAAA,IACpF,CAAC;AAED,IAAAA,QAAO,UAAU,mBAAmB,mBAAmB,SAAS,iBAAkB,OAAO,SAAS,GAAG;AACnG,aAAO,eAAe,MAAM,OAAO,QAAQ,OAAO,CAAC,GAAG,OAAO,oBAAoB,CAAC;AAAA,IACpF,CAAC;AAED,IAAAA,QAAO,UAAU,aAAa,SAAS,WAAY,OAAO,QAAQC,aAAY,UAAU;AACtF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,UAAU;AACb,cAAM,QAAQ,KAAK,IAAI,GAAI,IAAIA,cAAc,CAAC;AAE9C,iBAAS,MAAM,OAAO,QAAQA,aAAY,QAAQ,GAAG,CAAC,KAAK;AAAA,MAC7D;AAEA,UAAI,IAAI;AACR,UAAI,MAAM;AACV,UAAI,MAAM;AACV,WAAK,UAAU,QAAQ;AACvB,aAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,YAAI,QAAQ,KAAK,QAAQ,KAAK,KAAK,SAAS,IAAI,OAAO,GAAG;AACxD,gBAAM;AAAA,QACR;AACA,aAAK,SAAS,MAAO,QAAQ,OAAQ,KAAK,MAAM;AAAA,MAClD;AAEA,aAAO,SAASA;AAAA,IAClB;AAEA,IAAAD,QAAO,UAAU,aAAa,SAAS,WAAY,OAAO,QAAQC,aAAY,UAAU;AACtF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,UAAU;AACb,cAAM,QAAQ,KAAK,IAAI,GAAI,IAAIA,cAAc,CAAC;AAE9C,iBAAS,MAAM,OAAO,QAAQA,aAAY,QAAQ,GAAG,CAAC,KAAK;AAAA,MAC7D;AAEA,UAAI,IAAIA,cAAa;AACrB,UAAI,MAAM;AACV,UAAI,MAAM;AACV,WAAK,SAAS,KAAK,QAAQ;AAC3B,aAAO,EAAE,KAAK,MAAM,OAAO,MAAQ;AACjC,YAAI,QAAQ,KAAK,QAAQ,KAAK,KAAK,SAAS,IAAI,OAAO,GAAG;AACxD,gBAAM;AAAA,QACR;AACA,aAAK,SAAS,MAAO,QAAQ,OAAQ,KAAK,MAAM;AAAA,MAClD;AAEA,aAAO,SAASA;AAAA,IAClB;AAEA,IAAAD,QAAO,UAAU,YAAY,SAAS,UAAW,OAAO,QAAQ,UAAU;AACxE,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,iBAAS,MAAM,OAAO,QAAQ,GAAG,KAAM,IAAK;AAC3D,UAAI,QAAQ;AAAG,gBAAQ,MAAO,QAAQ;AACtC,WAAK,UAAW,QAAQ;AACxB,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,iBAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,MAAO;AAC/D,WAAK,UAAW,QAAQ;AACxB,WAAK,SAAS,KAAM,UAAU;AAC9B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,iBAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,MAAO;AAC/D,WAAK,UAAW,UAAU;AAC1B,WAAK,SAAS,KAAM,QAAQ;AAC5B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,iBAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,WAAW;AACvE,WAAK,UAAW,QAAQ;AACxB,WAAK,SAAS,KAAM,UAAU;AAC9B,WAAK,SAAS,KAAM,UAAU;AAC9B,WAAK,SAAS,KAAM,UAAU;AAC9B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC;AAAU,iBAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,WAAW;AACvE,UAAI,QAAQ;AAAG,gBAAQ,aAAa,QAAQ;AAC5C,WAAK,UAAW,UAAU;AAC1B,WAAK,SAAS,KAAM,UAAU;AAC9B,WAAK,SAAS,KAAM,UAAU;AAC9B,WAAK,SAAS,KAAM,QAAQ;AAC5B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAiB,OAAO,SAAS,GAAG;AACjG,aAAO,eAAe,MAAM,OAAO,QAAQ,CAAC,OAAO,oBAAoB,GAAG,OAAO,oBAAoB,CAAC;AAAA,IACxG,CAAC;AAED,IAAAA,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAiB,OAAO,SAAS,GAAG;AACjG,aAAO,eAAe,MAAM,OAAO,QAAQ,CAAC,OAAO,oBAAoB,GAAG,OAAO,oBAAoB,CAAC;AAAA,IACxG,CAAC;AAED,aAAS,aAAc,KAAK,OAAO,QAAQ,KAAK,KAAK,KAAK;AACxD,UAAI,SAAS,MAAM,IAAI;AAAQ,cAAM,IAAI,WAAW,oBAAoB;AACxE,UAAI,SAAS;AAAG,cAAM,IAAI,WAAW,oBAAoB;AAAA,IAC3D;AAEA,aAAS,WAAY,KAAK,OAAO,QAAQ,cAAc,UAAU;AAC/D,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,UAAU;AACb,qBAAa,KAAK,OAAO,QAAQ,GAAG,sBAAwB,qBAAuB;AAAA,MACrF;AACA,MAAAD,SAAQ,MAAM,KAAK,OAAO,QAAQ,cAAc,IAAI,CAAC;AACrD,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAC,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,aAAO,WAAW,MAAM,OAAO,QAAQ,MAAM,QAAQ;AAAA,IACvD;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,aAAO,WAAW,MAAM,OAAO,QAAQ,OAAO,QAAQ;AAAA,IACxD;AAEA,aAAS,YAAa,KAAK,OAAO,QAAQ,cAAc,UAAU;AAChE,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,UAAU;AACb,qBAAa,KAAK,OAAO,QAAQ,GAAG,uBAAyB,sBAAwB;AAAA,MACvF;AACA,MAAAD,SAAQ,MAAM,KAAK,OAAO,QAAQ,cAAc,IAAI,CAAC;AACrD,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAC,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,aAAO,YAAY,MAAM,OAAO,QAAQ,MAAM,QAAQ;AAAA,IACxD;AAEA,IAAAA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,aAAO,YAAY,MAAM,OAAO,QAAQ,OAAO,QAAQ;AAAA,IACzD;AAGA,IAAAA,QAAO,UAAU,OAAO,SAAS,KAAM,QAAQ,aAAa,OAAO,KAAK;AACtE,UAAI,CAACA,QAAO,SAAS,MAAM;AAAG,cAAM,IAAI,UAAU,6BAA6B;AAC/E,UAAI,CAAC;AAAO,gBAAQ;AACpB,UAAI,CAAC,OAAO,QAAQ;AAAG,cAAM,KAAK;AAClC,UAAI,eAAe,OAAO;AAAQ,sBAAc,OAAO;AACvD,UAAI,CAAC;AAAa,sBAAc;AAChC,UAAI,MAAM,KAAK,MAAM;AAAO,cAAM;AAGlC,UAAI,QAAQ;AAAO,eAAO;AAC1B,UAAI,OAAO,WAAW,KAAK,KAAK,WAAW;AAAG,eAAO;AAGrD,UAAI,cAAc,GAAG;AACnB,cAAM,IAAI,WAAW,2BAA2B;AAAA,MAClD;AACA,UAAI,QAAQ,KAAK,SAAS,KAAK;AAAQ,cAAM,IAAI,WAAW,oBAAoB;AAChF,UAAI,MAAM;AAAG,cAAM,IAAI,WAAW,yBAAyB;AAG3D,UAAI,MAAM,KAAK;AAAQ,cAAM,KAAK;AAClC,UAAI,OAAO,SAAS,cAAc,MAAM,OAAO;AAC7C,cAAM,OAAO,SAAS,cAAc;AAAA,MACtC;AAEA,YAAM,MAAM,MAAM;AAElB,UAAI,SAAS,UAAU,OAAO,WAAW,UAAU,eAAe,YAAY;AAE5E,aAAK,WAAW,aAAa,OAAO,GAAG;AAAA,MACzC,OAAO;AACL,mBAAW,UAAU,IAAI;AAAA,UACvB;AAAA,UACA,KAAK,SAAS,OAAO,GAAG;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAMA,IAAAA,QAAO,UAAU,OAAO,SAAS,KAAM,KAAK,OAAO,KAAK,UAAU;AAEhE,UAAI,OAAO,QAAQ,UAAU;AAC3B,YAAI,OAAO,UAAU,UAAU;AAC7B,qBAAW;AACX,kBAAQ;AACR,gBAAM,KAAK;AAAA,QACb,WAAW,OAAO,QAAQ,UAAU;AAClC,qBAAW;AACX,gBAAM,KAAK;AAAA,QACb;AACA,YAAI,aAAa,UAAa,OAAO,aAAa,UAAU;AAC1D,gBAAM,IAAI,UAAU,2BAA2B;AAAA,QACjD;AACA,YAAI,OAAO,aAAa,YAAY,CAACA,QAAO,WAAW,QAAQ,GAAG;AAChE,gBAAM,IAAI,UAAU,uBAAuB,QAAQ;AAAA,QACrD;AACA,YAAI,IAAI,WAAW,GAAG;AACpB,gBAAMM,QAAO,IAAI,WAAW,CAAC;AAC7B,cAAK,aAAa,UAAUA,QAAO,OAC/B,aAAa,UAAU;AAEzB,kBAAMA;AAAA,UACR;AAAA,QACF;AAAA,MACF,WAAW,OAAO,QAAQ,UAAU;AAClC,cAAM,MAAM;AAAA,MACd,WAAW,OAAO,QAAQ,WAAW;AACnC,cAAM,OAAO,GAAG;AAAA,MAClB;AAGA,UAAI,QAAQ,KAAK,KAAK,SAAS,SAAS,KAAK,SAAS,KAAK;AACzD,cAAM,IAAI,WAAW,oBAAoB;AAAA,MAC3C;AAEA,UAAI,OAAO,OAAO;AAChB,eAAO;AAAA,MACT;AAEA,cAAQ,UAAU;AAClB,YAAM,QAAQ,SAAY,KAAK,SAAS,QAAQ;AAEhD,UAAI,CAAC;AAAK,cAAM;AAEhB,UAAI;AACJ,UAAI,OAAO,QAAQ,UAAU;AAC3B,aAAK,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAC5B,eAAK,KAAK;AAAA,QACZ;AAAA,MACF,OAAO;AACL,cAAM,QAAQN,QAAO,SAAS,GAAG,IAC7B,MACAA,QAAO,KAAK,KAAK,QAAQ;AAC7B,cAAM,MAAM,MAAM;AAClB,YAAI,QAAQ,GAAG;AACb,gBAAM,IAAI,UAAU,gBAAgB,MAClC,mCAAmC;AAAA,QACvC;AACA,aAAK,IAAI,GAAG,IAAI,MAAM,OAAO,EAAE,GAAG;AAChC,eAAK,IAAI,SAAS,MAAM,IAAI;AAAA,QAC9B;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAMA,QAAM,SAAS,CAAC;AAChB,aAAS,EAAG,KAAKO,aAAY,MAAM;AACjC,aAAO,OAAO,MAAM,kBAAkB,KAAK;AAAA,QACzC,cAAe;AACb,gBAAM;AAEN,iBAAO,eAAe,MAAM,WAAW;AAAA,YACrC,OAAOA,YAAW,MAAM,MAAM,SAAS;AAAA,YACvC,UAAU;AAAA,YACV,cAAc;AAAA,UAChB,CAAC;AAGD,eAAK,OAAO,GAAG,KAAK,SAAS;AAG7B,eAAK;AAEL,iBAAO,KAAK;AAAA,QACd;AAAA,QAEA,IAAI,OAAQ;AACV,iBAAO;AAAA,QACT;AAAA,QAEA,IAAI,KAAM,OAAO;AACf,iBAAO,eAAe,MAAM,QAAQ;AAAA,YAClC,cAAc;AAAA,YACd,YAAY;AAAA,YACZ;AAAA,YACA,UAAU;AAAA,UACZ,CAAC;AAAA,QACH;AAAA,QAEA,WAAY;AACV,iBAAO,GAAG,KAAK,SAAS,SAAS,KAAK;AAAA,QACxC;AAAA,MACF;AAAA,IACF;AAEA;AAAA,MAAE;AAAA,MACA,SAAU,MAAM;AACd,YAAI,MAAM;AACR,iBAAO,GAAG;AAAA,QACZ;AAEA,eAAO;AAAA,MACT;AAAA,MAAG;AAAA,IAAU;AACf;AAAA,MAAE;AAAA,MACA,SAAU,MAAM,QAAQ;AACtB,eAAO,QAAQ,wDAAwD,OAAO;AAAA,MAChF;AAAA,MAAG;AAAA,IAAS;AACd;AAAA,MAAE;AAAA,MACA,SAAU,KAAK,OAAO,OAAO;AAC3B,YAAI,MAAM,iBAAiB;AAC3B,YAAI,WAAW;AACf,YAAI,OAAO,UAAU,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AACxD,qBAAW,sBAAsB,OAAO,KAAK,CAAC;AAAA,QAChD,WAAW,OAAO,UAAU,UAAU;AACpC,qBAAW,OAAO,KAAK;AACvB,cAAI,QAAQ,OAAO,CAAC,KAAK,OAAO,EAAE,KAAK,QAAQ,EAAE,OAAO,CAAC,KAAK,OAAO,EAAE,IAAI;AACzE,uBAAW,sBAAsB,QAAQ;AAAA,UAC3C;AACA,sBAAY;AAAA,QACd;AACA,eAAO,eAAe,mBAAmB;AACzC,eAAO;AAAA,MACT;AAAA,MAAG;AAAA,IAAU;AAEf,aAAS,sBAAuB,KAAK;AACnC,UAAI,MAAM;AACV,UAAI,IAAI,IAAI;AACZ,YAAM,QAAQ,IAAI,OAAO,MAAM,IAAI;AACnC,aAAO,KAAK,QAAQ,GAAG,KAAK,GAAG;AAC7B,cAAM,IAAI,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI;AAAA,MAClC;AACA,aAAO,GAAG,IAAI,MAAM,GAAG,CAAC,IAAI;AAAA,IAC9B;AAKA,aAAS,YAAa,KAAK,QAAQN,aAAY;AAC7C,qBAAe,QAAQ,QAAQ;AAC/B,UAAI,IAAI,YAAY,UAAa,IAAI,SAASA,iBAAgB,QAAW;AACvE,oBAAY,QAAQ,IAAI,UAAUA,cAAa,EAAE;AAAA,MACnD;AAAA,IACF;AAEA,aAAS,WAAY,OAAO,KAAK,KAAK,KAAK,QAAQA,aAAY;AAC7D,UAAI,QAAQ,OAAO,QAAQ,KAAK;AAC9B,cAAM,IAAI,OAAO,QAAQ,WAAW,MAAM;AAC1C,YAAI;AACJ,YAAIA,cAAa,GAAG;AAClB,cAAI,QAAQ,KAAK,QAAQ,OAAO,CAAC,GAAG;AAClC,oBAAQ,OAAO,YAAY,SAASA,cAAa,KAAK,IAAI;AAAA,UAC5D,OAAO;AACL,oBAAQ,SAAS,SAASA,cAAa,KAAK,IAAI,IAAI,kBACxCA,cAAa,KAAK,IAAI,IAAI;AAAA,UACxC;AAAA,QACF,OAAO;AACL,kBAAQ,MAAM,MAAM,YAAY,MAAM;AAAA,QACxC;AACA,cAAM,IAAI,OAAO,iBAAiB,SAAS,OAAO,KAAK;AAAA,MACzD;AACA,kBAAY,KAAK,QAAQA,WAAU;AAAA,IACrC;AAEA,aAAS,eAAgB,OAAO,MAAM;AACpC,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI,OAAO,qBAAqB,MAAM,UAAU,KAAK;AAAA,MAC7D;AAAA,IACF;AAEA,aAAS,YAAa,OAAO,QAAQ,MAAM;AACzC,UAAI,KAAK,MAAM,KAAK,MAAM,OAAO;AAC/B,uBAAe,OAAO,IAAI;AAC1B,cAAM,IAAI,OAAO,iBAAiB,QAAQ,UAAU,cAAc,KAAK;AAAA,MACzE;AAEA,UAAI,SAAS,GAAG;AACd,cAAM,IAAI,OAAO,yBAAyB;AAAA,MAC5C;AAEA,YAAM,IAAI,OAAO;AAAA,QAAiB,QAAQ;AAAA,QACR,MAAM,OAAO,IAAI,YAAY;AAAA,QAC7B;AAAA,MAAK;AAAA,IACzC;AAKA,QAAM,oBAAoB;AAE1B,aAAS,YAAa,KAAK;AAEzB,YAAM,IAAI,MAAM,GAAG,EAAE;AAErB,YAAM,IAAI,KAAK,EAAE,QAAQ,mBAAmB,EAAE;AAE9C,UAAI,IAAI,SAAS;AAAG,eAAO;AAE3B,aAAO,IAAI,SAAS,MAAM,GAAG;AAC3B,cAAM,MAAM;AAAA,MACd;AACA,aAAO;AAAA,IACT;AAEA,aAAS,YAAa,QAAQ,OAAO;AACnC,cAAQ,SAAS;AACjB,UAAI;AACJ,YAAM,SAAS,OAAO;AACtB,UAAI,gBAAgB;AACpB,YAAM,QAAQ,CAAC;AAEf,eAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC/B,oBAAY,OAAO,WAAW,CAAC;AAG/B,YAAI,YAAY,SAAU,YAAY,OAAQ;AAE5C,cAAI,CAAC,eAAe;AAElB,gBAAI,YAAY,OAAQ;AAEtB,mBAAK,SAAS,KAAK;AAAI,sBAAM,KAAK,KAAM,KAAM,GAAI;AAClD;AAAA,YACF,WAAW,IAAI,MAAM,QAAQ;AAE3B,mBAAK,SAAS,KAAK;AAAI,sBAAM,KAAK,KAAM,KAAM,GAAI;AAClD;AAAA,YACF;AAGA,4BAAgB;AAEhB;AAAA,UACF;AAGA,cAAI,YAAY,OAAQ;AACtB,iBAAK,SAAS,KAAK;AAAI,oBAAM,KAAK,KAAM,KAAM,GAAI;AAClD,4BAAgB;AAChB;AAAA,UACF;AAGA,uBAAa,gBAAgB,SAAU,KAAK,YAAY,SAAU;AAAA,QACpE,WAAW,eAAe;AAExB,eAAK,SAAS,KAAK;AAAI,kBAAM,KAAK,KAAM,KAAM,GAAI;AAAA,QACpD;AAEA,wBAAgB;AAGhB,YAAI,YAAY,KAAM;AACpB,eAAK,SAAS,KAAK;AAAG;AACtB,gBAAM,KAAK,SAAS;AAAA,QACtB,WAAW,YAAY,MAAO;AAC5B,eAAK,SAAS,KAAK;AAAG;AACtB,gBAAM;AAAA,YACJ,aAAa,IAAM;AAAA,YACnB,YAAY,KAAO;AAAA,UACrB;AAAA,QACF,WAAW,YAAY,OAAS;AAC9B,eAAK,SAAS,KAAK;AAAG;AACtB,gBAAM;AAAA,YACJ,aAAa,KAAM;AAAA,YACnB,aAAa,IAAM,KAAO;AAAA,YAC1B,YAAY,KAAO;AAAA,UACrB;AAAA,QACF,WAAW,YAAY,SAAU;AAC/B,eAAK,SAAS,KAAK;AAAG;AACtB,gBAAM;AAAA,YACJ,aAAa,KAAO;AAAA,YACpB,aAAa,KAAM,KAAO;AAAA,YAC1B,aAAa,IAAM,KAAO;AAAA,YAC1B,YAAY,KAAO;AAAA,UACrB;AAAA,QACF,OAAO;AACL,gBAAM,IAAI,MAAM,oBAAoB;AAAA,QACtC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,aAAc,KAAK;AAC1B,YAAM,YAAY,CAAC;AACnB,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AAEnC,kBAAU,KAAK,IAAI,WAAW,CAAC,IAAI,GAAI;AAAA,MACzC;AACA,aAAO;AAAA,IACT;AAEA,aAAS,eAAgB,KAAK,OAAO;AACnC,UAAI,GAAG,IAAI;AACX,YAAM,YAAY,CAAC;AACnB,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,aAAK,SAAS,KAAK;AAAG;AAEtB,YAAI,IAAI,WAAW,CAAC;AACpB,aAAK,KAAK;AACV,aAAK,IAAI;AACT,kBAAU,KAAK,EAAE;AACjB,kBAAU,KAAK,EAAE;AAAA,MACnB;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAe,KAAK;AAC3B,aAAO,OAAO,YAAY,YAAY,GAAG,CAAC;AAAA,IAC5C;AAEA,aAAS,WAAY,KAAK,KAAK,QAAQ,QAAQ;AAC7C,UAAI;AACJ,WAAK,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC3B,YAAK,IAAI,UAAU,IAAI,UAAY,KAAK,IAAI;AAAS;AACrD,YAAI,IAAI,UAAU,IAAI;AAAA,MACxB;AACA,aAAO;AAAA,IACT;AAKA,aAAS,WAAY,KAAK,MAAM;AAC9B,aAAO,eAAe,QACnB,OAAO,QAAQ,IAAI,eAAe,QAAQ,IAAI,YAAY,QAAQ,QACjE,IAAI,YAAY,SAAS,KAAK;AAAA,IACpC;AACA,aAAS,YAAa,KAAK;AAEzB,aAAO,QAAQ;AAAA,IACjB;AAIA,QAAM,sBAAuB,WAAY;AACvC,YAAM,WAAW;AACjB,YAAM,QAAQ,IAAI,MAAM,GAAG;AAC3B,eAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,cAAM,MAAM,IAAI;AAChB,iBAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,gBAAM,MAAM,KAAK,SAAS,KAAK,SAAS;AAAA,QAC1C;AAAA,MACF;AACA,aAAO;AAAA,IACT,EAAG;AAGH,aAAS,mBAAoB,IAAI;AAC/B,aAAO,OAAO,WAAW,cAAc,yBAAyB;AAAA,IAClE;AAEA,aAAS,yBAA0B;AACjC,YAAM,IAAI,MAAM,sBAAsB;AAAA,IACxC;AAAA;AAAA;;;;;;;;ACvjEA,QAAY;AAAZ,KAAA,SAAYO,YAAS;AACnB,MAAAA,WAAAA,WAAA,yBAAA,KAAA;AACA,MAAAA,WAAAA,WAAA,gCAAA,KAAA;AACA,MAAAA,WAAAA,WAAA,mCAAA,KAAA;AACA,MAAAA,WAAAA,WAAA,6BAAA,KAAA;IACF,GALY,YAAA,QAAA,cAAA,QAAA,YAAS,CAAA,EAAA;AAOrB,QAAa,gBAAb,cAAmC,MAAK;MAGtC,YAAY,WAAsB,SAAe;AAC/C,cAAM,OAAO;AACb,aAAK,YAAY;MACnB;;AANF,YAAA,gBAAA;AASO,QAAM,sBAA2C,MAAK;AAC3D,aAAO,IAAI,cAAc,UAAU,qBAAqB,eAAe;IACzE;AAFa,YAAA,sBAAmB;AAIzB,QAAM,6BAAkD,MAAK;AAClE,aAAO,IAAI,cAAc,UAAU,4BAA4B,cAAc;IAC/E;AAFa,YAAA,6BAA0B;AAIhC,QAAM,gCAAqD,MAAK;AACrE,aAAO,IAAI,cAAc,UAAU,+BAA+B,4BAA4B;IAChG;AAFa,YAAA,gCAA6B;AAInC,QAAM,0BAAmE,CAC9E,WACE;AACF,aAAO,IAAI,cAAc,UAAU,yBAAyB,2BAA2B,QAAQ;IACjG;AAJa,YAAA,0BAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BpC,QAAA,YAAA;AAEA,QAAA,WAAA;AACA,QAAA,WAAA;AAMA,QAAa,UAAb,MAAoB;MAKlB,YAAY,QAAsB,MAA0B;AAC1D,aAAK,SAAS,IAAI,UAAA,UAAU,MAAM;AAClC,aAAK,OAAO;MACd;MAEA,OAAO,KAAqC,SAAyB;AACnE,eAAO,IAAI,KAAK,QAAQ,QAAQ,QAAQ,IAAI;MAC9C;MAEA,OAAa,KAEX,YACA,QAAoB;;AAEpB,gBAAM,OAAO,MAAM,QAAQ,QAAQ,YAAY,MAAM;AAErD,iBAAO,IAAI,KAAK,QAAQ,IAAI;QAC9B,CAAC;;MAGD,OAAO,aAAa,OAAa;AAC/B,cAAM,IAAI,MAAM,0CAA0C;MAC5D;MAEA,OAAa,QAAQ,YAAwB,QAAoB;;AAC/D,gBAAM,OAAO,MAAM,WAAW,eAAe,IAAI,UAAA,UAAU,MAAM,CAAC;AAClE,cAAI,CAAC,MAAM;AACT,mBAAM,GAAA,SAAA,yBAAwB,MAAM;;AAGtC,iBAAA,OAAA,OAAA,OAAA,OAAA,CAAA,GAAY,IAAI,GAAA,EAAE,MAAM,SAAA,OAAO,KAAK,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,IAAI,EAAC,CAAA;QACjD,CAAC;;MAED,OAAa,SACX,YACA,SACA,aAAyB,UAAQ;;AAEjC,gBAAM,aAAa;AAEnB,gBAAM,WAA0E,CAAA;AAChF,mBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK,YAAY;AACnD,qBAAS,KACP,QAAQ,oBACN,YACA,QAAQ,MAAM,GAAG,KAAK,IAAI,QAAQ,QAAQ,IAAI,UAAU,CAAC,GACzD,UAAU,CACX;;AAIL,gBAAM,UAAU,oBAAI,IAAG;AACvB,WAAC,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,CAAC,WAAU;AAAA,gBAAA;AAC/C,mBAAA,CAAC,IAAI,KAAA,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,QAAO,OAAE,QAAA,OAAA,SAAA,KAAI,CAAA,CAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,MAAM,QAAQ,IAAI,GAAG,CAAC,CAAC;UAAC,CAAA;AAEvE,iBAAO;QACT,CAAC;;MAEO,OAAa,oBACnB,YACA,SACA,YAAsB;;AAEtB,gBAAM,OAAO,WAAW,WAAW,CAAC,QAAQ,IAAI,CAAC,MAAM,EAAE,SAAQ,CAAE,CAAC,GAAG,YAAY,QAAQ;AAC3F,gBAAM,YAAY,MAAO,WAAyC,YAChE,uBACA,IAAI;AAEN,cAAI,UAAU,OAAO;AACnB,kBAAM,IAAI,MAAM,uCAAuC,UAAU,MAAM,OAAO;;AAEhF,cAAI,CAAC,UAAU,OAAO;AAAO;AAC7B,gBAAM,QAAS,UAAU,OAAO,MAC7B,OAAO,OAAO,EACd,IAAI,CAAC,SAAS,OAAA,OAAA,OAAA,OAAA,CAAA,GACV,IAAI,GAAA,EACP,MAAM,SAAA,OAAO,KAAK,KAAK,KAAK,IAAI,QAAQ,EAAC,CAAA,CACzC;AACJ,iBAAO,MAAM,OAAO,CAAC,KAAK,MAAM,UAAS;AACvC,gBAAI,IAAI,QAAQ,QAAQ,IAAI;AAC5B,mBAAO;UACT,GAAG,oBAAI,IAAG,CAAqC;QACjD,CAAC;;MAED,YAAY,QAAoB;;AAC9B,gBAAO,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,MAAM,OAAO,IAAI,UAAA,UAAU,MAAM,CAAC;MACtD;MAEA,SAAM;;AACJ,eAAO;UACL,QAAQ,KAAK,OAAO,SAAQ;UAC5B,MAAM;YACJ,YAAY,CAAC,GAAC,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE;YACzB,SAAO,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,SAAQ,IAAI,UAAA,WAAU,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,KAAK,IAAI;YAC5D,WAAU,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE;YACrB,OAAM,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,SAAA,GAAE,KAAK,OAAM;;UAE9B,MAAM,KAAK;;MAEf;MAEA,WAAQ;AACN,eAAO,KAAK,UAAU,KAAK,OAAM,CAAE;MACrC;;AA5GF,YAAA,UAAA;;;;;ACTe,SAAR,gBAAiC,KAAK,KAAK,OAAO;AACvD,MAAI,OAAO,KAAK;AACd,WAAO,eAAe,KAAK,KAAK;AAAA,MAC9B;AAAA,MACA,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,OAAO;AACL,QAAI,OAAO;AAAA,EACb;AAEA,SAAO;AACT;AAbA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACqBA,SAAS,QAAS,KAAK;AACrB,MAAI,MAAM,IAAI;AAEd,MAAI,MAAM,IAAI,GAAG;AACf,UAAM,IAAI,MAAM,gDAAgD;EACpE;AAIE,MAAI,WAAW,IAAI,QAAQ,GAAG;AAC9B,MAAI,aAAa;AAAI,eAAW;AAEhC,MAAI,kBAAkB,aAAa,MAC/B,IACA,IAAK,WAAW;AAEpB,SAAO,CAAC,UAAU,eAAe;AACnC;AAGA,SAAS,WAAY,KAAK;AACxB,MAAI,OAAO,QAAQ,GAAG;AACtB,MAAI,WAAW,KAAK;AACpB,MAAI,kBAAkB,KAAK;AAC3B,UAAS,WAAW,mBAAmB,IAAI,IAAK;AAClD;AAEA,SAAS,YAAa,KAAK,UAAU,iBAAiB;AACpD,UAAS,WAAW,mBAAmB,IAAI,IAAK;AAClD;AAEA,SAAS,YAAa,KAAK;AACzB,MAAI;AACJ,MAAI,OAAO,QAAQ,GAAG;AACtB,MAAI,WAAW,KAAK;AACpB,MAAI,kBAAkB,KAAK;AAE3B,MAAI,MAAM,IAAI,IAAI,YAAY,KAAK,UAAU,eAAe,CAAC;AAE7D,MAAI,UAAU;AAGd,MAAI,MAAM,kBAAkB,IACxB,WAAW,IACX;AAEJ,MAAI;AACJ,OAAK,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC3B,UACG,UAAU,IAAI,WAAW,CAAC,MAAM,KAChC,UAAU,IAAI,WAAW,IAAI,CAAC,MAAM,KACpC,UAAU,IAAI,WAAW,IAAI,CAAC,MAAM,IACrC,UAAU,IAAI,WAAW,IAAI,CAAC;AAChC,QAAI,aAAc,OAAO,KAAM;AAC/B,QAAI,aAAc,OAAO,IAAK;AAC9B,QAAI,aAAa,MAAM;EAC3B;AAEE,MAAI,oBAAoB,GAAG;AACzB,UACG,UAAU,IAAI,WAAW,CAAC,MAAM,IAChC,UAAU,IAAI,WAAW,IAAI,CAAC,MAAM;AACvC,QAAI,aAAa,MAAM;EAC3B;AAEE,MAAI,oBAAoB,GAAG;AACzB,UACG,UAAU,IAAI,WAAW,CAAC,MAAM,KAChC,UAAU,IAAI,WAAW,IAAI,CAAC,MAAM,IACpC,UAAU,IAAI,WAAW,IAAI,CAAC,MAAM;AACvC,QAAI,aAAc,OAAO,IAAK;AAC9B,QAAI,aAAa,MAAM;EAC3B;AAEE,SAAO;AACT;AAEA,SAAS,gBAAiB,KAAK;AAC7B,SAAO,OAAO,OAAO,KAAK,MACxB,OAAO,OAAO,KAAK,MACnB,OAAO,OAAO,IAAI,MAClB,OAAO,MAAM;AACjB;AAEA,SAAS,YAAa,OAAO,OAAO,KAAK;AACvC,MAAI;AACJ,MAAI,SAAS,CAAA;AACb,WAAS,IAAI,OAAO,IAAI,KAAK,KAAK,GAAG;AACnC,WACI,MAAM,MAAM,KAAM,aAClB,MAAM,IAAI,MAAM,IAAK,UACtB,MAAM,IAAI,KAAK;AAClB,WAAO,KAAK,gBAAgB,GAAG,CAAC;EACpC;AACE,SAAO,OAAO,KAAK,EAAE;AACvB;AAEA,SAAS,cAAe,OAAO;AAC7B,MAAI;AACJ,MAAI,MAAM,MAAM;AAChB,MAAI,aAAa,MAAM;AACvB,MAAI,QAAQ,CAAA;AACZ,MAAI,iBAAiB;AAGrB,WAAS,IAAI,GAAG,OAAO,MAAM,YAAY,IAAI,MAAM,KAAK,gBAAgB;AACtE,UAAM,KAAK,YAAY,OAAO,GAAI,IAAI,iBAAkB,OAAO,OAAQ,IAAI,cAAe,CAAC;EAC/F;AAGE,MAAI,eAAe,GAAG;AACpB,UAAM,MAAM,MAAM;AAClB,UAAM;MACJ,OAAO,OAAO,KACd,OAAQ,OAAO,IAAK,MACpB;IACN;EACA,WAAa,eAAe,GAAG;AAC3B,WAAO,MAAM,MAAM,MAAM,KAAK,MAAM,MAAM;AAC1C,UAAM;MACJ,OAAO,OAAO,MACd,OAAQ,OAAO,IAAK,MACpB,OAAQ,OAAO,IAAK,MACpB;IACN;EACA;AAEE,SAAO,MAAM,KAAK,EAAE;AACtB;AKzBO,SAASC,UAAQ,KAAK,MAAM;AAEjC,MAAI,MAAM;IACR,MAAM,CAAA;IACN,SAAS;EACb;AAEE,MAAI,UAAU,UAAU;AAAG,QAAI,QAAQ,UAAU;AACjD,MAAI,UAAU,UAAU;AAAG,QAAI,SAAS,UAAU;AAClD,MAAI,UAAU,IAAI,GAAG;AAEnB,QAAI,aAAa;EACrB,WAAa,MAAM;AAEf,YAAQ,KAAK,IAAI;EACrB;AAEE,MAAI,YAAY,IAAI,UAAU;AAAG,QAAI,aAAa;AAClD,MAAI,YAAY,IAAI,KAAK;AAAG,QAAI,QAAQ;AACxC,MAAI,YAAY,IAAI,MAAM;AAAG,QAAI,SAAS;AAC1C,MAAI,YAAY,IAAI,aAAa;AAAG,QAAI,gBAAgB;AACxD,MAAI,IAAI;AAAQ,QAAI,UAAU;AAC9B,SAAO,YAAY,KAAK,KAAK,IAAI,KAAK;AACxC;AAiCA,SAAS,iBAAiB,KAAK,WAAW;AACxC,MAAI,QAAQA,UAAQ,OAAO;AAE3B,MAAI,OAAO;AACT,WAAO,UAAYA,UAAQ,OAAO,OAAO,KAAK,MAAM,MAC7C,UAAYA,UAAQ,OAAO,OAAO,KAAK;EAClD,OAAS;AACL,WAAO;EACX;AACA;AAGA,SAAS,eAAe,KAAK,WAAW;AACtC,SAAO;AACT;AAGA,SAAS,YAAY,OAAO;AAC1B,MAAI,OAAO,CAAA;AAEX,QAAM,QAAQ,SAAS,KAAK,KAAK;AAC/B,SAAK,OAAO;EAChB,CAAG;AAED,SAAO;AACT;AAGA,SAAS,YAAY,KAAK,OAAO,cAAc;AAG7C,MAAI,IAAI,iBACJ,SACA,WAAW,MAAM,OAAO,KAExB,MAAM,YAAYA,aAElB,EAAE,MAAM,eAAe,MAAM,YAAY,cAAc,QAAQ;AACjE,QAAI,MAAM,MAAM,QAAQ,cAAc,GAAG;AACzC,QAAI,CAAC,SAAS,GAAG,GAAG;AAClB,YAAM,YAAY,KAAK,KAAK,YAAY;IAC9C;AACI,WAAO;EACX;AAGE,MAAI,YAAY,gBAAgB,KAAK,KAAK;AAC1C,MAAI,WAAW;AACb,WAAO;EACX;AAGE,MAAI,OAAO,OAAO,KAAK,KAAK;AAC5B,MAAI,cAAc,YAAY,IAAI;AAElC,MAAI,IAAI,YAAY;AAClB,WAAO,OAAO,oBAAoB,KAAK;EAC3C;AAIE,MAAI,QAAQ,KAAK,MACT,KAAK,QAAQ,SAAS,KAAK,KAAK,KAAK,QAAQ,aAAa,KAAK,IAAI;AACzE,WAAO,YAAY,KAAK;EAC5B;AAGE,MAAI,KAAK,WAAW,GAAG;AACrB,QAAI,WAAW,KAAK,GAAG;AACrB,UAAI,OAAO,MAAM,OAAO,OAAO,MAAM,OAAO;AAC5C,aAAO,IAAI,QAAQ,cAAc,OAAO,KAAK,SAAS;IAC5D;AACI,QAAI,SAAS,KAAK,GAAG;AACnB,aAAO,IAAI,QAAQ,OAAO,UAAU,SAAS,KAAK,KAAK,GAAG,QAAQ;IACxE;AACI,QAAI,OAAO,KAAK,GAAG;AACjB,aAAO,IAAI,QAAQ,KAAK,UAAU,SAAS,KAAK,KAAK,GAAG,MAAM;IACpE;AACI,QAAI,QAAQ,KAAK,GAAG;AAClB,aAAO,YAAY,KAAK;IAC9B;EACA;AAEE,MAAI,OAAO,IAAI,QAAQ,OAAO,SAAS,CAAC,KAAK,GAAG;AAGhD,MAAI,QAAQ,KAAK,GAAG;AAClB,YAAQ;AACR,aAAS,CAAC,KAAK,GAAG;EACtB;AAGE,MAAI,WAAW,KAAK,GAAG;AACrB,QAAI,IAAI,MAAM,OAAO,OAAO,MAAM,OAAO;AACzC,WAAO,eAAe,IAAI;EAC9B;AAGE,MAAI,SAAS,KAAK,GAAG;AACnB,WAAO,MAAM,OAAO,UAAU,SAAS,KAAK,KAAK;EACrD;AAGE,MAAI,OAAO,KAAK,GAAG;AACjB,WAAO,MAAM,KAAK,UAAU,YAAY,KAAK,KAAK;EACtD;AAGE,MAAI,QAAQ,KAAK,GAAG;AAClB,WAAO,MAAM,YAAY,KAAK;EAClC;AAEE,MAAI,KAAK,WAAW,MAAM,CAAC,SAAS,MAAM,UAAU,IAAI;AACtD,WAAO,OAAO,KAAK,OAAO,OAAO;EACrC;AAEE,MAAI,eAAe,GAAG;AACpB,QAAI,SAAS,KAAK,GAAG;AACnB,aAAO,IAAI,QAAQ,OAAO,UAAU,SAAS,KAAK,KAAK,GAAG,QAAQ;IACxE,OAAW;AACL,aAAO,IAAI,QAAQ,YAAY,SAAS;IAC9C;EACA;AAEE,MAAI,KAAK,KAAK,KAAK;AAEnB,MAAI;AACJ,MAAI,OAAO;AACT,aAAS,YAAY,KAAK,OAAO,cAAc,aAAa,IAAI;EACpE,OAAS;AACL,aAAS,KAAK,IAAI,SAAS,KAAK;AAC9B,aAAO,eAAe,KAAK,OAAO,cAAc,aAAa,KAAK,KAAK;IAC7E,CAAK;EACL;AAEE,MAAI,KAAK,IAAG;AAEZ,SAAO,qBAAqB,QAAQ,MAAM,MAAM;AAClD;AAGA,SAAS,gBAAgB,KAAK,OAAO;AACnC,MAAI,YAAY,KAAK;AACnB,WAAO,IAAI,QAAQ,aAAa,WAAW;AAC7C,MAAI,SAAS,KAAK,GAAG;AACnB,QAAI,SAAS,MAAO,KAAK,UAAU,KAAK,EAAE,QAAQ,UAAU,EAAE,EACpB,QAAQ,MAAM,KAAK,EACnB,QAAQ,QAAQ,GAAG,IAAI;AACjE,WAAO,IAAI,QAAQ,QAAQ,QAAQ;EACvC;AACE,MAAI,SAAS,KAAK;AAChB,WAAO,IAAI,QAAQ,KAAK,OAAO,QAAQ;AACzC,MAAI,UAAU,KAAK;AACjB,WAAO,IAAI,QAAQ,KAAK,OAAO,SAAS;AAE1C,MAAI,OAAO,KAAK;AACd,WAAO,IAAI,QAAQ,QAAQ,MAAM;AACrC;AAGA,SAAS,YAAY,OAAO;AAC1B,SAAO,MAAM,MAAM,UAAU,SAAS,KAAK,KAAK,IAAI;AACtD;AAGA,SAAS,YAAY,KAAK,OAAO,cAAc,aAAa,MAAM;AAChE,MAAI,SAAS,CAAA;AACb,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC5C,QAAI,eAAe,OAAO,OAAO,CAAC,CAAC,GAAG;AACpC,aAAO,KAAK;QAAe;QAAK;QAAO;QAAc;QACjD,OAAO,CAAC;QAAG;MAAI,CAAC;IAC1B,OAAW;AACL,aAAO,KAAK,EAAE;IACpB;EACA;AACE,OAAK,QAAQ,SAAS,KAAK;AACzB,QAAI,CAAC,IAAI,MAAM,OAAO,GAAG;AACvB,aAAO,KAAK;QAAe;QAAK;QAAO;QAAc;QACjD;QAAK;MAAI,CAAC;IACpB;EACA,CAAG;AACD,SAAO;AACT;AAGA,SAAS,eAAe,KAAK,OAAO,cAAc,aAAa,KAAK,OAAO;AACzE,MAAI,MAAM,KAAK;AACf,SAAO,OAAO,yBAAyB,OAAO,GAAG,KAAK,EAAE,OAAO,MAAM,KAAI;AACzE,MAAI,KAAK,KAAK;AACZ,QAAI,KAAK,KAAK;AACZ,YAAM,IAAI,QAAQ,mBAAmB,SAAS;IACpD,OAAW;AACL,YAAM,IAAI,QAAQ,YAAY,SAAS;IAC7C;EACA,OAAS;AACL,QAAI,KAAK,KAAK;AACZ,YAAM,IAAI,QAAQ,YAAY,SAAS;IAC7C;EACA;AACE,MAAI,CAAC,eAAe,aAAa,GAAG,GAAG;AACrC,WAAO,MAAM,MAAM;EACvB;AACE,MAAI,CAAC,KAAK;AACR,QAAI,IAAI,KAAK,QAAQ,KAAK,KAAK,IAAI,GAAG;AACpC,UAAI,OAAO,YAAY,GAAG;AACxB,cAAM,YAAY,KAAK,KAAK,OAAO,IAAI;MAC/C,OAAa;AACL,cAAM,YAAY,KAAK,KAAK,OAAO,eAAe,CAAC;MAC3D;AACM,UAAI,IAAI,QAAQ,IAAI,IAAI,IAAI;AAC1B,YAAI,OAAO;AACT,gBAAM,IAAI,MAAM,IAAI,EAAE,IAAI,SAAS,MAAM;AACvC,mBAAO,OAAO;UAC1B,CAAW,EAAE,KAAK,IAAI,EAAE,OAAO,CAAC;QAChC,OAAe;AACL,gBAAM,OAAO,IAAI,MAAM,IAAI,EAAE,IAAI,SAAS,MAAM;AAC9C,mBAAO,QAAQ;UAC3B,CAAW,EAAE,KAAK,IAAI;QACtB;MACA;IACA,OAAW;AACL,YAAM,IAAI,QAAQ,cAAc,SAAS;IAC/C;EACA;AACE,MAAI,YAAY,IAAI,GAAG;AACrB,QAAI,SAAS,IAAI,MAAM,OAAO,GAAG;AAC/B,aAAO;IACb;AACI,WAAO,KAAK,UAAU,KAAK,GAAG;AAC9B,QAAI,KAAK,MAAM,8BAA8B,GAAG;AAC9C,aAAO,KAAK,OAAO,GAAG,KAAK,SAAS,CAAC;AACrC,aAAO,IAAI,QAAQ,MAAM,MAAM;IACrC,OAAW;AACL,aAAO,KAAK,QAAQ,MAAM,KAAK,EACnB,QAAQ,QAAQ,GAAG,EACnB,QAAQ,YAAY,GAAG;AACnC,aAAO,IAAI,QAAQ,MAAM,QAAQ;IACvC;EACA;AAEE,SAAO,OAAO,OAAO;AACvB;AAGA,SAAS,qBAAqB,QAAQ,MAAM,QAAQ;AAElD,MAAI,SAAS,OAAO,OAAO,SAAS,MAAM,KAAK;AAE7C,QAAI,IAAI,QAAQ,IAAI,KAAK;AAAG;AAC5B,WAAO,OAAO,IAAI,QAAQ,mBAAmB,EAAE,EAAE,SAAS;EAC9D,GAAK,CAAC;AAEJ,MAAI,SAAS,IAAI;AACf,WAAO,OAAO,MACN,SAAS,KAAK,KAAK,OAAO,SAC3B,MACA,OAAO,KAAK,OAAO,IACnB,MACA,OAAO;EAClB;AAEE,SAAO,OAAO,KAAK,OAAO,MAAM,OAAO,KAAK,IAAI,IAAI,MAAM,OAAO;AACnE;AAKO,SAAS,QAAQ,IAAI;AAC1B,SAAO,MAAM,QAAQ,EAAE;AACzB;AAEO,SAAS,UAAU,KAAK;AAC7B,SAAO,OAAO,QAAQ;AACxB;AAEO,SAAS,OAAO,KAAK;AAC1B,SAAO,QAAQ;AACjB;AAMO,SAAS,SAAS,KAAK;AAC5B,SAAO,OAAO,QAAQ;AACxB;AAEO,SAAS,SAAS,KAAK;AAC5B,SAAO,OAAO,QAAQ;AACxB;AAMO,SAAS,YAAY,KAAK;AAC/B,SAAO,QAAQ;AACjB;AAEO,SAAS,SAAS,IAAI;AAC3B,SAAO,SAAS,EAAE,KAAK,eAAe,EAAE,MAAM;AAChD;AAEO,SAAS,SAAS,KAAK;AAC5B,SAAO,OAAO,QAAQ,YAAY,QAAQ;AAC5C;AAEO,SAAS,OAAO,GAAG;AACxB,SAAO,SAAS,CAAC,KAAK,eAAe,CAAC,MAAM;AAC9C;AAEO,SAAS,QAAQ,GAAG;AACzB,SAAO,SAAS,CAAC,MACZ,eAAe,CAAC,MAAM,oBAAoB,aAAa;AAC9D;AAEO,SAAS,WAAW,KAAK;AAC9B,SAAO,OAAO,QAAQ;AACxB;AAEO,SAAS,YAAY,KAAK;AAC/B,SAAO,QAAQ,QACR,OAAO,QAAQ,aACf,OAAO,QAAQ,YACf,OAAO,QAAQ,YACf,OAAO,QAAQ,YACf,OAAO,QAAQ;AACxB;AAMA,SAAS,eAAe,GAAG;AACzB,SAAO,OAAO,UAAU,SAAS,KAAK,CAAC;AACzC;AA2CO,SAAS,QAAQ,QAAQ,KAAK;AAEnC,MAAI,CAAC,OAAO,CAAC,SAAS,GAAG;AAAG,WAAO;AAEnC,MAAI,OAAO,OAAO,KAAK,GAAG;AAC1B,MAAI,IAAI,KAAK;AACb,SAAO,KAAK;AACV,WAAO,KAAK,MAAM,IAAI,KAAK;EAC/B;AACE,SAAO;AACT;AAEA,SAAS,eAAe,KAAK,MAAM;AACjC,SAAO,OAAO,UAAU,eAAe,KAAK,KAAK,IAAI;AACvD;AC3jBA,SAAS,QAAQ,GAAG,GAAG;AACrB,MAAI,MAAM,GAAG;AACX,WAAO;EACX;AAEE,MAAI,IAAI,EAAE;AACV,MAAI,IAAI,EAAE;AAEV,WAAS,IAAI,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,GAAG,IAAI,KAAK,EAAE,GAAG;AAClD,QAAI,EAAE,OAAO,EAAE,IAAI;AACjB,UAAI,EAAE;AACN,UAAI,EAAE;AACN;IACN;EACA;AAEE,MAAI,IAAI,GAAG;AACT,WAAO;EACX;AACE,MAAI,IAAI,GAAG;AACT,WAAO;EACX;AACE,SAAO;AACT;AAuCA,SAAS,qBAAqB;AAC5B,MAAI,OAAO,wBAAwB,aAAa;AAC9C,WAAO;EACX;AACE,SAAO,sBAAuB,WAAY;AACxC,WAAO,SAAS,MAAM;IAAA,EAAG,SAAS;EACtC,EAAG;AACH;AACA,SAAS,UAAW,KAAK;AACvB,SAAO,OAAO,UAAU,SAAS,KAAK,GAAG;AAC3C;AACA,SAAS,OAAO,QAAQ;AACtB,MAAIC,OAAAA,SAAS,MAAM,GAAG;AACpB,WAAO;EACX;AACE,MAAI,OAAOC,SAAO,gBAAgB,YAAY;AAC5C,WAAO;EACX;AACE,MAAI,OAAO,YAAY,WAAW,YAAY;AAC5C,WAAO,YAAY,OAAO,MAAM;EACpC;AACE,MAAI,CAAC,QAAQ;AACX,WAAO;EACX;AACE,MAAI,kBAAkB,UAAU;AAC9B,WAAO;EACX;AACE,MAAI,OAAO,UAAU,OAAO,kBAAkB,aAAa;AACzD,WAAO;EACX;AACE,SAAO;AACT;AAKA,SAAS,OAAO,OAAO,SAAS;AAC9B,MAAI,CAAC;AAAO,SAAK,OAAO,MAAM,SAAS,MAAM,EAAE;AACjD;AAUA,SAAS,QAAQ,MAAM;AACrB,MAAI,CAAC,WAAW,IAAI,GAAG;AACrB;EACJ;AACE,MAAI,mBAAkB,GAAI;AACxB,WAAO,KAAK;EAChB;AACE,MAAI,MAAM,KAAK,SAAQ;AACvB,MAAI,QAAQ,IAAI,MAAM,KAAK;AAC3B,SAAO,SAAS,MAAM;AACxB;AAEO,SAAS,eAAe,SAAS;AACtC,OAAK,OAAO;AACZ,OAAK,SAAS,QAAQ;AACtB,OAAK,WAAW,QAAQ;AACxB,OAAK,WAAW,QAAQ;AACxB,MAAI,QAAQ,SAAS;AACnB,SAAK,UAAU,QAAQ;AACvB,SAAK,mBAAmB;EAC5B,OAAS;AACL,SAAK,UAAU,WAAW,IAAI;AAC9B,SAAK,mBAAmB;EAC5B;AACE,MAAI,qBAAqB,QAAQ,sBAAsB;AACvD,MAAI,MAAM,mBAAmB;AAC3B,UAAM,kBAAkB,MAAM,kBAAkB;EACpD,OAAS;AAEL,QAAI,MAAM,IAAI,MAAK;AACnB,QAAI,IAAI,OAAO;AACb,UAAI,MAAM,IAAI;AAGd,UAAI,UAAU,QAAQ,kBAAkB;AACxC,UAAI,MAAM,IAAI,QAAQ,OAAO,OAAO;AACpC,UAAI,OAAO,GAAG;AAGZ,YAAI,YAAY,IAAI,QAAQ,MAAM,MAAM,CAAC;AACzC,cAAM,IAAI,UAAU,YAAY,CAAC;MACzC;AAEM,WAAK,QAAQ;IACnB;EACA;AACA;AAKA,SAAS,SAAS,GAAG,GAAG;AACtB,MAAI,OAAO,MAAM,UAAU;AACzB,WAAO,EAAE,SAAS,IAAI,IAAI,EAAE,MAAM,GAAG,CAAC;EAC1C,OAAS;AACL,WAAO;EACX;AACA;AACA,SAAS,QAAQ,WAAW;AAC1B,MAAI,mBAAkB,KAAM,CAAC,WAAW,SAAS,GAAG;AAClD,WAAOC,UAAY,SAAS;EAChC;AACE,MAAI,UAAU,QAAQ,SAAS;AAC/B,MAAI,OAAO,UAAU,OAAO,UAAU;AACtC,SAAO,cAAe,OAAO;AAC/B;AACA,SAAS,WAAWC,OAAM;AACxB,SAAO,SAAS,QAAQA,MAAK,MAAM,GAAG,GAAG,IAAI,MACtCA,MAAK,WAAW,MAChB,SAAS,QAAQA,MAAK,QAAQ,GAAG,GAAG;AAC7C;AAaO,SAAS,KAAK,QAAQ,UAAU,SAAS,UAAU,oBAAoB;AAC5E,QAAM,IAAI,eAAe;IACvB;IACA;IACA;IACA;IACA;EACJ,CAAG;AACH;AAYO,SAAS,GAAG,OAAO,SAAS;AACjC,MAAI,CAAC;AAAO,SAAK,OAAO,MAAM,SAAS,MAAM,EAAE;AACjD;AAQO,SAAS,MAAM,QAAQ,UAAU,SAAS;AAC/C,MAAI,UAAU;AAAU,SAAK,QAAQ,UAAU,SAAS,MAAM,KAAK;AACrE;AAKO,SAAS,SAAS,QAAQ,UAAU,SAAS;AAClD,MAAI,UAAU,UAAU;AACtB,SAAK,QAAQ,UAAU,SAAS,MAAM,QAAQ;EAClD;AACA;AAKO,SAAS,UAAU,QAAQ,UAAU,SAAS;AACnD,MAAI,CAAC,WAAW,QAAQ,UAAU,KAAK,GAAG;AACxC,SAAK,QAAQ,UAAU,SAAS,aAAa,SAAS;EAC1D;AACA;AAEO,SAAS,gBAAgB,QAAQ,UAAU,SAAS;AACzD,MAAI,CAAC,WAAW,QAAQ,UAAU,IAAI,GAAG;AACvC,SAAK,QAAQ,UAAU,SAAS,mBAAmB,eAAe;EACtE;AACA;AAEA,SAAS,WAAW,QAAQ,UAAU,QAAQ,OAAO;AAEnD,MAAI,WAAW,UAAU;AACvB,WAAO;EACX,WAAaH,OAAAA,SAAS,MAAM,KAAKA,OAAAA,SAAS,QAAQ,GAAG;AACjD,WAAO,QAAQ,QAAQ,QAAQ,MAAM;EAIzC,WAAa,OAAO,MAAM,KAAK,OAAO,QAAQ,GAAG;AAC7C,WAAO,OAAO,QAAO,MAAO,SAAS,QAAO;EAKhD,WAAa,SAAS,MAAM,KAAK,SAAS,QAAQ,GAAG;AACjD,WAAO,OAAO,WAAW,SAAS,UAC3B,OAAO,WAAW,SAAS,UAC3B,OAAO,cAAc,SAAS,aAC9B,OAAO,cAAc,SAAS,aAC9B,OAAO,eAAe,SAAS;EAI1C,YAAc,WAAW,QAAQ,OAAO,WAAW,cACrC,aAAa,QAAQ,OAAO,aAAa,WAAW;AAC9D,WAAO,SAAS,WAAW,WAAW,UAAU;EAQpD,WAAa,OAAO,MAAM,KAAK,OAAO,QAAQ,KACjC,UAAU,MAAM,MAAM,UAAU,QAAQ,KACxC,EAAE,kBAAkB,gBAClB,kBAAkB,eAAe;AAC5C,WAAO;MAAQ,IAAI,WAAW,OAAO,MAAM;MAC5B,IAAI,WAAW,SAAS,MAAM;IAAC,MAAM;EAQxD,WAAaA,OAAAA,SAAS,MAAM,MAAMA,OAAAA,SAAS,QAAQ,GAAG;AAClD,WAAO;EACX,OAAS;AACL,YAAQ,SAAS,EAAC,QAAQ,CAAA,GAAI,UAAU,CAAA,EAAE;AAE1C,QAAI,cAAc,MAAM,OAAO,QAAQ,MAAM;AAC7C,QAAI,gBAAgB,IAAI;AACtB,UAAI,gBAAgB,MAAM,SAAS,QAAQ,QAAQ,GAAG;AACpD,eAAO;MACf;IACA;AAEI,UAAM,OAAO,KAAK,MAAM;AACxB,UAAM,SAAS,KAAK,QAAQ;AAE5B,WAAO,SAAS,QAAQ,UAAU,QAAQ,KAAK;EACnD;AACA;AAEA,SAAS,YAAY,QAAQ;AAC3B,SAAO,OAAO,UAAU,SAAS,KAAK,MAAM,KAAK;AACnD;AAEA,SAAS,SAAS,GAAG,GAAG,QAAQ,sBAAsB;AACpD,MAAI,MAAM,QAAQ,MAAM,UAAa,MAAM,QAAQ,MAAM;AACvD,WAAO;AAET,MAAI,YAAY,CAAC,KAAK,YAAY,CAAC;AACjC,WAAO,MAAM;AACf,MAAI,UAAU,OAAO,eAAe,CAAC,MAAM,OAAO,eAAe,CAAC;AAChE,WAAO;AACT,MAAI,UAAU,YAAY,CAAC;AAC3B,MAAI,UAAU,YAAY,CAAC;AAC3B,MAAK,WAAW,CAAC,WAAa,CAAC,WAAW;AACxC,WAAO;AACT,MAAI,SAAS;AACX,QAAI,OAAO,KAAK,CAAC;AACjB,QAAI,OAAO,KAAK,CAAC;AACjB,WAAO,WAAW,GAAG,GAAG,MAAM;EAClC;AACE,MAAI,KAAK,WAAW,CAAC;AACrB,MAAI,KAAK,WAAW,CAAC;AACrB,MAAI,KAAK;AAGT,MAAI,GAAG,WAAW,GAAG;AACnB,WAAO;AAET,KAAG,KAAI;AACP,KAAG,KAAI;AAEP,OAAK,IAAI,GAAG,SAAS,GAAG,KAAK,GAAG,KAAK;AACnC,QAAI,GAAG,OAAO,GAAG;AACf,aAAO;EACb;AAGE,OAAK,IAAI,GAAG,SAAS,GAAG,KAAK,GAAG,KAAK;AACnC,UAAM,GAAG;AACT,QAAI,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,QAAQ,oBAAoB;AAC1D,aAAO;EACb;AACE,SAAO;AACT;AAKO,SAAS,aAAa,QAAQ,UAAU,SAAS;AACtD,MAAI,WAAW,QAAQ,UAAU,KAAK,GAAG;AACvC,SAAK,QAAQ,UAAU,SAAS,gBAAgB,YAAY;EAChE;AACA;AAGO,SAAS,mBAAmB,QAAQ,UAAU,SAAS;AAC5D,MAAI,WAAW,QAAQ,UAAU,IAAI,GAAG;AACtC,SAAK,QAAQ,UAAU,SAAS,sBAAsB,kBAAkB;EAC5E;AACA;AAMO,SAAS,YAAY,QAAQ,UAAU,SAAS;AACrD,MAAI,WAAW,UAAU;AACvB,SAAK,QAAQ,UAAU,SAAS,OAAO,WAAW;EACtD;AACA;AAKO,SAAS,eAAe,QAAQ,UAAU,SAAS;AACxD,MAAI,WAAW,UAAU;AACvB,SAAK,QAAQ,UAAU,SAAS,OAAO,cAAc;EACzD;AACA;AAEA,SAAS,kBAAkB,QAAQ,UAAU;AAC3C,MAAI,CAAC,UAAU,CAAC,UAAU;AACxB,WAAO;EACX;AAEE,MAAI,OAAO,UAAU,SAAS,KAAK,QAAQ,KAAK,mBAAmB;AACjE,WAAO,SAAS,KAAK,MAAM;EAC/B;AAEE,MAAI;AACF,QAAI,kBAAkB,UAAU;AAC9B,aAAO;IACb;EACA,SAAW,GAAP;EAEJ;AAEE,MAAI,MAAM,cAAc,QAAQ,GAAG;AACjC,WAAO;EACX;AAEE,SAAO,SAAS,KAAK,CAAA,GAAI,MAAM,MAAM;AACvC;AAEA,SAAS,UAAU,OAAO;AACxB,MAAI;AACJ,MAAI;AACF,UAAK;EACT,SAAW,GAAP;AACA,YAAQ;EACZ;AACE,SAAO;AACT;AAEA,SAAS,QAAQ,aAAa,OAAO,UAAU,SAAS;AACtD,MAAI;AAEJ,MAAI,OAAO,UAAU,YAAY;AAC/B,UAAM,IAAI,UAAU,qCAAqC;EAC7D;AAEE,MAAI,OAAO,aAAa,UAAU;AAChC,cAAU;AACV,eAAW;EACf;AAEE,WAAS,UAAU,KAAK;AAExB,aAAW,YAAY,SAAS,OAAO,OAAO,SAAS,OAAO,OAAO,QAC1D,UAAU,MAAM,UAAU;AAErC,MAAI,eAAe,CAAC,QAAQ;AAC1B,SAAK,QAAQ,UAAU,+BAA+B,OAAO;EACjE;AAEE,MAAI,sBAAsB,OAAO,YAAY;AAC7C,MAAI,sBAAsB,CAAC,eAAe,QAAQ,MAAM;AACxD,MAAI,wBAAwB,CAAC,eAAe,UAAU,CAAC;AAEvD,MAAK,uBACD,uBACA,kBAAkB,QAAQ,QAAQ,KAClC,uBAAuB;AACzB,SAAK,QAAQ,UAAU,2BAA2B,OAAO;EAC7D;AAEE,MAAK,eAAe,UAAU,YAC1B,CAAC,kBAAkB,QAAQ,QAAQ,KAAO,CAAC,eAAe,QAAS;AACrE,UAAM;EACV;AACA;AAKO,SAAS,OAAO,OAAmB,OAAmB,SAAS;AACpE,UAAQ,MAAM,OAAO,OAAO,OAAO;AACrC;AAIO,SAAS,aAAa,OAAmB,OAAmB,SAAS;AAC1E,UAAQ,OAAO,OAAO,OAAO,OAAO;AACtC;AAGO,SAAS,QAAQ,KAAK;AAC3B,MAAI;AAAK,UAAM;AACjB;AC3KA,SAAS,iBAAiB,MAAM,IAAI;AAClC,MAAI,GAAG,UAAU;AACf,WAAO,OAAO,MAAM,GAAG,WAAW;EACtC;AACE,SAAO;AACT;AA8BA,SAAS,sBAAsB,OAAO,QAAQ;AAC5C,MAAI,eAAe,OAAO,OAAO;AAC/B,UAAM,IAAI,UAAU,2BAA2B;EACnD;AACE,MAAI,MAAM,eAAe,SAAS,GAAG;AACnC,UAAM,IAAI,MAAM,oCAAoC;EACxD;AACE,MAAI,EAAE,UAAW,kBAAkB,SAAU;AAC3C,UAAM,IAAI,UAAU,yBAAyB;EACjD;AACE,MAAI,OAAO,eAAe,mBAAmB,GAAG;AAC9C,UAAM,IAAI,MAAM,0CAA0C;EAC9D;AACE,QAAM,UAAU;AAChB,SAAO,oBAAoB;AAC3B,SAAO,wBAAyB,MAAM,IAAI,MAAK;AAC/C,SAAO,eAAe,MAAM,WAAW,UAAU;IAC/C,OAAO,SAAS,GAAG,QAAQ;AACzB,aAAO,OAAO,OAAO,MAAM,GAAG,MAAM;IAC1C;IACI,UAAU;EACd,CAAG;AACD,SAAO,eAAe,OAAO,UAAU;IACrC,OAAO,SAAS,GAAG,QAAQ;AACzB,aAAO,OAAO,OAAO,GAAG,MAAM;IACpC;IACI,UAAU;EACd,CAAG;AACH;AA6UA,SAAS,YAAY,KAAK;AACxB,QAAM,OAAO,KAAK,MAAM,MAAM,KAAK;AACnC,QAAM,OAAO,MAAO,OAAO;AAC3B,SAAO,EAAC,MAAM,KAAI;AACpB;AAEA,SAAS,aAAa,MAAM,MAAM;AAChC,SAAO,OAAO,QAAQ;AACxB;AAyrCA,SAAS,iBAAiB,GAAG;AAC3B,MAAI,IAAI,GAAG;AACT,SAAK;EACT;AACE,SAAO;AACT;AEp4DO,SAASI,2BACdC,OACAC,YACAC,gBACGC,SAC4B;AAC/B,SAAOC,0BAA8BH,YAAYC,aAAaC,SAAS;IACrEE,eAAe;EADsD,CAAnC;AAGrC;ACuBD,SAASC,eAAeC,YAAqC;AAC3D,SAAOC,OAAAA,OAAOC,KAAKF,WAAUG,SAAV,CAAZ;AACR;AAqCD,SAASC,UAAUC,oBAAkC;AACnD,SAAO,eAAeA;AACvB;iCV7EG,QACA,WACA,KAEA,MACK,GAAO,cGXhB,UCCI,UAuBJ,YECI,QAEA,YAkCA,QACA,qBA+CA,iBCyCE,QA6PA,gBAgCA,aAwDA,cAiEA,MA0CA,QA0CA,KA0CA,OA0BA,OAyBA,YAsCA,cAsCA,WAsCA,aAqCA,OAiCA,SAiCA,QAiCA,UAwCA,UAkIA,WAyMA,oBA2CA,0BAoFA,OA4TA,eA0KA,cA+JA,UAsGAC,UAqCA,MAkFA,SAsEA,MA8FA,UA6DN,IAYA,KAuGA,QAeA,MCvoFaN,WAOAO,QEYAC,kBAIAC,6BAIPC,wBACAC,uBAcOC,KA0CPC,oBAQOC,aAoCAC,YA2EAC,eAuDPC,gBAoBOC;;;;;;;;0BV3RQ;2BACC;6BACE;AAExB,IAAI,SAAS,CAAA;AACb,IAAI,YAAY,CAAA;AAChB,IAAI,MAAM,OAAO,eAAe,cAAc,aAAa;AAE3D,IAAI,OAAO;AACX,SAAS,IAAI,GAAG,MAAM,KAAK,QAAQ,IAAI,KAAK,EAAE,GAAG;AAC/C,aAAO,KAAK,KAAK;AACjB,gBAAU,KAAK,WAAW,CAAC,KAAK;IAClC;AAIA,cAAU,IAAI,WAAW,CAAC,KAAK;AAC/B,cAAU,IAAI,WAAW,CAAC,KAAK;;mBClBhB,SAAUC,SAAQ,QAAQ,MAAM,MAAM,QAAQ;AAC3D,UAAI,GAAG;AACP,UAAI,OAAQ,SAAS,IAAK,OAAO;AACjC,UAAI,QAAQ,KAAK,QAAQ;AACzB,UAAI,QAAQ,QAAQ;AACpB,UAAI,QAAQ;AACZ,UAAI,IAAI,OAAQ,SAAS,IAAK;AAC9B,UAAI,IAAI,OAAO,KAAK;AACpB,UAAI,IAAIA,QAAO,SAAS;AAExB,WAAK;AAEL,UAAI,KAAM,KAAM,CAAC,SAAU;AAC3B,YAAO,CAAC;AACR,eAAS;AACT,aAAO,QAAQ,GAAG,IAAK,IAAI,MAAOA,QAAO,SAAS,IAAI,KAAK,GAAG,SAAS,GAAG;MAAA;AAE1E,UAAI,KAAM,KAAM,CAAC,SAAU;AAC3B,YAAO,CAAC;AACR,eAAS;AACT,aAAO,QAAQ,GAAG,IAAK,IAAI,MAAOA,QAAO,SAAS,IAAI,KAAK,GAAG,SAAS,GAAG;MAAA;AAE1E,UAAI,MAAM,GAAG;AACX,YAAI,IAAI;MACZ,WAAa,MAAM,MAAM;AACrB,eAAO,IAAI,OAAQ,IAAI,KAAK,KAAK;MACrC,OAAS;AACL,YAAI,IAAI,KAAK,IAAI,GAAG,IAAI;AACxB,YAAI,IAAI;MACZ;AACE,cAAQ,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI;IAChD;oBAEgB,SAAUA,SAAQ,OAAO,QAAQ,MAAM,MAAM,QAAQ;AACnE,UAAI,GAAG,GAAG;AACV,UAAI,OAAQ,SAAS,IAAK,OAAO;AACjC,UAAI,QAAQ,KAAK,QAAQ;AACzB,UAAI,QAAQ,QAAQ;AACpB,UAAI,KAAM,SAAS,KAAK,KAAK,IAAI,GAAG,GAAG,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI;AAC9D,UAAI,IAAI,OAAO,IAAK,SAAS;AAC7B,UAAI,IAAI,OAAO,IAAI;AACnB,UAAI,IAAI,QAAQ,KAAM,UAAU,KAAK,IAAI,QAAQ,IAAK,IAAI;AAE1D,cAAQ,KAAK,IAAI,KAAK;AAEtB,UAAI,MAAM,KAAK,KAAK,UAAU,UAAU;AACtC,YAAI,MAAM,KAAK,IAAI,IAAI;AACvB,YAAI;MACR,OAAS;AACL,YAAI,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG;AACzC,YAAI,SAAS,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC,KAAK,GAAG;AACrC;AACA,eAAK;QACX;AACI,YAAI,IAAI,SAAS,GAAG;AAClB,mBAAS,KAAK;QACpB,OAAW;AACL,mBAAS,KAAK,KAAK,IAAI,GAAG,IAAI,KAAK;QACzC;AACI,YAAI,QAAQ,KAAK,GAAG;AAClB;AACA,eAAK;QACX;AAEI,YAAI,IAAI,SAAS,MAAM;AACrB,cAAI;AACJ,cAAI;QACV,WAAe,IAAI,SAAS,GAAG;AACzB,eAAM,QAAQ,IAAK,KAAK,KAAK,IAAI,GAAG,IAAI;AACxC,cAAI,IAAI;QACd,OAAW;AACL,cAAI,QAAQ,KAAK,IAAI,GAAG,QAAQ,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI;AACrD,cAAI;QACV;MACA;AAEE,aAAO,QAAQ,GAAGA,QAAO,SAAS,KAAK,IAAI,KAAM,KAAK,GAAG,KAAK,KAAK,QAAQ,GAAG;MAAA;AAE9E,UAAK,KAAK,OAAQ;AAClB,cAAQ;AACR,aAAO,OAAO,GAAGA,QAAO,SAAS,KAAK,IAAI,KAAM,KAAK,GAAG,KAAK,KAAK,QAAQ,GAAG;MAAA;AAE7E,MAAAA,QAAO,SAAS,IAAI,MAAM,IAAI;IAChC;;AC1EA,YAAM,SAASC;AACf,YAAMC,YAAUC;AAChB,YAAM,sBACH,OAAO,WAAW,cAAc,OAAO,OAAO,WAAW,aACtD,OAAO,OAAO,4BAA4B,IAC1C;AAEN,cAAA,SAAiBrB;AACjB,cAAA,aAAqB;AACrB,cAAA,oBAA4B;AAE5B,YAAM,eAAe;AACrB,cAAA,aAAqB;AAgBrB,MAAAA,QAAO,sBAAsB,kBAAiB;AAE9C,UAAI,CAACA,QAAO,uBAAuB,OAAO,YAAY,eAClD,OAAO,QAAQ,UAAU,YAAY;AACvC,gBAAQ;UACN;QAEJ;MACA;AAEA,eAAS,oBAAqB;AAE5B,YAAI;AACF,gBAAM,MAAM,IAAI,WAAW,CAAC;AAC5B,gBAAM,QAAQ,EAAE,KAAK,WAAY;AAAE,mBAAO;UAAE,EAAE;AAC9C,iBAAO,eAAe,OAAO,WAAW,SAAS;AACjD,iBAAO,eAAe,KAAK,KAAK;AAChC,iBAAO,IAAI,IAAG,MAAO;QACzB,SAAW,GAAP;AACA,iBAAO;QACX;MACA;AAEA,aAAO,eAAeA,QAAO,WAAW,UAAU;QAChD,YAAY;QACZ,KAAK,WAAY;AACf,cAAI,CAACA,QAAO,SAAS,IAAI;AAAG,mBAAO;AACnC,iBAAO,KAAK;QAChB;MACA,CAAC;AAED,aAAO,eAAeA,QAAO,WAAW,UAAU;QAChD,YAAY;QACZ,KAAK,WAAY;AACf,cAAI,CAACA,QAAO,SAAS,IAAI;AAAG,mBAAO;AACnC,iBAAO,KAAK;QAChB;MACA,CAAC;AAED,eAAS,aAAc,QAAQ;AAC7B,YAAI,SAAS,cAAc;AACzB,gBAAM,IAAI,WAAW,gBAAgB,SAAS,gCAAgC;QAClF;AAEE,cAAM,MAAM,IAAI,WAAW,MAAM;AACjC,eAAO,eAAe,KAAKA,QAAO,SAAS;AAC3C,eAAO;MACT;AAYA,eAASA,QAAQ,KAAK,kBAAkB,QAAQ;AAE9C,YAAI,OAAO,QAAQ,UAAU;AAC3B,cAAI,OAAO,qBAAqB,UAAU;AACxC,kBAAM,IAAI;cACR;YACR;UACA;AACI,iBAAO,YAAY,GAAG;QAC1B;AACE,eAAO,KAAK,KAAK,kBAAkB,MAAM;MAC3C;AAEA,MAAAA,QAAO,WAAW;AAElB,eAAS,KAAM,OAAO,kBAAkB,QAAQ;AAC9C,YAAI,OAAO,UAAU,UAAU;AAC7B,iBAAO,WAAW,OAAO,gBAAgB;QAC7C;AAEE,YAAI,YAAY,OAAO,KAAK,GAAG;AAC7B,iBAAO,cAAc,KAAK;QAC9B;AAEE,YAAI,SAAS,MAAM;AACjB,gBAAM,IAAI;YACR,oHAC0C,OAAO;UACvD;QACA;AAEE,YAAI,WAAW,OAAO,WAAW,KAC5B,SAAS,WAAW,MAAM,QAAQ,WAAW,GAAI;AACpD,iBAAO,gBAAgB,OAAO,kBAAkB,MAAM;QAC1D;AAEE,YAAI,OAAO,sBAAsB,gBAC5B,WAAW,OAAO,iBAAiB,KACnC,SAAS,WAAW,MAAM,QAAQ,iBAAiB,IAAK;AAC3D,iBAAO,gBAAgB,OAAO,kBAAkB,MAAM;QAC1D;AAEE,YAAI,OAAO,UAAU,UAAU;AAC7B,gBAAM,IAAI;YACR;UACN;QACA;AAEE,cAAM,UAAU,MAAM,WAAW,MAAM,QAAO;AAC9C,YAAI,WAAW,QAAQ,YAAY,OAAO;AACxC,iBAAOA,QAAO,KAAK,SAAS,kBAAkB,MAAM;QACxD;AAEE,cAAM,IAAI,WAAW,KAAK;AAC1B,YAAI;AAAG,iBAAO;AAEd,YAAI,OAAO,WAAW,eAAe,OAAO,eAAe,QACvD,OAAO,MAAM,OAAO,iBAAiB,YAAY;AACnD,iBAAOA,QAAO,KAAK,MAAM,OAAO,aAAa,QAAQ,GAAG,kBAAkB,MAAM;QACpF;AAEE,cAAM,IAAI;UACR,oHAC0C,OAAO;QACrD;MACA;AAUA,MAAAA,QAAO,OAAO,SAAU,OAAO,kBAAkB,QAAQ;AACvD,eAAO,KAAK,OAAO,kBAAkB,MAAM;MAC7C;AAIA,aAAO,eAAeA,QAAO,WAAW,WAAW,SAAS;AAC5D,aAAO,eAAeA,SAAQ,UAAU;AAExC,eAAS,WAAY,MAAM;AACzB,YAAI,OAAO,SAAS,UAAU;AAC5B,gBAAM,IAAI,UAAU,wCAAwC;QAChE,WAAa,OAAO,GAAG;AACnB,gBAAM,IAAI,WAAW,gBAAgB,OAAO,gCAAgC;QAChF;MACA;AAEA,eAAS,MAAO,MAAM,MAAM,UAAU;AACpC,mBAAW,IAAI;AACf,YAAI,QAAQ,GAAG;AACb,iBAAO,aAAa,IAAI;QAC5B;AACE,YAAI,SAAS,QAAW;AAItB,iBAAO,OAAO,aAAa,WACvB,aAAa,IAAI,EAAE,KAAK,MAAM,QAAQ,IACtC,aAAa,IAAI,EAAE,KAAK,IAAI;QACpC;AACE,eAAO,aAAa,IAAI;MAC1B;AAMA,MAAAA,QAAO,QAAQ,SAAU,MAAM,MAAM,UAAU;AAC7C,eAAO,MAAM,MAAM,MAAM,QAAQ;MACnC;AAEA,eAAS,YAAa,MAAM;AAC1B,mBAAW,IAAI;AACf,eAAO,aAAa,OAAO,IAAI,IAAI,QAAQ,IAAI,IAAI,CAAC;MACtD;AAKA,MAAAA,QAAO,cAAc,SAAU,MAAM;AACnC,eAAO,YAAY,IAAI;MACzB;AAIA,MAAAA,QAAO,kBAAkB,SAAU,MAAM;AACvC,eAAO,YAAY,IAAI;MACzB;AAEA,eAAS,WAAY,QAAQ,UAAU;AACrC,YAAI,OAAO,aAAa,YAAY,aAAa,IAAI;AACnD,qBAAW;QACf;AAEE,YAAI,CAACA,QAAO,WAAW,QAAQ,GAAG;AAChC,gBAAM,IAAI,UAAU,uBAAuB,QAAQ;QACvD;AAEE,cAAM,SAASsB,YAAW,QAAQ,QAAQ,IAAI;AAC9C,YAAI,MAAM,aAAa,MAAM;AAE7B,cAAM,SAAS,IAAI,MAAM,QAAQ,QAAQ;AAEzC,YAAI,WAAW,QAAQ;AAIrB,gBAAM,IAAI,MAAM,GAAG,MAAM;QAC7B;AAEE,eAAO;MACT;AAEA,eAAS,cAAe,OAAO;AAC7B,cAAM,SAAS,MAAM,SAAS,IAAI,IAAI,QAAQ,MAAM,MAAM,IAAI;AAC9D,cAAM,MAAM,aAAa,MAAM;AAC/B,iBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAClC,cAAI,KAAK,MAAM,KAAK;QACxB;AACE,eAAO;MACT;AAEA,eAAS,cAAe,WAAW;AACjC,YAAI,WAAW,WAAW,UAAU,GAAG;AACrC,gBAAM,OAAO,IAAI,WAAW,SAAS;AACrC,iBAAO,gBAAgB,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU;QACxE;AACE,eAAO,cAAc,SAAS;MAChC;AAEA,eAAS,gBAAiB,OAAO,YAAY,QAAQ;AACnD,YAAI,aAAa,KAAK,MAAM,aAAa,YAAY;AACnD,gBAAM,IAAI,WAAW,sCAAsC;QAC/D;AAEE,YAAI,MAAM,aAAa,cAAc,UAAU,IAAI;AACjD,gBAAM,IAAI,WAAW,sCAAsC;QAC/D;AAEE,YAAI;AACJ,YAAI,eAAe,UAAa,WAAW,QAAW;AACpD,gBAAM,IAAI,WAAW,KAAK;QAC9B,WAAa,WAAW,QAAW;AAC/B,gBAAM,IAAI,WAAW,OAAO,UAAU;QAC1C,OAAS;AACL,gBAAM,IAAI,WAAW,OAAO,YAAY,MAAM;QAClD;AAGE,eAAO,eAAe,KAAKtB,QAAO,SAAS;AAE3C,eAAO;MACT;AAEA,eAAS,WAAY,KAAK;AACxB,YAAIA,QAAO,SAAS,GAAG,GAAG;AACxB,gBAAM,MAAM,QAAQ,IAAI,MAAM,IAAI;AAClC,gBAAM,MAAM,aAAa,GAAG;AAE5B,cAAI,IAAI,WAAW,GAAG;AACpB,mBAAO;UACb;AAEI,cAAI,KAAK,KAAK,GAAG,GAAG,GAAG;AACvB,iBAAO;QACX;AAEE,YAAI,IAAI,WAAW,QAAW;AAC5B,cAAI,OAAO,IAAI,WAAW,YAAY,YAAY,IAAI,MAAM,GAAG;AAC7D,mBAAO,aAAa,CAAC;UAC3B;AACI,iBAAO,cAAc,GAAG;QAC5B;AAEE,YAAI,IAAI,SAAS,YAAY,MAAM,QAAQ,IAAI,IAAI,GAAG;AACpD,iBAAO,cAAc,IAAI,IAAI;QACjC;MACA;AAEA,eAAS,QAAS,QAAQ;AAGxB,YAAI,UAAU,cAAc;AAC1B,gBAAM,IAAI,WAAW,4DACa,aAAa,SAAS,EAAE,IAAI,QAAQ;QAC1E;AACE,eAAO,SAAS;MAClB;AAEA,eAAS,WAAY,QAAQ;AAC3B,YAAI,CAAC,UAAU,QAAQ;AACrB,mBAAS;QACb;AACE,eAAOA,QAAO,MAAM,CAAC,MAAM;MAC7B;AAEA,MAAAA,QAAO,WAAW,SAAS,SAAU,GAAG;AACtC,eAAO,KAAK,QAAQ,EAAE,cAAc,QAClC,MAAMA,QAAO;MACjB;AAEA,MAAAA,QAAO,UAAU,SAASuB,SAAS,GAAG,GAAG;AACvC,YAAI,WAAW,GAAG,UAAU;AAAG,cAAIvB,QAAO,KAAK,GAAG,EAAE,QAAQ,EAAE,UAAU;AACxE,YAAI,WAAW,GAAG,UAAU;AAAG,cAAIA,QAAO,KAAK,GAAG,EAAE,QAAQ,EAAE,UAAU;AACxE,YAAI,CAACA,QAAO,SAAS,CAAC,KAAK,CAACA,QAAO,SAAS,CAAC,GAAG;AAC9C,gBAAM,IAAI;YACR;UACN;QACA;AAEE,YAAI,MAAM;AAAG,iBAAO;AAEpB,YAAI,IAAI,EAAE;AACV,YAAI,IAAI,EAAE;AAEV,iBAAS,IAAI,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,GAAG,IAAI,KAAK,EAAE,GAAG;AAClD,cAAI,EAAE,OAAO,EAAE,IAAI;AACjB,gBAAI,EAAE;AACN,gBAAI,EAAE;AACN;UACN;QACA;AAEE,YAAI,IAAI;AAAG,iBAAO;AAClB,YAAI,IAAI;AAAG,iBAAO;AAClB,eAAO;MACT;AAEA,MAAAA,QAAO,aAAa,SAAS,WAAY,UAAU;AACjD,gBAAQ,OAAO,QAAQ,EAAE,YAAW;eAC7B;eACA;eACA;eACA;eACA;eACA;eACA;eACA;eACA;eACA;eACA;AACH,mBAAO;;AAEP,mBAAO;;MAEb;AAEA,MAAAA,QAAO,SAAS,SAAS,OAAQ,MAAM,QAAQ;AAC7C,YAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,gBAAM,IAAI,UAAU,6CAA6C;QACrE;AAEE,YAAI,KAAK,WAAW,GAAG;AACrB,iBAAOA,QAAO,MAAM,CAAC;QACzB;AAEE,YAAI;AACJ,YAAI,WAAW,QAAW;AACxB,mBAAS;AACT,eAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,sBAAU,KAAK,GAAG;UACxB;QACA;AAEE,cAAMkB,UAASlB,QAAO,YAAY,MAAM;AACxC,YAAI,MAAM;AACV,aAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,cAAI,MAAM,KAAK;AACf,cAAI,WAAW,KAAK,UAAU,GAAG;AAC/B,gBAAI,MAAM,IAAI,SAASkB,QAAO,QAAQ;AACpC,kBAAI,CAAClB,QAAO,SAAS,GAAG;AAAG,sBAAMA,QAAO,KAAK,GAAG;AAChD,kBAAI,KAAKkB,SAAQ,GAAG;YAC5B,OAAa;AACL,yBAAW,UAAU,IAAI;gBACvBA;gBACA;gBACA;cACV;YACA;UACA,WAAe,CAAClB,QAAO,SAAS,GAAG,GAAG;AAChC,kBAAM,IAAI,UAAU,6CAA6C;UACvE,OAAW;AACL,gBAAI,KAAKkB,SAAQ,GAAG;UAC1B;AACI,iBAAO,IAAI;QACf;AACE,eAAOA;MACT;AAEA,eAASI,YAAY,QAAQ,UAAU;AACrC,YAAItB,QAAO,SAAS,MAAM,GAAG;AAC3B,iBAAO,OAAO;QAClB;AACE,YAAI,YAAY,OAAO,MAAM,KAAK,WAAW,QAAQ,WAAW,GAAG;AACjE,iBAAO,OAAO;QAClB;AACE,YAAI,OAAO,WAAW,UAAU;AAC9B,gBAAM,IAAI;YACR,6FACmB,OAAO;UAChC;QACA;AAEE,cAAM,MAAM,OAAO;AACnB,cAAM,YAAa,UAAU,SAAS,KAAK,UAAU,OAAO;AAC5D,YAAI,CAAC,aAAa,QAAQ;AAAG,iBAAO;AAGpC,YAAI,cAAc;AAClB,mBAAS;AACP,kBAAQ;iBACD;iBACA;iBACA;AACH,qBAAO;iBACJ;iBACA;AACH,qBAAO,YAAY,MAAM,EAAE;iBACxB;iBACA;iBACA;iBACA;AACH,qBAAO,MAAM;iBACV;AACH,qBAAO,QAAQ;iBACZ;AACH,qBAAO,cAAc,MAAM,EAAE;;AAE7B,kBAAI,aAAa;AACf,uBAAO,YAAY,KAAK,YAAY,MAAM,EAAE;cACtD;AACQ,0BAAY,KAAK,UAAU,YAAW;AACtC,4BAAc;;QAEtB;MACA;AACA,MAAAA,QAAO,aAAasB;AAEpB,eAAS,aAAc,UAAU,OAAO,KAAK;AAC3C,YAAI,cAAc;AASlB,YAAI,UAAU,UAAa,QAAQ,GAAG;AACpC,kBAAQ;QACZ;AAGE,YAAI,QAAQ,KAAK,QAAQ;AACvB,iBAAO;QACX;AAEE,YAAI,QAAQ,UAAa,MAAM,KAAK,QAAQ;AAC1C,gBAAM,KAAK;QACf;AAEE,YAAI,OAAO,GAAG;AACZ,iBAAO;QACX;AAGE,iBAAS;AACT,mBAAW;AAEX,YAAI,OAAO,OAAO;AAChB,iBAAO;QACX;AAEE,YAAI,CAAC;AAAU,qBAAW;AAE1B,eAAO,MAAM;AACX,kBAAQ;iBACD;AACH,qBAAO,SAAS,MAAM,OAAO,GAAG;iBAE7B;iBACA;AACH,qBAAO,UAAU,MAAM,OAAO,GAAG;iBAE9B;AACH,qBAAO,WAAW,MAAM,OAAO,GAAG;iBAE/B;iBACA;AACH,qBAAO,YAAY,MAAM,OAAO,GAAG;iBAEhC;AACH,qBAAO,YAAY,MAAM,OAAO,GAAG;iBAEhC;iBACA;iBACA;iBACA;AACH,qBAAO,aAAa,MAAM,OAAO,GAAG;;AAGpC,kBAAI;AAAa,sBAAM,IAAI,UAAU,uBAAuB,QAAQ;AACpE,0BAAY,WAAW,IAAI,YAAW;AACtC,4BAAc;;QAEtB;MACA;AAQA,MAAAtB,QAAO,UAAU,YAAY;AAE7B,eAAS,KAAM,GAAG,GAAG,GAAG;AACtB,cAAM,IAAI,EAAE;AACZ,UAAE,KAAK,EAAE;AACT,UAAE,KAAK;MACT;AAEA,MAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,cAAM,MAAM,KAAK;AACjB,YAAI,MAAM,MAAM,GAAG;AACjB,gBAAM,IAAI,WAAW,2CAA2C;QACpE;AACE,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,eAAK,MAAM,GAAG,IAAI,CAAC;QACvB;AACE,eAAO;MACT;AAEA,MAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,cAAM,MAAM,KAAK;AACjB,YAAI,MAAM,MAAM,GAAG;AACjB,gBAAM,IAAI,WAAW,2CAA2C;QACpE;AACE,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,eAAK,MAAM,GAAG,IAAI,CAAC;AACnB,eAAK,MAAM,IAAI,GAAG,IAAI,CAAC;QAC3B;AACE,eAAO;MACT;AAEA,MAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,cAAM,MAAM,KAAK;AACjB,YAAI,MAAM,MAAM,GAAG;AACjB,gBAAM,IAAI,WAAW,2CAA2C;QACpE;AACE,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,eAAK,MAAM,GAAG,IAAI,CAAC;AACnB,eAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AACvB,eAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AACvB,eAAK,MAAM,IAAI,GAAG,IAAI,CAAC;QAC3B;AACE,eAAO;MACT;AAEA,MAAAA,QAAO,UAAU,WAAW,SAAS,WAAY;AAC/C,cAAM,SAAS,KAAK;AACpB,YAAI,WAAW;AAAG,iBAAO;AACzB,YAAI,UAAU,WAAW;AAAG,iBAAO,UAAU,MAAM,GAAG,MAAM;AAC5D,eAAO,aAAa,MAAM,MAAM,SAAS;MAC3C;AAEA,MAAAA,QAAO,UAAU,iBAAiBA,QAAO,UAAU;AAEnD,MAAAA,QAAO,UAAU,SAAS,SAAS,OAAQ,GAAG;AAC5C,YAAI,CAACA,QAAO,SAAS,CAAC;AAAG,gBAAM,IAAI,UAAU,2BAA2B;AACxE,YAAI,SAAS;AAAG,iBAAO;AACvB,eAAOA,QAAO,QAAQ,MAAM,CAAC,MAAM;MACrC;AAEA,MAAAA,QAAO,UAAU,UAAU,SAASd,WAAW;AAC7C,YAAI,MAAM;AACV,cAAM,MAAM,QAAQ;AACpB,cAAM,KAAK,SAAS,OAAO,GAAG,GAAG,EAAE,QAAQ,WAAW,KAAK,EAAE,KAAI;AACjE,YAAI,KAAK,SAAS;AAAK,iBAAO;AAC9B,eAAO,aAAa,MAAM;MAC5B;AACA,UAAI,qBAAqB;AACvB,QAAAc,QAAO,UAAU,uBAAuBA,QAAO,UAAU;MAC3D;AAEA,MAAAA,QAAO,UAAU,UAAU,SAASuB,SAAS,QAAQ,OAAO,KAAK,WAAW,SAAS;AACnF,YAAI,WAAW,QAAQ,UAAU,GAAG;AAClC,mBAASvB,QAAO,KAAK,QAAQ,OAAO,QAAQ,OAAO,UAAU;QACjE;AACE,YAAI,CAACA,QAAO,SAAS,MAAM,GAAG;AAC5B,gBAAM,IAAI;YACR,mFACoB,OAAO;UACjC;QACA;AAEE,YAAI,UAAU,QAAW;AACvB,kBAAQ;QACZ;AACE,YAAI,QAAQ,QAAW;AACrB,gBAAM,SAAS,OAAO,SAAS;QACnC;AACE,YAAI,cAAc,QAAW;AAC3B,sBAAY;QAChB;AACE,YAAI,YAAY,QAAW;AACzB,oBAAU,KAAK;QACnB;AAEE,YAAI,QAAQ,KAAK,MAAM,OAAO,UAAU,YAAY,KAAK,UAAU,KAAK,QAAQ;AAC9E,gBAAM,IAAI,WAAW,oBAAoB;QAC7C;AAEE,YAAI,aAAa,WAAW,SAAS,KAAK;AACxC,iBAAO;QACX;AACE,YAAI,aAAa,SAAS;AACxB,iBAAO;QACX;AACE,YAAI,SAAS,KAAK;AAChB,iBAAO;QACX;AAEE,mBAAW;AACX,iBAAS;AACT,uBAAe;AACf,qBAAa;AAEb,YAAI,SAAS;AAAQ,iBAAO;AAE5B,YAAI,IAAI,UAAU;AAClB,YAAI,IAAI,MAAM;AACd,cAAM,MAAM,KAAK,IAAI,GAAG,CAAC;AAEzB,cAAM,WAAW,KAAK,MAAM,WAAW,OAAO;AAC9C,cAAM,aAAa,OAAO,MAAM,OAAO,GAAG;AAE1C,iBAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,cAAI,SAAS,OAAO,WAAW,IAAI;AACjC,gBAAI,SAAS;AACb,gBAAI,WAAW;AACf;UACN;QACA;AAEE,YAAI,IAAI;AAAG,iBAAO;AAClB,YAAI,IAAI;AAAG,iBAAO;AAClB,eAAO;MACT;AAWA,eAAS,qBAAsBkB,SAAQ,KAAK,YAAY,UAAU,KAAK;AAErE,YAAIA,QAAO,WAAW;AAAG,iBAAO;AAGhC,YAAI,OAAO,eAAe,UAAU;AAClC,qBAAW;AACX,uBAAa;QACjB,WAAa,aAAa,YAAY;AAClC,uBAAa;QACjB,WAAa,aAAa,aAAa;AACnC,uBAAa;QACjB;AACE,qBAAa,CAAC;AACd,YAAI,YAAY,UAAU,GAAG;AAE3B,uBAAa,MAAM,IAAKA,QAAO,SAAS;QAC5C;AAGE,YAAI,aAAa;AAAG,uBAAaA,QAAO,SAAS;AACjD,YAAI,cAAcA,QAAO,QAAQ;AAC/B,cAAI;AAAK,mBAAO;;AACX,yBAAaA,QAAO,SAAS;QACtC,WAAa,aAAa,GAAG;AACzB,cAAI;AAAK,yBAAa;;AACjB,mBAAO;QAChB;AAGE,YAAI,OAAO,QAAQ,UAAU;AAC3B,gBAAMlB,QAAO,KAAK,KAAK,QAAQ;QACnC;AAGE,YAAIA,QAAO,SAAS,GAAG,GAAG;AAExB,cAAI,IAAI,WAAW,GAAG;AACpB,mBAAO;UACb;AACI,iBAAO,aAAakB,SAAQ,KAAK,YAAY,UAAU,GAAG;QAC9D,WAAa,OAAO,QAAQ,UAAU;AAClC,gBAAM,MAAM;AACZ,cAAI,OAAO,WAAW,UAAU,YAAY,YAAY;AACtD,gBAAI,KAAK;AACP,qBAAO,WAAW,UAAU,QAAQ,KAAKA,SAAQ,KAAK,UAAU;YACxE,OAAa;AACL,qBAAO,WAAW,UAAU,YAAY,KAAKA,SAAQ,KAAK,UAAU;YAC5E;UACA;AACI,iBAAO,aAAaA,SAAQ,CAAC,GAAG,GAAG,YAAY,UAAU,GAAG;QAChE;AAEE,cAAM,IAAI,UAAU,sCAAsC;MAC5D;AAEA,eAAS,aAAc,KAAK,KAAK,YAAY,UAAU,KAAK;AAC1D,YAAI,YAAY;AAChB,YAAI,YAAY,IAAI;AACpB,YAAI,YAAY,IAAI;AAEpB,YAAI,aAAa,QAAW;AAC1B,qBAAW,OAAO,QAAQ,EAAE,YAAW;AACvC,cAAI,aAAa,UAAU,aAAa,WACpC,aAAa,aAAa,aAAa,YAAY;AACrD,gBAAI,IAAI,SAAS,KAAK,IAAI,SAAS,GAAG;AACpC,qBAAO;YACf;AACM,wBAAY;AACZ,yBAAa;AACb,yBAAa;AACb,0BAAc;UACpB;QACA;AAEE,iBAAS,KAAM,KAAKM,IAAG;AACrB,cAAI,cAAc,GAAG;AACnB,mBAAO,IAAIA;UACjB,OAAW;AACL,mBAAO,IAAI,aAAaA,KAAI,SAAS;UAC3C;QACA;AAEE,YAAI;AACJ,YAAI,KAAK;AACP,cAAI,aAAa;AACjB,eAAK,IAAI,YAAY,IAAI,WAAW,KAAK;AACvC,gBAAI,KAAK,KAAK,CAAC,MAAM,KAAK,KAAK,eAAe,KAAK,IAAI,IAAI,UAAU,GAAG;AACtE,kBAAI,eAAe;AAAI,6BAAa;AACpC,kBAAI,IAAI,aAAa,MAAM;AAAW,uBAAO,aAAa;YAClE,OAAa;AACL,kBAAI,eAAe;AAAI,qBAAK,IAAI;AAChC,2BAAa;YACrB;UACA;QACA,OAAS;AACL,cAAI,aAAa,YAAY;AAAW,yBAAa,YAAY;AACjE,eAAK,IAAI,YAAY,KAAK,GAAG,KAAK;AAChC,gBAAI,QAAQ;AACZ,qBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,kBAAI,KAAK,KAAK,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,GAAG;AACrC,wBAAQ;AACR;cACV;YACA;AACM,gBAAI;AAAO,qBAAO;UACxB;QACA;AAEE,eAAO;MACT;AAEA,MAAAxB,QAAO,UAAU,WAAW,SAAS,SAAU,KAAK,YAAY,UAAU;AACxE,eAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,MAAM;MACrD;AAEA,MAAAA,QAAO,UAAU,UAAU,SAAS,QAAS,KAAK,YAAY,UAAU;AACtE,eAAO,qBAAqB,MAAM,KAAK,YAAY,UAAU,IAAI;MACnE;AAEA,MAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,KAAK,YAAY,UAAU;AAC9E,eAAO,qBAAqB,MAAM,KAAK,YAAY,UAAU,KAAK;MACpE;AAEA,eAAS,SAAU,KAAK,QAAQ,QAAQ,QAAQ;AAC9C,iBAAS,OAAO,MAAM,KAAK;AAC3B,cAAM,YAAY,IAAI,SAAS;AAC/B,YAAI,CAAC,QAAQ;AACX,mBAAS;QACb,OAAS;AACL,mBAAS,OAAO,MAAM;AACtB,cAAI,SAAS,WAAW;AACtB,qBAAS;UACf;QACA;AAEE,cAAM,SAAS,OAAO;AAEtB,YAAI,SAAS,SAAS,GAAG;AACvB,mBAAS,SAAS;QACtB;AACE,YAAI;AACJ,aAAK,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC3B,gBAAM,SAAS,SAAS,OAAO,OAAO,IAAI,GAAG,CAAC,GAAG,EAAE;AACnD,cAAI,YAAY,MAAM;AAAG,mBAAO;AAChC,cAAI,SAAS,KAAK;QACtB;AACE,eAAO;MACT;AAEA,eAAS,UAAW,KAAK,QAAQ,QAAQ,QAAQ;AAC/C,eAAO,WAAW,YAAY,QAAQ,IAAI,SAAS,MAAM,GAAG,KAAK,QAAQ,MAAM;MACjF;AAEA,eAAS,WAAY,KAAK,QAAQ,QAAQ,QAAQ;AAChD,eAAO,WAAW,aAAa,MAAM,GAAG,KAAK,QAAQ,MAAM;MAC7D;AAEA,eAAS,YAAa,KAAK,QAAQ,QAAQ,QAAQ;AACjD,eAAO,WAAW,cAAc,MAAM,GAAG,KAAK,QAAQ,MAAM;MAC9D;AAEA,eAAS,UAAW,KAAK,QAAQ,QAAQ,QAAQ;AAC/C,eAAO,WAAW,eAAe,QAAQ,IAAI,SAAS,MAAM,GAAG,KAAK,QAAQ,MAAM;MACpF;AAEA,MAAAA,QAAO,UAAU,QAAQ,SAAS,MAAO,QAAQ,QAAQ,QAAQ,UAAU;AAEzE,YAAI,WAAW,QAAW;AACxB,qBAAW;AACX,mBAAS,KAAK;AACd,mBAAS;QAEb,WAAa,WAAW,UAAa,OAAO,WAAW,UAAU;AAC7D,qBAAW;AACX,mBAAS,KAAK;AACd,mBAAS;QAEb,WAAa,SAAS,MAAM,GAAG;AAC3B,mBAAS,WAAW;AACpB,cAAI,SAAS,MAAM,GAAG;AACpB,qBAAS,WAAW;AACpB,gBAAI,aAAa;AAAW,yBAAW;UAC7C,OAAW;AACL,uBAAW;AACX,qBAAS;UACf;QACA,OAAS;AACL,gBAAM,IAAI;YACR;UACN;QACA;AAEE,cAAM,YAAY,KAAK,SAAS;AAChC,YAAI,WAAW,UAAa,SAAS;AAAW,mBAAS;AAEzD,YAAK,OAAO,SAAS,MAAM,SAAS,KAAK,SAAS,MAAO,SAAS,KAAK,QAAQ;AAC7E,gBAAM,IAAI,WAAW,wCAAwC;QACjE;AAEE,YAAI,CAAC;AAAU,qBAAW;AAE1B,YAAI,cAAc;AAClB,mBAAS;AACP,kBAAQ;iBACD;AACH,qBAAO,SAAS,MAAM,QAAQ,QAAQ,MAAM;iBAEzC;iBACA;AACH,qBAAO,UAAU,MAAM,QAAQ,QAAQ,MAAM;iBAE1C;iBACA;iBACA;AACH,qBAAO,WAAW,MAAM,QAAQ,QAAQ,MAAM;iBAE3C;AAEH,qBAAO,YAAY,MAAM,QAAQ,QAAQ,MAAM;iBAE5C;iBACA;iBACA;iBACA;AACH,qBAAO,UAAU,MAAM,QAAQ,QAAQ,MAAM;;AAG7C,kBAAI;AAAa,sBAAM,IAAI,UAAU,uBAAuB,QAAQ;AACpE,0BAAY,KAAK,UAAU,YAAW;AACtC,4BAAc;;QAEtB;MACA;AAEA,MAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,eAAO;UACL,MAAM;UACN,MAAM,MAAM,UAAU,MAAM,KAAK,KAAK,QAAQ,MAAM,CAAC;QACzD;MACA;AAEA,eAAS,YAAa,KAAK,OAAO,KAAK;AACrC,YAAI,UAAU,KAAK,QAAQ,IAAI,QAAQ;AACrC,iBAAO,OAAO,cAAc,GAAG;QACnC,OAAS;AACL,iBAAO,OAAO,cAAc,IAAI,MAAM,OAAO,GAAG,CAAC;QACrD;MACA;AAEA,eAAS,UAAW,KAAK,OAAO,KAAK;AACnC,cAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAC9B,cAAM,MAAM,CAAA;AAEZ,YAAI,IAAI;AACR,eAAO,IAAI,KAAK;AACd,gBAAM,YAAY,IAAI;AACtB,cAAI,YAAY;AAChB,cAAI,mBAAoB,YAAY,MAChC,IACC,YAAY,MACT,IACC,YAAY,MACT,IACA;AAEZ,cAAI,IAAI,oBAAoB,KAAK;AAC/B,gBAAI,YAAY,WAAW,YAAY;AAEvC,oBAAQ;mBACD;AACH,oBAAI,YAAY,KAAM;AACpB,8BAAY;gBACxB;AACU;mBACG;AACH,6BAAa,IAAI,IAAI;AACrB,qBAAK,aAAa,SAAU,KAAM;AAChC,mCAAiB,YAAY,OAAS,IAAO,aAAa;AAC1D,sBAAI,gBAAgB,KAAM;AACxB,gCAAY;kBAC1B;gBACA;AACU;mBACG;AACH,6BAAa,IAAI,IAAI;AACrB,4BAAY,IAAI,IAAI;AACpB,qBAAK,aAAa,SAAU,QAAS,YAAY,SAAU,KAAM;AAC/D,mCAAiB,YAAY,OAAQ,MAAO,aAAa,OAAS,IAAO,YAAY;AACrF,sBAAI,gBAAgB,SAAU,gBAAgB,SAAU,gBAAgB,QAAS;AAC/E,gCAAY;kBAC1B;gBACA;AACU;mBACG;AACH,6BAAa,IAAI,IAAI;AACrB,4BAAY,IAAI,IAAI;AACpB,6BAAa,IAAI,IAAI;AACrB,qBAAK,aAAa,SAAU,QAAS,YAAY,SAAU,QAAS,aAAa,SAAU,KAAM;AAC/F,mCAAiB,YAAY,OAAQ,MAAQ,aAAa,OAAS,MAAO,YAAY,OAAS,IAAO,aAAa;AACnH,sBAAI,gBAAgB,SAAU,gBAAgB,SAAU;AACtD,gCAAY;kBAC1B;gBACA;;UAEA;AAEI,cAAI,cAAc,MAAM;AAGtB,wBAAY;AACZ,+BAAmB;UACzB,WAAe,YAAY,OAAQ;AAE7B,yBAAa;AACb,gBAAI,KAAK,cAAc,KAAK,OAAQ,KAAM;AAC1C,wBAAY,QAAS,YAAY;UACvC;AAEI,cAAI,KAAK,SAAS;AAClB,eAAK;QACT;AAEE,eAAO,sBAAsB,GAAG;MAClC;AAKA,YAAM,uBAAuB;AAE7B,eAAS,sBAAuB,YAAY;AAC1C,cAAM,MAAM,WAAW;AACvB,YAAI,OAAO,sBAAsB;AAC/B,iBAAO,OAAO,aAAa,MAAM,QAAQ,UAAU;QACvD;AAGE,YAAI,MAAM;AACV,YAAI,IAAI;AACR,eAAO,IAAI,KAAK;AACd,iBAAO,OAAO,aAAa;YACzB;YACA,WAAW,MAAM,GAAG,KAAK,oBAAoB;UACnD;QACA;AACE,eAAO;MACT;AAEA,eAAS,WAAY,KAAK,OAAO,KAAK;AACpC,YAAI,MAAM;AACV,cAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAE9B,iBAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,iBAAO,OAAO,aAAa,IAAI,KAAK,GAAI;QAC5C;AACE,eAAO;MACT;AAEA,eAAS,YAAa,KAAK,OAAO,KAAK;AACrC,YAAI,MAAM;AACV,cAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAE9B,iBAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,iBAAO,OAAO,aAAa,IAAI,EAAE;QACrC;AACE,eAAO;MACT;AAEA,eAAS,SAAU,KAAK,OAAO,KAAK;AAClC,cAAM,MAAM,IAAI;AAEhB,YAAI,CAAC,SAAS,QAAQ;AAAG,kBAAQ;AACjC,YAAI,CAAC,OAAO,MAAM,KAAK,MAAM;AAAK,gBAAM;AAExC,YAAI,MAAM;AACV,iBAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,iBAAO,oBAAoB,IAAI;QACnC;AACE,eAAO;MACT;AAEA,eAAS,aAAc,KAAK,OAAO,KAAK;AACtC,cAAM,QAAQ,IAAI,MAAM,OAAO,GAAG;AAClC,YAAI,MAAM;AAEV,iBAAS,IAAI,GAAG,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG;AAC5C,iBAAO,OAAO,aAAa,MAAM,KAAM,MAAM,IAAI,KAAK,GAAI;QAC9D;AACE,eAAO;MACT;AAEA,MAAAA,QAAO,UAAU,QAAQ,SAAS,MAAO,OAAO,KAAK;AACnD,cAAM,MAAM,KAAK;AACjB,gBAAQ,CAAC,CAAC;AACV,cAAM,QAAQ,SAAY,MAAM,CAAC,CAAC;AAElC,YAAI,QAAQ,GAAG;AACb,mBAAS;AACT,cAAI,QAAQ;AAAG,oBAAQ;QAC3B,WAAa,QAAQ,KAAK;AACtB,kBAAQ;QACZ;AAEE,YAAI,MAAM,GAAG;AACX,iBAAO;AACP,cAAI,MAAM;AAAG,kBAAM;QACvB,WAAa,MAAM,KAAK;AACpB,gBAAM;QACV;AAEE,YAAI,MAAM;AAAO,gBAAM;AAEvB,cAAM,SAAS,KAAK,SAAS,OAAO,GAAG;AAEvC,eAAO,eAAe,QAAQA,QAAO,SAAS;AAE9C,eAAO;MACT;AAKA,eAAS,YAAa,QAAQ,KAAK,QAAQ;AACzC,YAAK,SAAS,MAAO,KAAK,SAAS;AAAG,gBAAM,IAAI,WAAW,oBAAoB;AAC/E,YAAI,SAAS,MAAM;AAAQ,gBAAM,IAAI,WAAW,uCAAuC;MACzF;AAEA,MAAAA,QAAO,UAAU,aACjBA,QAAO,UAAU,aAAa,SAAS,WAAY,QAAQsB,aAAY,UAAU;AAC/E,iBAAS,WAAW;AACpB,QAAAA,cAAaA,gBAAe;AAC5B,YAAI,CAAC;AAAU,sBAAY,QAAQA,aAAY,KAAK,MAAM;AAE1D,YAAI,MAAM,KAAK;AACf,YAAI,MAAM;AACV,YAAI,IAAI;AACR,eAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,iBAAO,KAAK,SAAS,KAAK;QAC9B;AAEE,eAAO;MACT;AAEA,MAAAtB,QAAO,UAAU,aACjBA,QAAO,UAAU,aAAa,SAAS,WAAY,QAAQsB,aAAY,UAAU;AAC/E,iBAAS,WAAW;AACpB,QAAAA,cAAaA,gBAAe;AAC5B,YAAI,CAAC,UAAU;AACb,sBAAY,QAAQA,aAAY,KAAK,MAAM;QAC/C;AAEE,YAAI,MAAM,KAAK,SAAS,EAAEA;AAC1B,YAAI,MAAM;AACV,eAAOA,cAAa,MAAM,OAAO,MAAQ;AACvC,iBAAO,KAAK,SAAS,EAAEA,eAAc;QACzC;AAEE,eAAO;MACT;AAEA,MAAAtB,QAAO,UAAU,YACjBA,QAAO,UAAU,YAAY,SAAS,UAAW,QAAQ,UAAU;AACjE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,eAAO,KAAK;MACd;AAEA,MAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,eAAO,KAAK,UAAW,KAAK,SAAS,MAAM;MAC7C;AAEA,MAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,eAAQ,KAAK,WAAW,IAAK,KAAK,SAAS;MAC7C;AAEA,MAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,gBAAS,KAAK,UACT,KAAK,SAAS,MAAM,IACpB,KAAK,SAAS,MAAM,MACpB,KAAK,SAAS,KAAK;MAC1B;AAEA,MAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,eAAQ,KAAK,UAAU,YACnB,KAAK,SAAS,MAAM,KACrB,KAAK,SAAS,MAAM,IACrB,KAAK,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAiB,QAAQ;AACtF,iBAAS,WAAW;AACpB,uBAAe,QAAQ,QAAQ;AAC/B,cAAM,QAAQ,KAAK;AACnB,cAAM,OAAO,KAAK,SAAS;AAC3B,YAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,sBAAY,QAAQ,KAAK,SAAS,CAAC;QACvC;AAEE,cAAM,KAAK,QACT,KAAK,EAAE,UAAU,KAAK,IACtB,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK;AAExB,cAAM,KAAK,KAAK,EAAE,UAChB,KAAK,EAAE,UAAU,KAAK,IACtB,KAAK,EAAE,UAAU,KAAK,KACtB,OAAO,KAAK;AAEd,eAAO,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE;MAC9C,CAAC;AAED,MAAAA,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAiB,QAAQ;AACtF,iBAAS,WAAW;AACpB,uBAAe,QAAQ,QAAQ;AAC/B,cAAM,QAAQ,KAAK;AACnB,cAAM,OAAO,KAAK,SAAS;AAC3B,YAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,sBAAY,QAAQ,KAAK,SAAS,CAAC;QACvC;AAEE,cAAM,KAAK,QAAQ,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,IACtB,KAAK,EAAE;AAET,cAAM,KAAK,KAAK,EAAE,UAAU,KAAK,KAC/B,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,IACtB;AAEF,gBAAQ,OAAO,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE;MAC/C,CAAC;AAED,MAAAA,QAAO,UAAU,YAAY,SAAS,UAAW,QAAQsB,aAAY,UAAU;AAC7E,iBAAS,WAAW;AACpB,QAAAA,cAAaA,gBAAe;AAC5B,YAAI,CAAC;AAAU,sBAAY,QAAQA,aAAY,KAAK,MAAM;AAE1D,YAAI,MAAM,KAAK;AACf,YAAI,MAAM;AACV,YAAI,IAAI;AACR,eAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,iBAAO,KAAK,SAAS,KAAK;QAC9B;AACE,eAAO;AAEP,YAAI,OAAO;AAAK,iBAAO,KAAK,IAAI,GAAG,IAAIA,WAAU;AAEjD,eAAO;MACT;AAEA,MAAAtB,QAAO,UAAU,YAAY,SAAS,UAAW,QAAQsB,aAAY,UAAU;AAC7E,iBAAS,WAAW;AACpB,QAAAA,cAAaA,gBAAe;AAC5B,YAAI,CAAC;AAAU,sBAAY,QAAQA,aAAY,KAAK,MAAM;AAE1D,YAAI,IAAIA;AACR,YAAI,MAAM;AACV,YAAI,MAAM,KAAK,SAAS,EAAE;AAC1B,eAAO,IAAI,MAAM,OAAO,MAAQ;AAC9B,iBAAO,KAAK,SAAS,EAAE,KAAK;QAChC;AACE,eAAO;AAEP,YAAI,OAAO;AAAK,iBAAO,KAAK,IAAI,GAAG,IAAIA,WAAU;AAEjD,eAAO;MACT;AAEA,MAAAtB,QAAO,UAAU,WAAW,SAAS,SAAU,QAAQ,UAAU;AAC/D,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,YAAI,EAAE,KAAK,UAAU;AAAO,iBAAQ,KAAK;AACzC,gBAAS,MAAO,KAAK,UAAU,KAAK;MACtC;AAEA,MAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,cAAM,MAAM,KAAK,UAAW,KAAK,SAAS,MAAM;AAChD,eAAQ,MAAM,QAAU,MAAM,aAAa;MAC7C;AAEA,MAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,cAAM,MAAM,KAAK,SAAS,KAAM,KAAK,WAAW;AAChD,eAAQ,MAAM,QAAU,MAAM,aAAa;MAC7C;AAEA,MAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,eAAQ,KAAK,UACV,KAAK,SAAS,MAAM,IACpB,KAAK,SAAS,MAAM,KACpB,KAAK,SAAS,MAAM;MACzB;AAEA,MAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,eAAQ,KAAK,WAAW,KACrB,KAAK,SAAS,MAAM,KACpB,KAAK,SAAS,MAAM,IACpB,KAAK,SAAS;MACnB;AAEA,MAAAA,QAAO,UAAU,iBAAiB,mBAAmB,SAAS,eAAgB,QAAQ;AACpF,iBAAS,WAAW;AACpB,uBAAe,QAAQ,QAAQ;AAC/B,cAAM,QAAQ,KAAK;AACnB,cAAM,OAAO,KAAK,SAAS;AAC3B,YAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,sBAAY,QAAQ,KAAK,SAAS,CAAC;QACvC;AAEE,cAAM,MAAM,KAAK,SAAS,KACxB,KAAK,SAAS,KAAK,KAAK,IACxB,KAAK,SAAS,KAAK,KAAK,MACvB,QAAQ;AAEX,gBAAQ,OAAO,GAAG,KAAK,OAAO,EAAE,KAC9B,OAAO,QACP,KAAK,EAAE,UAAU,KAAK,IACtB,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,EAAE;MAC5B,CAAC;AAED,MAAAA,QAAO,UAAU,iBAAiB,mBAAmB,SAAS,eAAgB,QAAQ;AACpF,iBAAS,WAAW;AACpB,uBAAe,QAAQ,QAAQ;AAC/B,cAAM,QAAQ,KAAK;AACnB,cAAM,OAAO,KAAK,SAAS;AAC3B,YAAI,UAAU,UAAa,SAAS,QAAW;AAC7C,sBAAY,QAAQ,KAAK,SAAS,CAAC;QACvC;AAEE,cAAM,OAAO,SAAS,MACpB,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,IACtB,KAAK,EAAE;AAET,gBAAQ,OAAO,GAAG,KAAK,OAAO,EAAE,KAC9B,OAAO,KAAK,EAAE,UAAU,KAAK,KAC7B,KAAK,EAAE,UAAU,KAAK,KACtB,KAAK,EAAE,UAAU,KAAK,IACtB,IAAI;MACR,CAAC;AAED,MAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,eAAOoB,UAAQ,KAAK,MAAM,QAAQ,MAAM,IAAI,CAAC;MAC/C;AAEA,MAAApB,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,eAAOoB,UAAQ,KAAK,MAAM,QAAQ,OAAO,IAAI,CAAC;MAChD;AAEA,MAAApB,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,eAAOoB,UAAQ,KAAK,MAAM,QAAQ,MAAM,IAAI,CAAC;MAC/C;AAEA,MAAApB,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,sBAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,eAAOoB,UAAQ,KAAK,MAAM,QAAQ,OAAO,IAAI,CAAC;MAChD;AAEA,eAAS,SAAU,KAAK,OAAO,QAAQ,KAAK,KAAK,KAAK;AACpD,YAAI,CAACpB,QAAO,SAAS,GAAG;AAAG,gBAAM,IAAI,UAAU,6CAA6C;AAC5F,YAAI,QAAQ,OAAO,QAAQ;AAAK,gBAAM,IAAI,WAAW,mCAAmC;AACxF,YAAI,SAAS,MAAM,IAAI;AAAQ,gBAAM,IAAI,WAAW,oBAAoB;MAC1E;AAEA,MAAAA,QAAO,UAAU,cACjBA,QAAO,UAAU,cAAc,SAAS,YAAa,OAAO,QAAQsB,aAAY,UAAU;AACxF,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,QAAAA,cAAaA,gBAAe;AAC5B,YAAI,CAAC,UAAU;AACb,gBAAM,WAAW,KAAK,IAAI,GAAG,IAAIA,WAAU,IAAI;AAC/C,mBAAS,MAAM,OAAO,QAAQA,aAAY,UAAU,CAAC;QACzD;AAEE,YAAI,MAAM;AACV,YAAI,IAAI;AACR,aAAK,UAAU,QAAQ;AACvB,eAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,eAAK,SAAS,KAAM,QAAQ,MAAO;QACvC;AAEE,eAAO,SAASA;MAClB;AAEA,MAAAtB,QAAO,UAAU,cACjBA,QAAO,UAAU,cAAc,SAAS,YAAa,OAAO,QAAQsB,aAAY,UAAU;AACxF,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,QAAAA,cAAaA,gBAAe;AAC5B,YAAI,CAAC,UAAU;AACb,gBAAM,WAAW,KAAK,IAAI,GAAG,IAAIA,WAAU,IAAI;AAC/C,mBAAS,MAAM,OAAO,QAAQA,aAAY,UAAU,CAAC;QACzD;AAEE,YAAI,IAAIA,cAAa;AACrB,YAAI,MAAM;AACV,aAAK,SAAS,KAAK,QAAQ;AAC3B,eAAO,EAAE,KAAK,MAAM,OAAO,MAAQ;AACjC,eAAK,SAAS,KAAM,QAAQ,MAAO;QACvC;AAEE,eAAO,SAASA;MAClB;AAEA,MAAAtB,QAAO,UAAU,aACjBA,QAAO,UAAU,aAAa,SAAS,WAAY,OAAO,QAAQ,UAAU;AAC1E,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,mBAAS,MAAM,OAAO,QAAQ,GAAG,KAAM,CAAC;AACvD,aAAK,UAAW,QAAQ;AACxB,eAAO,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,mBAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,CAAC;AACzD,aAAK,UAAW,QAAQ;AACxB,aAAK,SAAS,KAAM,UAAU;AAC9B,eAAO,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,mBAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,CAAC;AACzD,aAAK,UAAW,UAAU;AAC1B,aAAK,SAAS,KAAM,QAAQ;AAC5B,eAAO,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,mBAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,CAAC;AAC7D,aAAK,SAAS,KAAM,UAAU;AAC9B,aAAK,SAAS,KAAM,UAAU;AAC9B,aAAK,SAAS,KAAM,UAAU;AAC9B,aAAK,UAAW,QAAQ;AACxB,eAAO,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,mBAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,CAAC;AAC7D,aAAK,UAAW,UAAU;AAC1B,aAAK,SAAS,KAAM,UAAU;AAC9B,aAAK,SAAS,KAAM,UAAU;AAC9B,aAAK,SAAS,KAAM,QAAQ;AAC5B,eAAO,SAAS;MAClB;AAEA,eAAS,eAAgB,KAAK,OAAO,QAAQ,KAAK,KAAK;AACrD,mBAAW,OAAO,KAAK,KAAK,KAAK,QAAQ,CAAC;AAE1C,YAAI,KAAK,OAAO,QAAQ,OAAO,UAAU,CAAC;AAC1C,YAAI,YAAY;AAChB,aAAK,MAAM;AACX,YAAI,YAAY;AAChB,aAAK,MAAM;AACX,YAAI,YAAY;AAChB,aAAK,MAAM;AACX,YAAI,YAAY;AAChB,YAAI,KAAK,OAAO,SAAS,OAAO,EAAE,IAAI,OAAO,UAAU,CAAC;AACxD,YAAI,YAAY;AAChB,aAAK,MAAM;AACX,YAAI,YAAY;AAChB,aAAK,MAAM;AACX,YAAI,YAAY;AAChB,aAAK,MAAM;AACX,YAAI,YAAY;AAChB,eAAO;MACT;AAEA,eAAS,eAAgB,KAAK,OAAO,QAAQ,KAAK,KAAK;AACrD,mBAAW,OAAO,KAAK,KAAK,KAAK,QAAQ,CAAC;AAE1C,YAAI,KAAK,OAAO,QAAQ,OAAO,UAAU,CAAC;AAC1C,YAAI,SAAS,KAAK;AAClB,aAAK,MAAM;AACX,YAAI,SAAS,KAAK;AAClB,aAAK,MAAM;AACX,YAAI,SAAS,KAAK;AAClB,aAAK,MAAM;AACX,YAAI,SAAS,KAAK;AAClB,YAAI,KAAK,OAAO,SAAS,OAAO,EAAE,IAAI,OAAO,UAAU,CAAC;AACxD,YAAI,SAAS,KAAK;AAClB,aAAK,MAAM;AACX,YAAI,SAAS,KAAK;AAClB,aAAK,MAAM;AACX,YAAI,SAAS,KAAK;AAClB,aAAK,MAAM;AACX,YAAI,UAAU;AACd,eAAO,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,mBAAmB,mBAAmB,SAAS,iBAAkB,OAAO,SAAS,GAAG;AACnG,eAAO,eAAe,MAAM,OAAO,QAAQ,OAAO,CAAC,GAAG,OAAO,oBAAoB,CAAC;MACpF,CAAC;AAED,MAAAA,QAAO,UAAU,mBAAmB,mBAAmB,SAAS,iBAAkB,OAAO,SAAS,GAAG;AACnG,eAAO,eAAe,MAAM,OAAO,QAAQ,OAAO,CAAC,GAAG,OAAO,oBAAoB,CAAC;MACpF,CAAC;AAED,MAAAA,QAAO,UAAU,aAAa,SAAS,WAAY,OAAO,QAAQsB,aAAY,UAAU;AACtF,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC,UAAU;AACb,gBAAM,QAAQ,KAAK,IAAI,GAAI,IAAIA,cAAc,CAAC;AAE9C,mBAAS,MAAM,OAAO,QAAQA,aAAY,QAAQ,GAAG,CAAC,KAAK;QAC/D;AAEE,YAAI,IAAI;AACR,YAAI,MAAM;AACV,YAAI,MAAM;AACV,aAAK,UAAU,QAAQ;AACvB,eAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,cAAI,QAAQ,KAAK,QAAQ,KAAK,KAAK,SAAS,IAAI,OAAO,GAAG;AACxD,kBAAM;UACZ;AACI,eAAK,SAAS,MAAO,QAAQ,OAAQ,KAAK,MAAM;QACpD;AAEE,eAAO,SAASA;MAClB;AAEA,MAAAtB,QAAO,UAAU,aAAa,SAAS,WAAY,OAAO,QAAQsB,aAAY,UAAU;AACtF,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC,UAAU;AACb,gBAAM,QAAQ,KAAK,IAAI,GAAI,IAAIA,cAAc,CAAC;AAE9C,mBAAS,MAAM,OAAO,QAAQA,aAAY,QAAQ,GAAG,CAAC,KAAK;QAC/D;AAEE,YAAI,IAAIA,cAAa;AACrB,YAAI,MAAM;AACV,YAAI,MAAM;AACV,aAAK,SAAS,KAAK,QAAQ;AAC3B,eAAO,EAAE,KAAK,MAAM,OAAO,MAAQ;AACjC,cAAI,QAAQ,KAAK,QAAQ,KAAK,KAAK,SAAS,IAAI,OAAO,GAAG;AACxD,kBAAM;UACZ;AACI,eAAK,SAAS,MAAO,QAAQ,OAAQ,KAAK,MAAM;QACpD;AAEE,eAAO,SAASA;MAClB;AAEA,MAAAtB,QAAO,UAAU,YAAY,SAAS,UAAW,OAAO,QAAQ,UAAU;AACxE,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,mBAAS,MAAM,OAAO,QAAQ,GAAG,KAAM,IAAK;AAC3D,YAAI,QAAQ;AAAG,kBAAQ,MAAO,QAAQ;AACtC,aAAK,UAAW,QAAQ;AACxB,eAAO,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,mBAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,MAAO;AAC/D,aAAK,UAAW,QAAQ;AACxB,aAAK,SAAS,KAAM,UAAU;AAC9B,eAAO,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,mBAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,MAAO;AAC/D,aAAK,UAAW,UAAU;AAC1B,aAAK,SAAS,KAAM,QAAQ;AAC5B,eAAO,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,mBAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,WAAW;AACvE,aAAK,UAAW,QAAQ;AACxB,aAAK,SAAS,KAAM,UAAU;AAC9B,aAAK,SAAS,KAAM,UAAU;AAC9B,aAAK,SAAS,KAAM,UAAU;AAC9B,eAAO,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC;AAAU,mBAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,WAAW;AACvE,YAAI,QAAQ;AAAG,kBAAQ,aAAa,QAAQ;AAC5C,aAAK,UAAW,UAAU;AAC1B,aAAK,SAAS,KAAM,UAAU;AAC9B,aAAK,SAAS,KAAM,UAAU;AAC9B,aAAK,SAAS,KAAM,QAAQ;AAC5B,eAAO,SAAS;MAClB;AAEA,MAAAA,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAiB,OAAO,SAAS,GAAG;AACjG,eAAO,eAAe,MAAM,OAAO,QAAQ,CAAC,OAAO,oBAAoB,GAAG,OAAO,oBAAoB,CAAC;MACxG,CAAC;AAED,MAAAA,QAAO,UAAU,kBAAkB,mBAAmB,SAAS,gBAAiB,OAAO,SAAS,GAAG;AACjG,eAAO,eAAe,MAAM,OAAO,QAAQ,CAAC,OAAO,oBAAoB,GAAG,OAAO,oBAAoB,CAAC;MACxG,CAAC;AAED,eAAS,aAAc,KAAK,OAAO,QAAQ,KAAK,KAAK,KAAK;AACxD,YAAI,SAAS,MAAM,IAAI;AAAQ,gBAAM,IAAI,WAAW,oBAAoB;AACxE,YAAI,SAAS;AAAG,gBAAM,IAAI,WAAW,oBAAoB;MAC3D;AAEA,eAAS,WAAY,KAAK,OAAO,QAAQ,cAAc,UAAU;AAC/D,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC,UAAU;AACb,uBAAa,KAAK,OAAO,QAAQ,CAAkD;QACvF;AACEoB,kBAAQ,MAAM,KAAK,OAAO,QAAQ,cAAc,IAAI,CAAC;AACrD,eAAO,SAAS;MAClB;AAEA,MAAApB,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,eAAO,WAAW,MAAM,OAAO,QAAQ,MAAM,QAAQ;MACvD;AAEA,MAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,eAAO,WAAW,MAAM,OAAO,QAAQ,OAAO,QAAQ;MACxD;AAEA,eAAS,YAAa,KAAK,OAAO,QAAQ,cAAc,UAAU;AAChE,gBAAQ,CAAC;AACT,iBAAS,WAAW;AACpB,YAAI,CAAC,UAAU;AACb,uBAAa,KAAK,OAAO,QAAQ,CAAoD;QACzF;AACEoB,kBAAQ,MAAM,KAAK,OAAO,QAAQ,cAAc,IAAI,CAAC;AACrD,eAAO,SAAS;MAClB;AAEA,MAAApB,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,eAAO,YAAY,MAAM,OAAO,QAAQ,MAAM,QAAQ;MACxD;AAEA,MAAAA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,eAAO,YAAY,MAAM,OAAO,QAAQ,OAAO,QAAQ;MACzD;AAGA,MAAAA,QAAO,UAAU,OAAO,SAAS,KAAM,QAAQ,aAAa,OAAO,KAAK;AACtE,YAAI,CAACA,QAAO,SAAS,MAAM;AAAG,gBAAM,IAAI,UAAU,6BAA6B;AAC/E,YAAI,CAAC;AAAO,kBAAQ;AACpB,YAAI,CAAC,OAAO,QAAQ;AAAG,gBAAM,KAAK;AAClC,YAAI,eAAe,OAAO;AAAQ,wBAAc,OAAO;AACvD,YAAI,CAAC;AAAa,wBAAc;AAChC,YAAI,MAAM,KAAK,MAAM;AAAO,gBAAM;AAGlC,YAAI,QAAQ;AAAO,iBAAO;AAC1B,YAAI,OAAO,WAAW,KAAK,KAAK,WAAW;AAAG,iBAAO;AAGrD,YAAI,cAAc,GAAG;AACnB,gBAAM,IAAI,WAAW,2BAA2B;QACpD;AACE,YAAI,QAAQ,KAAK,SAAS,KAAK;AAAQ,gBAAM,IAAI,WAAW,oBAAoB;AAChF,YAAI,MAAM;AAAG,gBAAM,IAAI,WAAW,yBAAyB;AAG3D,YAAI,MAAM,KAAK;AAAQ,gBAAM,KAAK;AAClC,YAAI,OAAO,SAAS,cAAc,MAAM,OAAO;AAC7C,gBAAM,OAAO,SAAS,cAAc;QACxC;AAEE,cAAM,MAAM,MAAM;AAElB,YAAI,SAAS,UAAU,OAAO,WAAW,UAAU,eAAe,YAAY;AAE5E,eAAK,WAAW,aAAa,OAAO,GAAG;QAC3C,OAAS;AACL,qBAAW,UAAU,IAAI;YACvB;YACA,KAAK,SAAS,OAAO,GAAG;YACxB;UACN;QACA;AAEE,eAAO;MACT;AAMA,MAAAA,QAAO,UAAU,OAAO,SAAS,KAAM,KAAK,OAAO,KAAK,UAAU;AAEhE,YAAI,OAAO,QAAQ,UAAU;AAC3B,cAAI,OAAO,UAAU,UAAU;AAC7B,uBAAW;AACX,oBAAQ;AACR,kBAAM,KAAK;UACjB,WAAe,OAAO,QAAQ,UAAU;AAClC,uBAAW;AACX,kBAAM,KAAK;UACjB;AACI,cAAI,aAAa,UAAa,OAAO,aAAa,UAAU;AAC1D,kBAAM,IAAI,UAAU,2BAA2B;UACrD;AACI,cAAI,OAAO,aAAa,YAAY,CAACA,QAAO,WAAW,QAAQ,GAAG;AAChE,kBAAM,IAAI,UAAU,uBAAuB,QAAQ;UACzD;AACI,cAAI,IAAI,WAAW,GAAG;AACpB,kBAAMyB,QAAO,IAAI,WAAW,CAAC;AAC7B,gBAAK,aAAa,UAAUA,QAAO,OAC/B,aAAa,UAAU;AAEzB,oBAAMA;YACd;UACA;QACA,WAAa,OAAO,QAAQ,UAAU;AAClC,gBAAM,MAAM;QAChB,WAAa,OAAO,QAAQ,WAAW;AACnC,gBAAM,OAAO,GAAG;QACpB;AAGE,YAAI,QAAQ,KAAK,KAAK,SAAS,SAAS,KAAK,SAAS,KAAK;AACzD,gBAAM,IAAI,WAAW,oBAAoB;QAC7C;AAEE,YAAI,OAAO,OAAO;AAChB,iBAAO;QACX;AAEE,gBAAQ,UAAU;AAClB,cAAM,QAAQ,SAAY,KAAK,SAAS,QAAQ;AAEhD,YAAI,CAAC;AAAK,gBAAM;AAEhB,YAAI;AACJ,YAAI,OAAO,QAAQ,UAAU;AAC3B,eAAK,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAC5B,iBAAK,KAAK;UAChB;QACA,OAAS;AACL,gBAAM,QAAQzB,QAAO,SAAS,GAAG,IAC7B,MACAA,QAAO,KAAK,KAAK,QAAQ;AAC7B,gBAAM,MAAM,MAAM;AAClB,cAAI,QAAQ,GAAG;AACb,kBAAM,IAAI,UAAU,gBAAgB,MAClC,mCAAmC;UAC3C;AACI,eAAK,IAAI,GAAG,IAAI,MAAM,OAAO,EAAE,GAAG;AAChC,iBAAK,IAAI,SAAS,MAAM,IAAI;UAClC;QACA;AAEE,eAAO;MACT;AAMA,YAAM,SAAS,CAAA;AACf,eAAS,EAAG,KAAK0B,aAAY,MAAM;AACjC,eAAO,OAAO,MAAM,kBAAkB,KAAK;UACzC,cAAe;AACb,kBAAK;AAEL,mBAAO,eAAe,MAAM,WAAW;cACrC,OAAOA,YAAW,MAAM,MAAM,SAAS;cACvC,UAAU;cACV,cAAc;YACtB,CAAO;AAGD,iBAAK,OAAO,GAAG,KAAK,SAAS;AAG7B,iBAAK;AAEL,mBAAO,KAAK;UAClB;UAEI,IAAI,OAAQ;AACV,mBAAO;UACb;UAEI,IAAI,KAAM,OAAO;AACf,mBAAO,eAAe,MAAM,QAAQ;cAClC,cAAc;cACd,YAAY;cACZ;cACA,UAAU;YAClB,CAAO;UACP;UAEI,WAAY;AACV,mBAAO,GAAG,KAAK,SAAS,SAAS,KAAK;UAC5C;QACA;MACA;AAEA;QAAE;QACA,SAAU,MAAM;AACd,cAAI,MAAM;AACR,mBAAO,GAAG;UAChB;AAEI,iBAAO;QACX;QAAK;MAAU;AACf;QAAE;QACA,SAAU,MAAM,QAAQ;AACtB,iBAAO,QAAQ,wDAAwD,OAAO;QAClF;QAAK;MAAS;AACd;QAAE;QACA,SAAU,KAAK,OAAO,OAAO;AAC3B,cAAI,MAAM,iBAAiB;AAC3B,cAAI,WAAW;AACf,cAAI,OAAO,UAAU,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AACxD,uBAAW,sBAAsB,OAAO,KAAK,CAAC;UACpD,WAAe,OAAO,UAAU,UAAU;AACpC,uBAAW,OAAO,KAAK;AACvB,gBAAI,QAAQ,OAAO,CAAC,KAAK,OAAO,EAAE,KAAK,QAAQ,EAAE,OAAO,CAAC,KAAK,OAAO,EAAE,IAAI;AACzE,yBAAW,sBAAsB,QAAQ;YACjD;AACM,wBAAY;UAClB;AACI,iBAAO,eAAe,mBAAmB;AACzC,iBAAO;QACX;QAAK;MAAU;AAEf,eAAS,sBAAuB,KAAK;AACnC,YAAI,MAAM;AACV,YAAI,IAAI,IAAI;AACZ,cAAM,QAAQ,IAAI,OAAO,MAAM,IAAI;AACnC,eAAO,KAAK,QAAQ,GAAG,KAAK,GAAG;AAC7B,gBAAM,IAAI,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI;QACpC;AACE,eAAO,GAAG,IAAI,MAAM,GAAG,CAAC,IAAI;MAC9B;AAKA,eAAS,YAAa,KAAK,QAAQJ,aAAY;AAC7C,uBAAe,QAAQ,QAAQ;AAC/B,YAAI,IAAI,YAAY,UAAa,IAAI,SAASA,iBAAgB,QAAW;AACvE,sBAAY,QAAQ,IAAI,UAAUA,cAAa,EAAE;QACrD;MACA;AAEA,eAAS,WAAY,OAAO,KAAK,KAAK,KAAK,QAAQA,aAAY;AAC7D,YAAI,QAAQ,OAAO,QAAQ,KAAK;AAC9B,gBAAM,IAAI,OAAO,QAAQ,WAAW,MAAM;AAC1C,cAAI;AACJ,cAAIA,cAAa,GAAG;AAClB,gBAAI,QAAQ,KAAK,QAAQ,OAAO,CAAC,GAAG;AAClC,sBAAQ,OAAO,YAAY,SAASA,cAAa,KAAK,IAAI;YAClE,OAAa;AACL,sBAAQ,SAAS,SAASA,cAAa,KAAK,IAAI,IAAI,kBACxCA,cAAa,KAAK,IAAI,IAAI;YAC9C;UACA,OAAW;AACL,oBAAQ,MAAM,MAAM,YAAY,MAAM;UAC5C;AACI,gBAAM,IAAI,OAAO,iBAAiB,SAAS,OAAO,KAAK;QAC3D;AACE,oBAAY,KAAK,QAAQA,WAAU;MACrC;AAEA,eAAS,eAAgB,OAAO,MAAM;AACpC,YAAI,OAAO,UAAU,UAAU;AAC7B,gBAAM,IAAI,OAAO,qBAAqB,MAAM,UAAU,KAAK;QAC/D;MACA;AAEA,eAAS,YAAa,OAAO,QAAQ,MAAM;AACzC,YAAI,KAAK,MAAM,KAAK,MAAM,OAAO;AAC/B,yBAAe,OAAO,IAAI;AAC1B,gBAAM,IAAI,OAAO,iBAAiB,QAAQ,UAAU,cAAc,KAAK;QAC3E;AAEE,YAAI,SAAS,GAAG;AACd,gBAAM,IAAI,OAAO,yBAAwB;QAC7C;AAEE,cAAM,IAAI,OAAO;UAAiB,QAAQ;UACR,MAAM,OAAO,IAAI,YAAY;UAC7B;QAAK;MACzC;AAKA,YAAM,oBAAoB;AAE1B,eAAS,YAAa,KAAK;AAEzB,cAAM,IAAI,MAAM,GAAG,EAAE;AAErB,cAAM,IAAI,KAAI,EAAG,QAAQ,mBAAmB,EAAE;AAE9C,YAAI,IAAI,SAAS;AAAG,iBAAO;AAE3B,eAAO,IAAI,SAAS,MAAM,GAAG;AAC3B,gBAAM,MAAM;QAChB;AACE,eAAO;MACT;AAEA,eAAS,YAAa,QAAQ,OAAO;AACnC,gBAAQ,SAAS;AACjB,YAAI;AACJ,cAAM,SAAS,OAAO;AACtB,YAAI,gBAAgB;AACpB,cAAM,QAAQ,CAAA;AAEd,iBAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC/B,sBAAY,OAAO,WAAW,CAAC;AAG/B,cAAI,YAAY,SAAU,YAAY,OAAQ;AAE5C,gBAAI,CAAC,eAAe;AAElB,kBAAI,YAAY,OAAQ;AAEtB,qBAAK,SAAS,KAAK;AAAI,wBAAM,KAAK,KAAM,KAAM,GAAI;AAClD;cACV,WAAmB,IAAI,MAAM,QAAQ;AAE3B,qBAAK,SAAS,KAAK;AAAI,wBAAM,KAAK,KAAM,KAAM,GAAI;AAClD;cACV;AAGQ,8BAAgB;AAEhB;YACR;AAGM,gBAAI,YAAY,OAAQ;AACtB,mBAAK,SAAS,KAAK;AAAI,sBAAM,KAAK,KAAM,KAAM,GAAI;AAClD,8BAAgB;AAChB;YACR;AAGM,yBAAa,gBAAgB,SAAU,KAAK,YAAY,SAAU;UACxE,WAAe,eAAe;AAExB,iBAAK,SAAS,KAAK;AAAI,oBAAM,KAAK,KAAM,KAAM,GAAI;UACxD;AAEI,0BAAgB;AAGhB,cAAI,YAAY,KAAM;AACpB,iBAAK,SAAS,KAAK;AAAG;AACtB,kBAAM,KAAK,SAAS;UAC1B,WAAe,YAAY,MAAO;AAC5B,iBAAK,SAAS,KAAK;AAAG;AACtB,kBAAM;cACJ,aAAa,IAAM;cACnB,YAAY,KAAO;YAC3B;UACA,WAAe,YAAY,OAAS;AAC9B,iBAAK,SAAS,KAAK;AAAG;AACtB,kBAAM;cACJ,aAAa,KAAM;cACnB,aAAa,IAAM,KAAO;cAC1B,YAAY,KAAO;YAC3B;UACA,WAAe,YAAY,SAAU;AAC/B,iBAAK,SAAS,KAAK;AAAG;AACtB,kBAAM;cACJ,aAAa,KAAO;cACpB,aAAa,KAAM,KAAO;cAC1B,aAAa,IAAM,KAAO;cAC1B,YAAY,KAAO;YAC3B;UACA,OAAW;AACL,kBAAM,IAAI,MAAM,oBAAoB;UAC1C;QACA;AAEE,eAAO;MACT;AAEA,eAAS,aAAc,KAAK;AAC1B,cAAM,YAAY,CAAA;AAClB,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AAEnC,oBAAU,KAAK,IAAI,WAAW,CAAC,IAAI,GAAI;QAC3C;AACE,eAAO;MACT;AAEA,eAAS,eAAgB,KAAK,OAAO;AACnC,YAAI,GAAG,IAAI;AACX,cAAM,YAAY,CAAA;AAClB,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,eAAK,SAAS,KAAK;AAAG;AAEtB,cAAI,IAAI,WAAW,CAAC;AACpB,eAAK,KAAK;AACV,eAAK,IAAI;AACT,oBAAU,KAAK,EAAE;AACjB,oBAAU,KAAK,EAAE;QACrB;AAEE,eAAO;MACT;AAEA,eAAS,cAAe,KAAK;AAC3B,eAAO,OAAO,YAAY,YAAY,GAAG,CAAC;MAC5C;AAEA,eAAS,WAAY,KAAK,KAAK,QAAQ,QAAQ;AAC7C,YAAI;AACJ,aAAK,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC3B,cAAK,IAAI,UAAU,IAAI,UAAY,KAAK,IAAI;AAAS;AACrD,cAAI,IAAI,UAAU,IAAI;QAC1B;AACE,eAAO;MACT;AAKA,eAAS,WAAY,KAAK,MAAM;AAC9B,eAAO,eAAe,QACnB,OAAO,QAAQ,IAAI,eAAe,QAAQ,IAAI,YAAY,QAAQ,QACjE,IAAI,YAAY,SAAS,KAAK;MACpC;AACA,eAAS,YAAa,KAAK;AAEzB,eAAO,QAAQ;MACjB;AAIA,YAAM,sBAAuB,WAAY;AACvC,cAAM,WAAW;AACjB,cAAM,QAAQ,IAAI,MAAM,GAAG;AAC3B,iBAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,gBAAM,MAAM,IAAI;AAChB,mBAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,kBAAM,MAAM,KAAK,SAAS,KAAK,SAAS;UAC9C;QACA;AACE,eAAO;MACT,EAAC;AAGD,eAAS,mBAAoB,IAAI;AAC/B,eAAO,OAAO,WAAW,cAAc,yBAAyB;MAClE;AAEA,eAAS,yBAA0B;AACjC,cAAM,IAAI,MAAM,sBAAsB;MACxC;;ACzjEA,IAAA,WAAgB,OAAO,WAAW,cAAc,SAC9C,OAAO,SAAS,cAAc,OAC9B,OAAO,WAAW,cAAc,SAAS,CAAA;ACA3C,QAAI,OAAO,OAAO,WAAW,YAAW;AACtC,iBAAW,SAASK,UAAS,MAAM,WAAW;AAE5C,aAAK,SAAS;AACd,aAAK,YAAY,OAAO,OAAO,UAAU,WAAW;UAClD,aAAa;YACX,OAAO;YACP,YAAY;YACZ,UAAU;YACV,cAAc;UACtB;QACA,CAAK;MACL;IACA,OAAO;AACL,iBAAW,SAASA,UAAS,MAAM,WAAW;AAC5C,aAAK,SAAS;AACd,YAAI,WAAW,WAAY;QAAA;AAC3B,iBAAS,YAAY,UAAU;AAC/B,aAAK,YAAY,IAAI,SAAQ;AAC7B,aAAK,UAAU,cAAc;MACjC;IACA;AACA,IAAA,aAAe;AC8HfzC,cAAQ,SAAS;MACf,QAAS,CAAC,GAAG,EAAE;MACf,UAAW,CAAC,GAAG,EAAE;MACjB,aAAc,CAAC,GAAG,EAAE;MACpB,WAAY,CAAC,GAAG,EAAE;MAClB,SAAU,CAAC,IAAI,EAAE;MACjB,QAAS,CAAC,IAAI,EAAE;MAChB,SAAU,CAAC,IAAI,EAAE;MACjB,QAAS,CAAC,IAAI,EAAE;MAChB,QAAS,CAAC,IAAI,EAAE;MAChB,SAAU,CAAC,IAAI,EAAE;MACjB,WAAY,CAAC,IAAI,EAAE;MACnB,OAAQ,CAAC,IAAI,EAAE;MACf,UAAW,CAAC,IAAI,EAAE;IACpB;AAGAA,cAAQ,SAAS;MACf,WAAW;MACX,UAAU;MACV,WAAW;MACX,aAAa;MACb,QAAQ;MACR,UAAU;MACV,QAAQ;MAER,UAAU;IACZ;ACxJA,IAAI,SAAS,OAAO,UAAU;AAE9B,IAAI,aAAa,OAAO,QAAQ,SAAU,KAAK;AAC7C,UAAI,OAAO,CAAA;AACX,eAAS,OAAO,KAAK;AACnB,YAAI,OAAO,KAAK,KAAK,GAAG;AAAG,eAAK,KAAK,GAAG;MAC5C;AACE,aAAO;IACT;AA4BA,IAAI,SAAS,MAAM,UAAU;AAgD7B,IAAI,QAAQ;AAaZ,WAAO,iBAAiB;AAsCxByC,eAAS,gBAAgB,KAAK;AA6C9B,WAAO,OAAO;AAYd,WAAO,KAAK;AAMZ,WAAO,QAAQ;AAOf,WAAO,WAAW;AASlB,WAAO,YAAY;AAMnB,WAAO,kBAAkB;AAyHzB,WAAO,eAAe;AAOtB,WAAO,qBAAqB;AAU5B,WAAO,cAAc;AASrB,WAAO,iBAAiB;AAiFxB,WAAO,SAAS;AAMhB,WAAO,eAAe;AAKtB,WAAO,UAAU;;AC9UjB,IAAM,SAAN,MAAa;MACX,YAAY,MAAM,UAAU;AAC1B,YAAI,CAAC,OAAO,UAAU,IAAI,GAAG;AAC3B,gBAAM,IAAI,UAAU,yBAAyB;QACnD;AAWI,aAAK,OAAO;AAUZ,aAAK,WAAW;MACpB;MAiBE,wBAAwB;AACtB,eAAO,CAAA;MACX;MAcE,OAAO,GAAG,QAAQ;AAChB,cAAM,IAAI,MAAM,oBAAoB;MACxC;MAwBE,OAAO,KAAK,GAAG,QAAQ;AACrB,cAAM,IAAI,MAAM,oBAAoB;MACxC;MAkBE,QAAQ,GAAG,QAAQ;AACjB,YAAI,IAAI,KAAK,MAAM;AACjB,gBAAM,IAAI,WAAW,oBAAoB;QAC/C;AACI,eAAO,KAAK;MAChB;MAkBE,UAAU,UAAU;AAClB,cAAM,KAAK,OAAO,OAAO,KAAK,YAAY,SAAS;AACnD,eAAO,OAAO,IAAI,IAAI;AACtB,WAAG,WAAW;AACd,eAAO;MACX;MAsBE,UAAU,QAAQ;AAChB,eAAO;MACX;IACA;sBACiB;gCAaU;qCA0DK;AAuBhC,IAAM,iBAAN,cAA6B,OAAO;MAYlC,UAAU;AACR,cAAM,IAAI,MAAM,4BAA4B;MAChD;IACA;AAiBA,IAAM,cAAN,cAA0B,eAAe;MACvC,YAAY,aAAa,UAAU;AACjC,YAAI,WAAc,aAAa;AAC7B,wBAAc;QACpB;AACI,YAAK,CAAC,OAAO,UAAU,WAAW,KAAO,KAAK,aAAc;AAC1D,gBAAM,IAAI,UAAU,0CAA0C;QACpE;AACI,cAAM,IAAI,QAAQ;AAKlB,aAAK,cAAc;MACvB;MAGE,UAAU;AACR,eAAO;MACX;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,MAAM,EAAE,SAAS;AACvB,eAAO,KAAK,MAAM,MAAM,KAAK,WAAW;MAC5C;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,eAAO;MACX;IACA;AAsBA,IAAM,eAAN,cAA2B,eAAe;MACxC,YAAY,QAAQ,QAAQ,UAAU;AACpC,YAAI,EAAE,kBAAkB,SAAS;AAC/B,gBAAM,IAAI,UAAU,yBAAyB;QACnD;AAEI,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf,WAAe,CAAC,OAAO,UAAU,MAAM,GAAG;AACpC,gBAAM,IAAI,UAAU,qCAAqC;QAC/D;AAEI,cAAM,OAAO,MAAM,YAAY,OAAO,QAAQ;AAG9C,aAAK,SAAS;AAQd,aAAK,SAAS;MAClB;MAGE,UAAU;AACR,eAAS,KAAK,kBAAkB,QACpB,KAAK,kBAAkB;MACvC;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,KAAK,OAAO,OAAO,GAAG,SAAS,KAAK,MAAM;MACrD;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,KAAK,OAAO,OAAO,KAAK,GAAG,SAAS,KAAK,MAAM;MAC1D;IACA;AAkBA,IAAM,OAAN,cAAmB,OAAO;MACxB,YAAY,MAAM,UAAU;AAC1B,cAAM,MAAM,QAAQ;AACpB,YAAI,IAAI,KAAK,MAAM;AACjB,gBAAM,IAAI,WAAW,8BAA8B;QACzD;MACA;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,EAAE,WAAW,QAAQ,KAAK,IAAI;MACzC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,UAAE,YAAY,KAAK,QAAQ,KAAK,IAAI;AACpC,eAAO,KAAK;MAChB;IACA;AAkBA,IAAM,SAAN,cAAqB,OAAO;MAC1B,YAAY,MAAM,UAAU;AAC1B,cAAO,MAAM,QAAQ;AACrB,YAAI,IAAI,KAAK,MAAM;AACjB,gBAAM,IAAI,WAAW,8BAA8B;QACzD;MACA;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,EAAE,WAAW,QAAQ,KAAK,IAAI;MACzC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,UAAE,YAAY,KAAK,QAAQ,KAAK,IAAI;AACpC,eAAO,KAAK;MAChB;IACA;AAkBA,IAAM,MAAN,cAAkB,OAAO;MACvB,YAAY,MAAM,UAAU;AAC1B,cAAM,MAAM,QAAQ;AACpB,YAAI,IAAI,KAAK,MAAM;AACjB,gBAAM,IAAI,WAAW,8BAA8B;QACzD;MACA;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,EAAE,UAAU,QAAQ,KAAK,IAAI;MACxC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,UAAE,WAAW,KAAK,QAAQ,KAAK,IAAI;AACnC,eAAO,KAAK;MAChB;IACA;AAkBA,IAAM,QAAN,cAAoB,OAAO;MACzB,YAAY,MAAM,UAAU;AAC1B,cAAM,MAAM,QAAQ;AACpB,YAAI,IAAI,KAAK,MAAM;AACjB,gBAAM,IAAI,WAAW,8BAA8B;QACzD;MACA;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,EAAE,UAAU,QAAQ,KAAK,IAAI;MACxC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,UAAE,WAAW,KAAK,QAAQ,KAAK,IAAI;AACnC,eAAO,KAAK;MAChB;IACA;AAEA,IAAM,QAAQ,KAAK,IAAI,GAAG,EAAE;AAyB5B,IAAM,aAAN,cAAyB,OAAO;MAC9B,YAAY,UAAU;AACpB,cAAM,GAAG,QAAQ;MACrB;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,OAAO,EAAE,aAAa,MAAM;AAClC,cAAM,OAAO,EAAE,aAAa,SAAS,CAAC;AACtC,eAAO,aAAa,MAAM,IAAI;MAClC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,QAAQ,YAAY,GAAG;AAC7B,UAAE,cAAc,MAAM,MAAM,MAAM;AAClC,UAAE,cAAc,MAAM,MAAM,SAAS,CAAC;AACtC,eAAO;MACX;IACA;AAaA,IAAM,eAAN,cAA2B,OAAO;MAChC,YAAY,UAAU;AACpB,cAAM,GAAG,QAAQ;MACrB;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,OAAO,EAAE,aAAa,MAAM;AAClC,cAAM,OAAO,EAAE,aAAa,SAAS,CAAC;AACtC,eAAO,aAAa,MAAM,IAAI;MAClC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,QAAQ,YAAY,GAAG;AAC7B,UAAE,cAAc,MAAM,MAAM,MAAM;AAClC,UAAE,cAAc,MAAM,MAAM,SAAS,CAAC;AACtC,eAAO;MACX;IACA;AAaA,IAAM,YAAN,cAAwB,OAAO;MAC7B,YAAY,UAAU;AACpB,cAAM,GAAG,QAAQ;MACrB;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,OAAO,EAAE,aAAa,MAAM;AAClC,cAAM,OAAO,EAAE,YAAY,SAAS,CAAC;AACrC,eAAO,aAAa,MAAM,IAAI;MAClC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,QAAQ,YAAY,GAAG;AAC7B,UAAE,cAAc,MAAM,MAAM,MAAM;AAClC,UAAE,aAAa,MAAM,MAAM,SAAS,CAAC;AACrC,eAAO;MACX;IACA;AAaA,IAAM,cAAN,cAA0B,OAAO;MAC/B,YAAY,UAAU;AACpB,cAAM,GAAG,QAAQ;MACrB;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,OAAO,EAAE,YAAY,MAAM;AACjC,cAAM,OAAO,EAAE,aAAa,SAAS,CAAC;AACtC,eAAO,aAAa,MAAM,IAAI;MAClC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,QAAQ,YAAY,GAAG;AAC7B,UAAE,aAAa,MAAM,MAAM,MAAM;AACjC,UAAE,cAAc,MAAM,MAAM,SAAS,CAAC;AACtC,eAAO;MACX;IACA;AAYA,IAAM,QAAN,cAAoB,OAAO;MACzB,YAAY,UAAU;AACpB,cAAM,GAAG,QAAQ;MACrB;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,EAAE,YAAY,MAAM;MAC/B;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,UAAE,aAAa,KAAK,MAAM;AAC1B,eAAO;MACX;IACA;AAYA,IAAM,UAAN,cAAsB,OAAO;MAC3B,YAAY,UAAU;AACpB,cAAM,GAAG,QAAQ;MACrB;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,EAAE,YAAY,MAAM;MAC/B;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,UAAE,aAAa,KAAK,MAAM;AAC1B,eAAO;MACX;IACA;AAYA,IAAM,SAAN,cAAqB,OAAO;MAC1B,YAAY,UAAU;AACpB,cAAM,GAAG,QAAQ;MACrB;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,EAAE,aAAa,MAAM;MAChC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,UAAE,cAAc,KAAK,MAAM;AAC3B,eAAO;MACX;IACA;AAYA,IAAM,WAAN,cAAuB,OAAO;MAC5B,YAAY,UAAU;AACpB,cAAM,GAAG,QAAQ;MACrB;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,EAAE,aAAa,MAAM;MAChC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,UAAE,cAAc,KAAK,MAAM;AAC3B,eAAO;MACX;IACA;AAmBA,IAAM,WAAN,cAAuB,OAAO;MAC5B,YAAY,eAAe,OAAO,UAAU;AAC1C,YAAI,EAAE,yBAAyB,SAAS;AACtC,gBAAM,IAAI,UAAU,gCAAgC;QAC1D;AACI,YAAI,EAAI,iBAAiB,kBAAmB,MAAM,QAAO,KAC/C,OAAO,UAAU,KAAK,KAAM,KAAK,QAAU;AACnD,gBAAM,IAAI,UAAU,0EACyC;QACnE;AACI,YAAI,OAAO;AACX,YAAK,EAAE,iBAAiB,mBAChB,IAAI,cAAc,MAAO;AAC/B,iBAAO,QAAQ,cAAc;QACnC;AAEI,cAAM,MAAM,QAAQ;AAGpB,aAAK,gBAAgB;AAOrB,aAAK,QAAQ;MACjB;MAGE,QAAQ,GAAG,QAAQ;AACjB,YAAI,KAAK,KAAK,MAAM;AAClB,iBAAO,KAAK;QAClB;AACI,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,YAAI,OAAO;AACX,YAAI,QAAQ,KAAK;AACjB,YAAI,iBAAiB,gBAAgB;AACnC,kBAAQ,MAAM,OAAO,GAAG,MAAM;QACpC;AACI,YAAI,IAAI,KAAK,cAAc,MAAM;AAC/B,iBAAO,QAAQ,KAAK,cAAc;QACxC,OAAW;AACL,cAAI,MAAM;AACV,iBAAO,MAAM,OAAO;AAClB,oBAAQ,KAAK,cAAc,QAAQ,GAAG,SAAS,IAAI;AACnD,cAAE;UACV;QACA;AACI,eAAO;MACX;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,KAAK,CAAA;AACX,YAAI,IAAI;AACR,YAAI,QAAQ,KAAK;AACjB,YAAI,iBAAiB,gBAAgB;AACnC,kBAAQ,MAAM,OAAO,GAAG,MAAM;QACpC;AACI,eAAO,IAAI,OAAO;AAChB,aAAG,KAAK,KAAK,cAAc,OAAO,GAAG,MAAM,CAAC;AAC5C,oBAAU,KAAK,cAAc,QAAQ,GAAG,MAAM;AAC9C,eAAK;QACX;AACI,eAAO;MACX;MAYE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,MAAM,KAAK;AACjB,cAAM,OAAO,IAAI,OAAO,CAACC,OAAM,MAAM;AACnC,iBAAOA,QAAO,IAAI,OAAO,GAAG,GAAG,SAASA,KAAI;QAClD,GAAO,CAAC;AACJ,YAAI,KAAK,iBAAiB,gBAAgB;AACxC,eAAK,MAAM,OAAO,IAAI,QAAQ,GAAG,MAAM;QAC7C;AACI,eAAO;MACX;IACA;AAkCA,IAAM,YAAN,cAAwB,OAAO;MAC7B,YAAY,QAAQ,UAAU,gBAAgB;AAC5C,YAAI,EAAE,MAAM,QAAQ,MAAM,KACjB,OAAO,OAAO,CAAC,KAAK,MAAM,OAAQ,aAAa,QAAS,IAAI,IAAI;AACvE,gBAAM,IAAI,UAAU,0CAA0C;QACpE;AACI,YAAK,cAAc,OAAO,YAClB,WAAc,gBAAiB;AACrC,2BAAiB;AACjB,qBAAW;QACjB;AAGI,mBAAW,MAAM,QAAQ;AACvB,cAAK,IAAI,GAAG,QACJ,WAAc,GAAG,UAAW;AAClC,kBAAM,IAAI,MAAM,sDAAsD;UAC9E;QACA;AAEI,YAAI,OAAO;AACX,YAAI;AACF,iBAAO,OAAO,OAAO,CAACA,OAAM,OAAOA,QAAO,GAAG,QAAO,GAAI,CAAC;QAC/D,SAAa,GAAP;QACN;AACI,cAAM,MAAM,QAAQ;AAYpB,aAAK,SAAS;AAWd,aAAK,iBAAiB,CAAC,CAAC;MAC5B;MAGE,QAAQ,GAAG,QAAQ;AACjB,YAAI,KAAK,KAAK,MAAM;AAClB,iBAAO,KAAK;QAClB;AACI,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,YAAI,OAAO;AACX,YAAI;AACF,iBAAO,KAAK,OAAO,OAAO,CAACA,OAAM,OAAO;AACtC,kBAAM,MAAM,GAAG,QAAQ,GAAG,MAAM;AAChC,sBAAU;AACV,mBAAOA,QAAO;UACtB,GAAS,CAAC;QACV,SAAa,GAAP;AACA,gBAAM,IAAI,WAAW,oBAAoB;QAC/C;AACI,eAAO;MACX;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,OAAO,KAAK,sBAAqB;AACvC,mBAAW,MAAM,KAAK,QAAQ;AAC5B,cAAI,WAAc,GAAG,UAAU;AAC7B,iBAAK,GAAG,YAAY,GAAG,OAAO,GAAG,MAAM;UAC/C;AACM,oBAAU,GAAG,QAAQ,GAAG,MAAM;AAC9B,cAAI,KAAK,kBACD,EAAE,WAAW,QAAS;AAC5B;UACR;QACA;AACI,eAAO;MACX;MAOE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,cAAc;AACpB,YAAI,aAAa;AACjB,YAAI,YAAY;AAChB,mBAAW,MAAM,KAAK,QAAQ;AAC5B,cAAI,OAAO,GAAG;AACd,sBAAa,IAAI,OAAQ,OAAO;AAChC,cAAI,WAAc,GAAG,UAAU;AAC7B,kBAAM,KAAK,IAAI,GAAG;AAClB,gBAAI,WAAc,IAAI;AACpB,0BAAY,GAAG,OAAO,IAAI,GAAG,MAAM;AACnC,kBAAI,IAAI,MAAM;AAGZ,uBAAO,GAAG,QAAQ,GAAG,MAAM;cACvC;YACA;UACA;AACM,uBAAa;AACb,oBAAU;QAChB;AAKI,eAAQ,aAAa,YAAa;MACtC;MAGE,UAAU,QAAQ;AAChB,cAAM,OAAO,KAAK,sBAAqB;AACvC,mBAAW,MAAM,KAAK,QAAQ;AAC5B,cAAK,WAAc,GAAG,YACd,IAAI,OAAO,QAAS;AAC1B,iBAAK,GAAG,YAAY,OAAO,MAAK;UACxC;QACA;AACI,eAAO;MACX;MAUE,UAAU,UAAU;AAClB,YAAI,aAAa,OAAO,UAAU;AAChC,gBAAM,IAAI,UAAU,yBAAyB;QACnD;AACI,mBAAW,MAAM,KAAK,QAAQ;AAC5B,cAAI,GAAG,aAAa,UAAU;AAC5B,mBAAO;UACf;QACA;MACA;MAaE,SAAS,UAAU;AACjB,YAAI,aAAa,OAAO,UAAU;AAChC,gBAAM,IAAI,UAAU,yBAAyB;QACnD;AACI,YAAI,SAAS;AACb,mBAAW,MAAM,KAAK,QAAQ;AAC5B,cAAI,GAAG,aAAa,UAAU;AAC5B,mBAAO;UACf;AACM,cAAI,IAAI,GAAG,MAAM;AACf,qBAAS;UACjB,WAAiB,KAAK,QAAQ;AACtB,sBAAU,GAAG;UACrB;QACA;MACA;IACA;AAgBA,IAAM,qBAAN,MAAyB;MACvB,YAAY,UAAU;AAKpB,aAAK,WAAW;MACpB;MAME,SAAS;AACP,cAAM,IAAI,MAAM,gCAAgC;MACpD;MAME,SAAS;AACP,cAAM,IAAI,MAAM,gCAAgC;MACpD;IACA;AAmBA,IAAM,2BAAN,cAAuC,mBAAmB;MACxD,YAAY,QAAQ,UAAU;AAC5B,YAAI,EAAG,kBAAkB,kBAChB,OAAO,QAAO,IAAK;AAC1B,gBAAM,IAAI,UAAU,mDAAmD;QAC7E;AAEI,cAAM,YAAY,OAAO,YAAY,SAAS;AAI9C,aAAK,SAAS;MAClB;MAGE,OAAO,GAAG,QAAQ;AAChB,eAAO,KAAK,OAAO,OAAO,GAAG,MAAM;MACvC;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,eAAO,KAAK,OAAO,OAAO,KAAK,GAAG,MAAM;MAC5C;IACA;AA6DA,IAAM,QAAN,cAAoB,OAAO;MACzB,YAAY,OAAO,eAAe,UAAU;AAC1C,cAAM,MAAQ,iBAAiB,QAChB,iBAAiB;AAChC,YAAI,KAAK;AACP,kBAAQ,IAAI,yBAAyB,IAAI,aAAa,KAAK,CAAC;QAClE,WAAgB,iBAAiB,kBACf,MAAM,QAAO,GAAI;AAC7B,kBAAQ,IAAI,yBAAyB,KAAK;QAChD,WAAe,EAAE,iBAAiB,qBAAqB;AACjD,gBAAM,IAAI,UAAU,kEACiC;QAC3D;AACI,YAAI,WAAc,eAAe;AAC/B,0BAAgB;QACtB;AACI,YAAI,EAAG,SAAS,iBACN,yBAAyB,SAAU;AAC3C,gBAAM,IAAI,UAAU,wCAAwC;QAClE;AACI,YAAI,SAAS,eAAe;AAC1B,cAAI,IAAI,cAAc,MAAM;AAC1B,kBAAM,IAAI,MAAM,uCAAuC;UAC/D;AACM,cAAI,WAAc,cAAc,UAAU;AACxC,4BAAgB,cAAc,UAAU,SAAS;UACzD;QACA;AAMI,YAAI,OAAO;AACX,YAAI,eAAe;AACjB,iBAAO,cAAc;AACrB,cAAK,KAAK,QAAS,KAAK;AACtB,oBAAQ,MAAM,OAAO;UAC7B;QACA;AACI,cAAM,MAAM,QAAQ;AAUpB,aAAK,gBAAgB;AAOrB,aAAK,0BAA0B;AAS/B,aAAK,gBAAgB;AAYrB,aAAK,WAAW,CAAA;AAGhB,YAAI,wBAAwB,KAAK,wBAAwB,KAAK,IAAI;AAelE,aAAK,mBAAmB,SAAS,KAAK;AACpC,iBAAO,sBAAsB,GAAG;QACtC;AAeI,aAAK,yBAAyB,SAAS,KAAK;AAC1C,kCAAwB,IAAI,KAAK,IAAI;QAC3C;MACA;MAGE,QAAQ,GAAG,QAAQ;AACjB,YAAI,KAAK,KAAK,MAAM;AAClB,iBAAO,KAAK;QAClB;AACI,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AAII,cAAM,MAAM,KAAK,WAAW,GAAG,MAAM;AACrC,YAAI,CAAC,KAAK;AACR,gBAAM,IAAI,MAAM,mDAAmD;QACzE;AACI,eAAO,IAAI,QAAQ,GAAG,MAAM;MAChC;MA+BE,wBAAwB,KAAK;AAC3B,YAAI,IAAI,eAAe,KAAK,cAAc,QAAQ,GAAG;AACnD,cAAI,KAAK,iBACF,IAAI,eAAe,KAAK,cAAc,QAAQ,GAAG;AACtD,mBAAO;UACf;AACM,gBAAM,MAAM,KAAK,SAAS,IAAI,KAAK,cAAc;AACjD,cAAI,QACK,CAAC,IAAI,UACH,IAAI,eAAe,IAAI,QAAQ,IAAI;AAC5C,mBAAO;UACf;QACA,OAAW;AACL,qBAAW,OAAO,KAAK,UAAU;AAC/B,kBAAM,MAAM,KAAK,SAAS;AAC1B,gBAAI,IAAI,eAAe,IAAI,QAAQ,GAAG;AACpC,qBAAO;YACjB;UACA;QACA;AACI,cAAM,IAAI,MAAM,6BAA6B;MACjD;MAQE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,YAAI;AACJ,cAAM,MAAM,KAAK;AACjB,cAAM,QAAQ,IAAI,OAAO,GAAG,MAAM;AAClC,YAAI,MAAM,KAAK,SAAS;AACxB,YAAI,WAAc,KAAK;AACrB,cAAI,gBAAgB;AACpB,gBAAM,KAAK;AACX,cAAI,KAAK,yBAAyB;AAChC,4BAAgB,IAAI,OAAO;UACnC;AACM,iBAAO,KAAK,sBAAqB;AACjC,eAAK,IAAI,YAAY;AACrB,eAAK,IAAI,YAAY,KAAK,cAAc,OAAO,GAAG,SAAS,aAAa;QAC9E,OAAW;AACL,iBAAO,IAAI,OAAO,GAAG,MAAM;QACjC;AACI,eAAO;MACX;MAQE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,MAAM,KAAK,iBAAiB,GAAG;AACrC,YAAI,WAAc,KAAK;AACrB,gBAAM,MAAM,KAAK;AACjB,gBAAM,MAAM,KAAK;AACjB,cAAI,gBAAgB;AACpB,cAAI,KAAK,yBAAyB;AAChC,4BAAgB,IAAI,OAAO;UACnC;AACM,cAAI,OAAO,IAAI,IAAI,WAAW,GAAG,MAAM;AACvC,iBAAO,gBAAgB,IAAI;YAAO,IAAI,IAAI;YAAW;YACnB,SAAS;UAAa;QAC9D;AACI,eAAO,IAAI,OAAO,KAAK,GAAG,MAAM;MACpC;MAeE,WAAW,SAAS,QAAQ,UAAU;AACpC,cAAM,KAAK,IAAI,cAAc,MAAM,SAAS,QAAQ,QAAQ;AAC5D,aAAK,SAAS,WAAW;AACzB,eAAO;MACX;MAgBE,WAAW,IAAI,QAAQ;AACrB,YAAI,UAAU;AACd,YAAI5B,OAAAA,OAAO,SAAS,EAAE,GAAG;AACvB,cAAI,WAAc,QAAQ;AACxB,qBAAS;UACjB;AACM,oBAAU,KAAK,cAAc,OAAO,IAAI,MAAM;QACpD;AACI,eAAO,KAAK,SAAS;MACzB;IACA;AA+BA,IAAM,gBAAN,cAA4B,OAAO;MACjC,YAAY,OAAO,SAAS,QAAQ,UAAU;AAC5C,YAAI,EAAE,iBAAiB,QAAQ;AAC7B,gBAAM,IAAI,UAAU,uBAAuB;QACjD;AACI,YAAK,CAAC,OAAO,UAAU,OAAO,KAAO,IAAI,SAAU;AACjD,gBAAM,IAAI,UAAU,0CAA0C;QACpE;AACI,YAAK,aAAa,OAAO,UACjB,WAAc,UAAW;AAC/B,qBAAW;AACX,mBAAS;QACf;AACI,YAAI,QAAQ;AACV,cAAI,EAAE,kBAAkB,SAAS;AAC/B,kBAAM,IAAI,UAAU,yBAAyB;UACrD;AACM,cAAK,SAAS,MAAM,iBACZ,KAAK,OAAO,QACZ,OAAO,OAAO,MAAM,cAAc,MAAO;AAC/C,kBAAM,IAAI,MAAM,+CAA+C;UACvE;AACM,cAAI,aAAa,OAAO,UAAU;AAChC,kBAAM,IAAI,UAAU,qCAAqC;UACjE;QACA;AACI,YAAI,OAAO,MAAM;AACjB,YAAI,IAAI,MAAM,MAAM;AAClB,iBAAO,SAAS,OAAO,OAAO;AAC9B,cAAK,KAAK,QAAS,MAAM,yBAAyB;AAChD,oBAAQ,MAAM,cAAc,OAAO;UAC3C;QACA;AACI,cAAM,MAAM,QAAQ;AAGpB,aAAK,QAAQ;AAKb,aAAK,UAAU;AAMf,aAAK,SAAS,UAAU;MAC5B;MAGE,QAAQ,GAAG,QAAQ;AACjB,YAAI,KAAK,KAAK,MAAM;AAGlB,iBAAO,KAAK;QAClB;AACI,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,YAAI,gBAAgB;AACpB,YAAI,KAAK,MAAM,yBAAyB;AACtC,0BAAgB,KAAK,MAAM,cAAc,OAAO;QACtD;AAEI,eAAO,gBAAgB,KAAK,OAAO,QAAQ,GAAG,SAAS,aAAa;MACxE;MAGE,OAAO,GAAG,QAAQ;AAChB,cAAM,OAAO,KAAK,sBAAqB;AACvC,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,YAAI,SAAS,KAAK,MAAM,WAAW,GAAG,MAAM,GAAG;AAC7C,gBAAM,IAAI,MAAM,kBAAkB;QACxC;AACI,YAAI,gBAAgB;AACpB,YAAI,KAAK,MAAM,yBAAyB;AACtC,0BAAgB,KAAK,MAAM,cAAc,OAAO;QACtD;AACI,YAAI,KAAK,QAAQ;AACf,eAAK,KAAK,YAAY,KAAK,OAAO,OAAO,GAAG,SAAS,aAAa;QACxE,WAAe,KAAK,UAAU;AACxB,eAAK,KAAK,YAAY;QAC5B,WAAe,KAAK,MAAM,yBAAyB;AAC7C,eAAK,KAAK,MAAM,cAAc,YAAY,KAAK;QACrD;AACI,eAAO;MACX;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,YAAI,gBAAgB;AACpB,YAAI,KAAK,MAAM,yBAAyB;AACtC,0BAAgB,KAAK,MAAM,cAAc,OAAO;QACtD;AACI,YAAI,KAAK,UACD,CAAC,IAAI,eAAe,KAAK,QAAQ,GAAI;AAC3C,gBAAM,IAAI,UAAU,4BAA4B,KAAK,QAAQ;QACnE;AACI,aAAK,MAAM,cAAc,OAAO,KAAK,SAAS,GAAG,MAAM;AACvD,YAAI,OAAO;AACX,YAAI,KAAK,QAAQ;AACf,eAAK,OAAO,OAAO,IAAI,KAAK,WAAW,GAAG,SAAS,aAAa;AAChE,kBAAQ,KAAK,OAAO,QAAQ,GAAG,SAAS,aAAa;AACrD,cAAK,KAAK,KAAK,MAAM,QACb,OAAO,KAAK,MAAM,MAAO;AAC/B,kBAAM,IAAI,MAAM,2CAA2C;UACnE;QACA;AACI,eAAO;MACX;MAIE,UAAU,QAAQ;AAChB,YAAI,KAAK,QAAQ;AACf,iBAAO,KAAK,OAAO,UAAU,MAAM;QACzC;MACA;IACA;AA8CA,IAAM,eAAN,cAA2B,OAAO;MAChC,YAAY,MAAM,KAAK,UAAU;AAC/B,YAAI,EAAG,gBAAgB,QACb,gBAAgB,SAAU;AAClC,gBAAM,IAAI,UAAU,sCAAsC;QAChE;AACI,YAAK,aAAa,OAAO,OACjB,WAAc,UAAW;AAC/B,qBAAW;AACX,gBAAM;QACZ;AACI,YAAI,IAAI,KAAK,MAAM;AACjB,gBAAM,IAAI,WAAW,4BAA4B;QACvD;AACI,cAAM,KAAK,MAAM,QAAQ;AAKzB,aAAK,OAAO;AASZ,aAAK,MAAM,CAAC,CAAC;AAQb,aAAK,SAAS,CAAA;AAKd,YAAI,QAAQ;AACZ,aAAK,kBAAkB,SAAS,GAAG;AACjC,kBAAQ,iBAAiB,CAAC;AAC1B,iBAAO;QACb;AACI,aAAK,kBAAkB,WAAW;AAChC,iBAAO;QACb;MACA;MAGE,OAAO,GAAG,QAAQ;AAChB,cAAM,OAAO,KAAK,sBAAqB;AACvC,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,QAAQ,KAAK,KAAK,OAAO,GAAG,MAAM;AACxC,aAAK,gBAAgB,KAAK;AAC1B,mBAAW,MAAM,KAAK,QAAQ;AAC5B,cAAI,WAAc,GAAG,UAAU;AAC7B,iBAAK,GAAG,YAAY,GAAG,OAAO,KAAK;UAC3C;QACA;AACI,eAAO;MACX;MAOE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,cAAM,QAAQ,KAAK,KAAK,OAAO,GAAG,MAAM;AACxC,aAAK,gBAAgB,KAAK;AAC1B,mBAAW,MAAM,KAAK,QAAQ;AAC5B,cAAI,WAAc,GAAG,UAAU;AAC7B,kBAAM,KAAK,IAAI,GAAG;AAClB,gBAAI,WAAc,IAAI;AACpB,iBAAG,OAAO,EAAE;YACtB;UACA;QACA;AACI,eAAO,KAAK,KAAK,OAAO,KAAK,gBAAe,GAAI,GAAG,MAAM;MAC7D;MAWE,SAAS,MAAM,UAAU;AACvB,cAAM,KAAK,IAAI,SAAS,MAAM,MAAM,QAAQ;AAC5C,aAAK,OAAO,KAAK,EAAE;AACnB,eAAO;MACX;MASE,WAAW,UAAU;AAGnB,cAAM,KAAK,IAAIK,SAAQ,MAAM,QAAQ;AACrC,aAAK,OAAO,KAAK,EAAE;AACnB,eAAO;MACX;MAUE,SAAS,UAAU;AACjB,YAAI,aAAa,OAAO,UAAU;AAChC,gBAAM,IAAI,UAAU,yBAAyB;QACnD;AACI,mBAAW,MAAM,KAAK,QAAQ;AAC5B,cAAI,GAAG,aAAa,UAAU;AAC5B,mBAAO;UACf;QACA;MACA;IACA;AAsBA,IAAM,WAAN,MAAe;MACb,YAAY,WAAW,MAAM,UAAU;AACrC,YAAI,EAAE,qBAAqB,eAAe;AACxC,gBAAM,IAAI,UAAU,kCAAkC;QAC5D;AACI,YAAK,CAAC,OAAO,UAAU,IAAI,KAAO,KAAK,MAAO;AAC5C,gBAAM,IAAI,UAAU,+BAA+B;QACzD;AACI,cAAM,YAAY,IAAI,UAAU;AAChC,cAAM,WAAW,UAAU,OAAO,OAAO,CAAC,KAAK,OAAO,MAAM,GAAG,MAAM,CAAC;AACtE,YAAK,OAAO,WAAY,WAAW;AACjC,gBAAM,IAAI,MAAM,wCACG,YAAY,YAAY,SACzB,YAAY,UAAU;QAC9C;AAII,aAAK,YAAY;AAGjB,aAAK,OAAO;AAOZ,aAAK,aAAa,KAAK,QAAQ;AAC/B,YAAI,OAAO,MAAM;AACf,eAAK,YAAY;QACvB;AAKI,aAAK,QAAQ;AACb,YAAI,KAAK,UAAU,KAAK;AACtB,eAAK,QAAQ,YAAY,WAAW;QAC1C;AAII,aAAK,WAAW,iBAAiB,KAAK,aAAa,KAAK,KAAK;AAY7D,aAAK,WAAW;MACpB;MAIE,SAAS;AACP,cAAM,OAAO,KAAK,UAAU,gBAAe;AAC3C,cAAM,YAAY,iBAAiB,OAAO,KAAK,QAAQ;AACvD,cAAM,QAAQ,cAAc,KAAK;AACjC,eAAO;MACX;MAOE,OAAO,OAAO;AACZ,YAAK,CAAC,OAAO,UAAU,KAAK,KACpB,UAAU,iBAAiB,QAAQ,KAAK,SAAS,GAAI;AAC3D,gBAAM,IAAI,UAAU,iBAAiB,mBAAmB,IAAI,IACtC,0CAA0C,KAAK,SAAS;QACpF;AACI,cAAM,OAAO,KAAK,UAAU,gBAAe;AAC3C,cAAM,YAAY,iBAAiB,SAAS,KAAK,KAAK;AACtD,aAAK,UAAU,gBAAgB,iBAAiB,OAAO,CAAC,KAAK,QAAQ,IACpC,SAAS;MAC9C;IACA;AAmBA,IAAMA,WAAN,cAAsB,SAAS;MAC7B,YAAY,WAAW,UAAU;AAC/B,cAAM,WAAW,GAAG,QAAQ;MAChC;MAKE,OAAO,GAAG,QAAQ;AAChB,eAAO,CAAC,CAAC,SAAS,UAAU,OAAO,KAAK,MAAM,GAAG,MAAM;MAC3D;MAGE,OAAO,OAAO;AACZ,YAAI,cAAc,OAAO,OAAO;AAE9B,kBAAQ,CAAC;QACf;AACI,eAAO,SAAS,UAAU,OAAO,KAAK,MAAM,KAAK;MACrD;IACA;AAiBA,IAAM,OAAN,cAAmB,OAAO;MACxB,YAAY,QAAQ,UAAU;AAC5B,YAAI,EAAI,kBAAkB,kBAAmB,OAAO,QAAO,KACjD,OAAO,UAAU,MAAM,KAAM,KAAK,SAAW;AACrD,gBAAM,IAAI,UAAU,uEACyC;QACnE;AAEI,YAAI,OAAO;AACX,YAAI,EAAE,kBAAkB,iBAAiB;AACvC,iBAAO;QACb;AACI,cAAM,MAAM,QAAQ;AAOpB,aAAK,SAAS;MAClB;MAGE,QAAQ,GAAG,QAAQ;AACjB,YAAI,OAAO,KAAK;AAChB,YAAI,IAAI,MAAM;AACZ,iBAAO,KAAK,OAAO,OAAO,GAAG,MAAM;QACzC;AACI,eAAO;MACX;MAGE,OAAO,GAAG,QAAQ;AAChB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,YAAI,OAAO,KAAK;AAChB,YAAI,IAAI,MAAM;AACZ,iBAAO,KAAK,OAAO,OAAO,GAAG,MAAM;QACzC;AACI,eAAO,EAAE,MAAM,QAAQ,SAAS,IAAI;MACxC;MAOE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,OAAO,KAAK;AAChB,YAAI,KAAK,kBAAkB,gBAAgB;AACzC,iBAAO,IAAI;QACjB;AACI,YAAI,EAAEL,OAAAA,OAAO,SAAS,GAAG,KACf,SAAS,IAAI,SAAU;AAC/B,gBAAM,IAAI,UAAU,iBAAiB,eAAe,IAAI,IAClC,uBAAuB,OAAO,iBAAiB;QAC3E;AACI,YAAK,SAAS,OAAQ,EAAE,QAAQ;AAC9B,gBAAM,IAAI,WAAW,0BAA0B;QACrD;AACI,UAAE,MAAM,IAAI,SAAS,KAAK,GAAG,QAAQ,MAAM,KAAK;AAChD,YAAI,KAAK,kBAAkB,gBAAgB;AACzC,eAAK,OAAO,OAAO,MAAM,GAAG,MAAM;QACxC;AACI,eAAO;MACX;IACA;AAeA,IAAM,UAAN,cAAsB,OAAO;MAC3B,YAAY,UAAU;AACpB,cAAM,IAAI,QAAQ;MACtB;MAGE,QAAQ,GAAG,QAAQ;AACjB,YAAI,CAACA,OAAAA,OAAO,SAAS,CAAC,GAAG;AACvB,gBAAM,IAAI,UAAU,oBAAoB;QAC9C;AACI,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,YAAI,MAAM;AACV,eAAQ,MAAM,EAAE,UAAY,MAAM,EAAE,MAAO;AACzC,iBAAO;QACb;AACI,eAAO,IAAI,MAAM;MACrB;MAGE,OAAO,GAAG,QAAQ,MAAM;AACtB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,YAAI,OAAO,KAAK,QAAQ,GAAG,MAAM;AACjC,eAAO,EAAE,MAAM,QAAQ,SAAS,OAAO,CAAC,EAAE,SAAS,OAAO;MAC9D;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AAII,YAAI,aAAa,OAAO,KAAK;AAC3B,gBAAM,IAAI,SAAQ;QACxB;AACI,cAAM,OAAO,IAAIA,OAAAA,OAAO,KAAK,MAAM;AACnC,cAAM,OAAO,KAAK;AAClB,YAAK,SAAS,OAAQ,EAAE,QAAQ;AAC9B,gBAAM,IAAI,WAAW,0BAA0B;QACrD;AACI,aAAK,KAAK,GAAG,MAAM;AACnB,UAAE,SAAS,QAAQ;AACnB,eAAO,OAAO;MAClB;IACA;AAqBA,IAAM,OAAN,cAAmB,OAAO;MACxB,YAAY,SAAS,UAAU;AAC7B,YAAK,aAAa,OAAO,WACjB,WAAc,UAAW;AAC/B,qBAAW;AACX,oBAAU;QAChB;AACI,YAAI,WAAc,SAAS;AACzB,oBAAU;QAChB,WAAe,CAAC,OAAO,UAAU,OAAO,GAAG;AACrC,gBAAM,IAAI,UAAU,4BAA4B;QACtD;AAEI,cAAM,IAAI,QAAQ;AAUlB,aAAK,UAAU;MACnB;MAGE,QAAQ,GAAG,QAAQ;AACjB,YAAI,CAACA,OAAAA,OAAO,SAAS,CAAC,GAAG;AACvB,gBAAM,IAAI,UAAU,oBAAoB;QAC9C;AACI,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,eAAO,EAAE,SAAS;MACtB;MAGE,OAAO,GAAG,QAAQ,MAAM;AACtB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AACI,YAAI,OAAO,KAAK,QAAQ,GAAG,MAAM;AACjC,YAAK,KAAK,KAAK,WACP,KAAK,UAAU,MAAO;AAC5B,gBAAM,IAAI,WAAW,6BAA6B;QACxD;AACI,eAAO,EAAE,MAAM,QAAQ,SAAS,IAAI,EAAE,SAAS,OAAO;MAC1D;MAGE,OAAO,KAAK,GAAG,QAAQ;AACrB,YAAI,WAAc,QAAQ;AACxB,mBAAS;QACf;AAII,YAAI,aAAa,OAAO,KAAK;AAC3B,gBAAM,IAAI,SAAQ;QACxB;AACI,cAAM,OAAO,IAAIA,OAAAA,OAAO,KAAK,MAAM;AACnC,cAAM,OAAO,KAAK;AAClB,YAAK,KAAK,KAAK,WACP,KAAK,UAAU,MAAO;AAC5B,gBAAM,IAAI,WAAW,6BAA6B;QACxD;AACI,YAAK,SAAS,OAAQ,EAAE,QAAQ;AAC9B,gBAAM,IAAI,WAAW,0BAA0B;QACrD;AACI,aAAK,KAAK,GAAG,MAAM;AACnB,eAAO;MACX;IACA;AAqBA,IAAM,WAAN,cAAuB,OAAO;MAC5B,YAAY,OAAO,UAAU;AAC3B,cAAM,GAAG,QAAQ;AAWjB,aAAK,QAAQ;MACjB;MAGE,OAAO,GAAG,QAAQ,MAAM;AACtB,eAAO,KAAK;MAChB;MAGE,OAAO,KAAK,GAAG,QAAQ;AAErB,eAAO;MACX;IACA;8BAEyB;2BACH;4BACC;oBACR;sBACE;mBACH;qBACE;qBACA;uBACE;sBACD;wBACE;wBACA;yBACC;kCACS;wCACM;qBACnB;6BACQ;4BACD;wBACJ;uBACDK;oBACH;uBACG;oBACH;wBACI;sBAGD,CAAC,aAAa,aAAa,IAAI,YAAY,aAAa,QAAQ;sBAGhE,CAAC,QAAQ,QAAQ,aAAa,IAAI,aAAa,QAAQ,QAAQ,QAAQ;AAIzF,IAAA,KAAA,SAAA,KAAc,cAAY,IAAI,KAAK,GAAG,QAAQ;mBAI/B,cAAY,IAAI,KAAK,GAAG,QAAQ;mBAIhC,cAAY,IAAI,KAAK,GAAG,QAAQ;AAI/C,IAAA,MAAA,SAAA,MAAe,cAAY,IAAI,KAAK,GAAG,QAAQ;mBAIhC,cAAY,IAAI,KAAK,GAAG,QAAQ;mBAIhC,cAAY,IAAI,KAAK,GAAG,QAAQ;oBAI/B,cAAY,IAAI,WAAW,QAAQ;qBAIlC,cAAY,IAAI,OAAO,GAAG,QAAQ;qBAIlC,cAAY,IAAI,OAAO,GAAG,QAAQ;qBAIlC,cAAY,IAAI,OAAO,GAAG,QAAQ;qBAIlC,cAAY,IAAI,OAAO,GAAG,QAAQ;qBAIlC,cAAY,IAAI,OAAO,GAAG,QAAQ;sBAIjC,cAAY,IAAI,aAAa,QAAQ;kBAIzC,cAAY,IAAI,IAAI,GAAG,QAAQ;mBAI9B,cAAY,IAAI,IAAI,GAAG,QAAQ;mBAI/B,cAAY,IAAI,IAAI,GAAG,QAAQ;mBAI/B,cAAY,IAAI,IAAI,GAAG,QAAQ;mBAI/B,cAAY,IAAI,IAAI,GAAG,QAAQ;mBAI/B,cAAY,IAAI,IAAI,GAAG,QAAQ;oBAI9B,cAAY,IAAI,UAAU,QAAQ;qBAIjC,cAAY,IAAI,MAAM,GAAG,QAAQ;qBAIjC,cAAY,IAAI,MAAM,GAAG,QAAQ;qBAIjC,cAAY,IAAI,MAAM,GAAG,QAAQ;qBAIjC,cAAY,IAAI,MAAM,GAAG,QAAQ;qBAIjC,cAAY,IAAI,MAAM,GAAG,QAAQ;sBAIhC,cAAY,IAAI,YAAY,QAAQ;mBAGvC,cAAY,IAAI,MAAM,QAAQ;qBAG5B,cAAY,IAAI,QAAQ,QAAQ;mBAGlC,cAAY,IAAI,OAAO,QAAQ;qBAG7B,cAAY,IAAI,SAAS,QAAQ;AAGlD,IAAA,SAAA,SAAA,SAAkB,CAAC,QAAQ,UAAU,mBAAmB,IAAI,UAAU,QAAQ,UAAU,cAAc;oBAGtF,CAAC,MAAM,KAAK,aAAa,IAAI,aAAa,MAAM,KAAK,QAAQ;mBAG9D,CAAC,eAAe,OAAO,aAAa,IAAI,SAAS,eAAe,OAAO,QAAQ;qBAG7E,CAAC,OAAO,eAAe,aAAa,IAAI,MAAM,OAAO,eAAe,QAAQ;wCAGzD,CAAC,QAAQ,aAAa,IAAI,yBAAyB,QAAQ,QAAQ;AAGvG,IAAA,OAAA,SAAA,OAAgB,CAAC,QAAQ,aAAa,IAAI,KAAK,QAAQ,QAAQ;oBAG/C,cAAY,IAAI,QAAQ,QAAQ;oBAGhC,CAAC,SAAS,aAAa,IAAI,KAAK,SAAS,QAAQ;qBAGhD,CAAC,OAAO,aAAa,IAAI,SAAS,OAAO,QAAQ;AChpF3D,IAAMN,YAAY,CAAC8B,WAAmB,gBAAwB;AACnE,aAAOC,KAAkB,IAAID,QAAtB;IACR;AAKM,IAAMvB,SAAS,CAACuB,WAAmB,aAAqB;AAC7D,aAAOC,KAAkB,GAAGD,QAArB;IACR;IEUYtB,mBAA8B,IAAIwB,UAC7C,6CADyC;IAI9BvB,8BAAyC,IAAIuB,UACxD,8CADoD;AAItD,IAAMtB,yBAAyB;AAC/B,IAAMC,wBAAwB;AAcvB,IAAMC,MAAN,cAAkBqB,UAAAA,QAAG;MAI1B9B,WAA0B;AACxB,cAAM+B,IAAI,MAAMC,QAAN,EAAgBC,QAAhB;AACV,cAAMC,IAAIpC,OAAAA,OAAOC,KAAKgC,CAAZ;AACV,YAAIG,EAAEC,WAAW,GAAG;AAClB,iBAAOD;QACR;AACDE,eAAOF,EAAEC,SAAS,GAAG,eAAf;AAEN,cAAME,UAAUvC,OAAAA,OAAOwC,MAAM,CAAb;AAChBJ,UAAEK,KAAKF,OAAP;AACA,eAAOA;MACR;MAKgB,OAAVG,WAAWxB,SAA4B;AAC5CoB,eAAOpB,QAAOmB,WAAW,GAAI,0BAAyBnB,QAAOmB,QAAvD;AACN,eAAO,IAAI1B,IACT,CAAC,GAAGO,OAAJ,EACGiB,QADH,EAEGQ,IAAInB,OAAM,KAAIA,EAAEoB,SAAS,EAAX,IAAiBC,MAAM,EAA5B,CAFZ,EAGGC,KAAK,EAHR,GAIA,EALK;MAOR;IA7ByB;AA0C5B,IAAMlC,qBAAqB;MACzBmC,YAAY;MACZC,eAAe;MACfC,cAAc;MACdC,cAAc;IAJW;IAQdrC,cAAyB,IAAIkB,UACxC,6CADoC;IAoCzBjB,aAA4CgB,OAAoB,CAC3EA,IAAiB,qBAAjB,GACAqB,UAAiB,eAAjB,GACAA,OAAc,QAAd,GACArB,GAAgB,UAAhB,GACAA,GAAgB,eAAhB,GACAA,IAAiB,uBAAjB,GACAqB,UAAiB,iBAAjB,CAP2E,CAApB;IA2E5CpC,gBAA+Ce,OAC1D,CACEqB,UAAiB,MAAjB,GACAA,UAAiB,OAAjB,GACAA,OAAc,QAAd,GACArB,IAAiB,gBAAjB,GACAqB,UAAiB,UAAjB,GACArB,GAAgB,OAAhB,GACAA,IAAiB,gBAAjB,GACAqB,OAAc,UAAd,GACAA,OAAc,iBAAd,GACArB,IAAiB,sBAAjB,GACAqB,UAAiB,gBAAjB,CAXF,CAD0D;AAuD5D,IAAMnC,iBAAiBc,OAAoB,CACzCA,GAAgB,GAAhB,GACAA,GAAgB,GAAhB,GACAA,GAAgB,gBAAhB,GACAqB,UAAiB,SAAjB,GACAA,UAAiB,SAAjB,GACAA,UAAiB,SAAjB,GACAA,UAAiB,SAAjB,GACAA,UAAiB,SAAjB,GACAA,UAAiB,SAAjB,GACAA,UAAiB,SAAjB,GACAA,UAAiB,SAAjB,GACAA,UAAiB,SAAjB,GACAA,UAAiB,UAAjB,GACAA,UAAiB,UAAjB,CAdyC,CAApB;AAoBhB,IAAMlC,QAAN,MAAY;MAkCjBmC,YACE3D,YACAM,YACAsD,WACAC,OACA;AAAA,wBAAA,MAAA,cAAA,MAAA;AAAA,wBAAA,MAAA,aAAA,MAAA;AAAA,wBAAA,MAAA,aAAA,MAAA;AAAA,wBAAA,MAAA,uBAAA,MAAA;AAAA,wBAAA,MAAA,SAAA,MAAA;AACAC,eAAOC,OAAO,MAAM;UAClB/D;UACAM,WAAAA;UACAsD;UACAC;UAEAG,qBAAqBjD;QANH,CAApB;MAQD;MAO0C,aAA9BkD,+BACXjE,YACiB;AACjB,eAAO,MAAMA,WAAWkE,kCAAkC7C,WAAWc,IAAxD;MACd;MAO6C,aAAjCgC,kCACXnE,YACiB;AACjB,eAAO,MAAMA,WAAWkE,kCACtB5C,cAAca,IADH;MAGd;MAO8C,aAAlCiC,mCACXpE,YACiB;AACjB,eAAO,MAAMA,WAAWkE,kCACtB3C,eAAeY,IADJ;MAGd;MAasB,aAAVkC,WACXrE,YACA6D,OACAS,eACAC,iBACAC,UACAZ,WACgB;AAChB,cAAMa,cAAcC,QAAQC,SAAR;AACpB,cAAMC,QAAQ,IAAIpD,MAChBxB,YACAyE,YAAYnE,WACZsD,WACAC,KAJY;AAQd,cAAMgB,gBAAgB,MAAMrD,MAAMyC,+BAChCjE,UAD0B;AAI5B,cAAMC,cAAc,IAAI6E,YAAJ;AACpB7E,oBAAY8E,IACVC,cAAcC,cAAc;UAC1BC,YAAYrB,MAAMvD;UAClB6E,kBAAkBV,YAAYnE;UAC9B8E,UAAUP;UACVQ,OAAOhE,WAAWc;UAClByB;QAL0B,CAA5B,CADF;AAUA3D,oBAAY8E,IACVvD,MAAM8D,0BACJ1B,WACAa,YAAYnE,WACZkE,UACAF,eACAC,eALF,CADF;AAWA,cAAMzE,2BACJ,oCACAE,YACAC,aACA4D,OACAY,WAL6B;AAQ/B,eAAOG;MACR;MAUkB,MAAbK,cAAcM,OAAsC;AAExD,cAAMV,gBAAgB,MAAMrD,MAAM2C,kCAChC,KAAKnE,UADqB;AAI5B,cAAMwF,aAAad,QAAQC,SAAR;AACnB,cAAM1E,cAAc,IAAI6E,YAAJ;AACpB7E,oBAAY8E,IACVC,cAAcC,cAAc;UAC1BC,YAAY,KAAKrB,MAAMvD;UACvB6E,kBAAkBK,WAAWlF;UAC7B8E,UAAUP;UACVQ,OAAO/D,cAAca;UACrByB,WAAW,KAAKA;QALU,CAA5B,CADF;AAUA,cAAM6B,gBAAgB,KAAKnF;AAC3BL,oBAAY8E,IACVvD,MAAMkE,6BACJ,KAAK9B,WACL6B,eACAD,WAAWlF,WACXiF,KAJF,CADF;AAUA,cAAMzF,2BACJ,uCACA,KAAKE,YACLC,aACA,KAAK4D,OACL2B,UAL6B;AAQ/B,eAAOA,WAAWlF;MACnB;MAUiC,MAA5BqF,6BAA6BJ,OAAsC;AACvE,cAAMK,oBAAoB,MAAMpE,MAAMqE,0BACpC,KAAK7B,qBACL,KAAKJ,WACL,KAAKtD,WACLiF,KAJ8B;AAOhC,eAAO,KAAKO,qCAAqCP,OAAOK,iBAAjD;MACR;MAEyC,MAApCE,qCACJP,OACAK,mBACoB;AACpB,cAAM9F,2BACJ,gCACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAMuE,wCACJ,KAAK/B,qBACL,KAAKJ,WACL,KAAKtD,WACLsF,mBACAL,OACA,KAAK1B,MAAMvD,SANb,CADF,GAUA,KAAKuD,KAbwB;AAgB/B,eAAO+B;MACR;MAUqC,MAAhCI,iCACJT,OACsB;AACtB,cAAMK,oBAAoB,MAAMpE,MAAMqE,0BACpC,KAAK7B,qBACL,KAAKJ,WACL,KAAKtD,WACLiF,KAJ8B;AAUhC,YAAI;AACF,iBAAO,MAAM,KAAKU,eAAeL,iBAApB;QACd,SAAQM,KAAP;AAKA,cACEA,IAAIC,YAAYnF,0BAChBkF,IAAIC,YAAYlF,uBAChB;AAGA,gBAAI;AACF,oBAAM,KAAK6E,qCACTP,OACAK,iBAFI;YAIP,SAAQM,MAAP;YAID;AAGD,mBAAO,MAAM,KAAKD,eAAeL,iBAApB;UACd,OAAM;AACL,kBAAMM;UACP;QACF;MACF;MAiBsC,aAA1BE,2BACXpG,YACA4D,WACA2B,OACA1B,OACAwC,QACoB;AAEpB,cAAMxB,gBAAgB,MAAMrD,MAAM2C,kCAChCnE,UAD0B;AAK5B,cAAMwF,aAAad,QAAQC,SAAR;AACnB,cAAM1E,cAAc,IAAI6E,YAAJ;AACpB7E,oBAAY8E,IACVC,cAAcC,cAAc;UAC1BC,YAAYrB,MAAMvD;UAClB6E,kBAAkBK,WAAWlF;UAC7B8E,UAAUP;UACVQ,OAAO/D,cAAca;UACrByB;QAL0B,CAA5B,CADF;AAWA3D,oBAAY8E,IACVC,cAAcsB,SAAS;UACrBpB,YAAYrB,MAAMvD;UAClBiG,UAAUf,WAAWlF;UACrB8E,UAAUiB;QAHW,CAAvB,CADF;AAWApG,oBAAY8E,IACVvD,MAAMkE,6BACJ9B,WACAxC,aACAoE,WAAWlF,WACXiF,KAJF,CADF;AAUA,cAAMzF,2BACJ,kDACAE,YACAC,aACA4D,OACA2B,UAL6B;AAQ/B,eAAOA,WAAWlF;MACnB;MAWmB,MAAdkG,eACJC,GACAvG,SACoB;AACpB,cAAMwG,kBAAkBhC,QAAQC,SAAR;AAGxB,cAAME,gBAAgB,MAAMrD,MAAM4C,mCAChC,KAAKpE,UADqB;AAG5B,cAAMC,cAAc,IAAI6E,YAAJ;AACpB7E,oBAAY8E,IACVC,cAAcC,cAAc;UAC1BC,YAAY,KAAKrB,MAAMvD;UACvB6E,kBAAkBuB,gBAAgBpG;UAClC8E,UAAUP;UACVQ,OAAO9D,eAAeY;UACtByB,WAAW,KAAKA;QALU,CAA5B,CADF;AAWA,YAAI+C,OAAO,CACT;UAACC,QAAQF,gBAAgBpG;UAAWuG,UAAU;UAAOC,YAAY;QAAjE,GACA;UAACF,QAAQG;UAAoBF,UAAU;UAAOC,YAAY;QAA1D,CAFS;AAIX5G,gBAAQ8G,QAAQC,YACdN,KAAKO,KAAK;UAACN,QAAQK;UAAQJ,UAAU;UAAOC,YAAY;QAA9C,CAAV,CADF;AAGA,cAAMK,aAAa9E,OAAoB,CACrCA,GAAgB,aAAhB,GACAA,GAAgB,GAAhB,CAFqC,CAApB;AAInB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;UACbb;QAFF,GAIAW,IALF;AAOAnH,oBAAY8E,IAAI;UACd4B;UACA/C,WAAW,KAAKA;UAChBwD;QAHc,CAAhB;AAOA,cAAMtH,2BACJ,wCACA,KAAKE,YACLC,aACA,KAAK4D,OACL6C,eAL6B;AAQ/B,eAAOA,gBAAgBpG;MACxB;MAKgB,MAAXiH,cAAiC;AACrC,cAAMC,OAAO,MAAM,KAAKxH,WAAWiG,eAAe,KAAK3F,SAApC;AACnB,YAAIkH,SAAS,MAAM;AACjB,gBAAM,IAAIC,MAAM,6BAAV;QACP;AACD,YAAI,CAACD,KAAKjC,MAAMmC,OAAO,KAAK9D,SAAvB,GAAmC;AACtC,gBAAM,IAAI6D,MAAO,uBAAsBE,KAAKC,UAAUJ,KAAKjC,KAApB,GAAjC;QACP;AACD,YAAIiC,KAAKJ,KAAKxE,UAAUvB,WAAWc,MAAM;AACvC,gBAAM,IAAIsF,MAAO,mBAAX;QACP;AAED,cAAML,OAAO7G,OAAAA,OAAOC,KAAKgH,KAAKJ,IAAjB;AACb,cAAMS,WAAWxG,WAAWyG,OAAOV,IAAlB;AAEjB,YAAIS,SAASE,wBAAwB,GAAG;AACtCF,mBAASvD,gBAAgB;QAC1B,OAAM;AACLuD,mBAASvD,gBAAgB,IAAIhC,UAAUuF,SAASvD,aAAvB;QAC1B;AAEDuD,iBAASG,SAAS9G,IAAI+B,WAAW4E,SAASG,MAAxB;AAClBH,iBAASI,gBAAgBJ,SAASI,iBAAiB;AAEnD,YAAIJ,SAASK,0BAA0B,GAAG;AACxCL,mBAAStD,kBAAkB;QAC5B,OAAM;AACLsD,mBAAStD,kBAAkB,IAAIjC,UAAUuF,SAAStD,eAAvB;QAC5B;AACD,eAAOsD;MACR;MAOmB,MAAd5B,eACJkC,SACAC,YACsB;AACtB,cAAMZ,OAAO,MAAM,KAAKxH,WAAWiG,eAAekC,SAASC,UAAxC;AACnB,YAAIZ,SAAS,MAAM;AACjB,gBAAM,IAAIC,MAAMzG,sBAAV;QACP;AACD,YAAI,CAACwG,KAAKjC,MAAMmC,OAAO,KAAK9D,SAAvB,GAAmC;AACtC,gBAAM,IAAI6D,MAAMxG,qBAAV;QACP;AACD,YAAIuG,KAAKJ,KAAKxE,UAAUtB,cAAca,MAAM;AAC1C,gBAAM,IAAIsF,MAAO,sBAAX;QACP;AAED,cAAML,OAAO7G,OAAAA,OAAOC,KAAKgH,KAAKJ,IAAjB;AACb,cAAMiB,cAAc/G,cAAcwG,OAAOV,IAArB;AACpBiB,oBAAYC,UAAUH;AACtBE,oBAAYE,OAAO,IAAIjG,UAAU+F,YAAYE,IAA1B;AACnBF,oBAAY9C,QAAQ,IAAIjD,UAAU+F,YAAY9C,KAA1B;AACpB8C,oBAAYhC,SAASnF,IAAI+B,WAAWoF,YAAYhC,MAA3B;AAErB,YAAIgC,YAAYG,mBAAmB,GAAG;AACpCH,sBAAYI,WAAW;AACvBJ,sBAAYK,kBAAkB,IAAIxH,IAAJ;QAC/B,OAAM;AACLmH,sBAAYI,WAAW,IAAInG,UAAU+F,YAAYI,QAA1B;AACvBJ,sBAAYK,kBAAkBxH,IAAI+B,WAAWoF,YAAYK,eAA3B;QAC/B;AAEDL,oBAAYJ,gBAAgBI,YAAYM,UAAU;AAClDN,oBAAYO,WAAWP,YAAYM,UAAU;AAE7C,YAAIN,YAAYQ,mBAAmB,GAAG;AACpCR,sBAAYS,oBAAoB5H,IAAI+B,WAAWoF,YAAYU,QAA3B;AAChCV,sBAAYU,WAAW;QACxB,OAAM;AACLV,sBAAYS,oBAAoB;AAChCT,sBAAYU,WAAW;QACxB;AAED,YAAIV,YAAYW,yBAAyB,GAAG;AAC1CX,sBAAYY,iBAAiB;QAC9B,OAAM;AACLZ,sBAAYY,iBAAiB,IAAI3G,UAAU+F,YAAYY,cAA1B;QAC9B;AAED,YAAI,CAACZ,YAAYE,KAAKb,OAAO,KAAKpH,SAA7B,GAAyC;AAC5C,gBAAM,IAAImH,MACP,yBAAwBE,KAAKC,UAC5BS,YAAYE,IADW,SAEhBZ,KAAKC,UAAU,KAAKtH,SAApB,GAHL;QAKP;AACD,eAAO+H;MACR;MAOoB,MAAfa,gBAAgBC,UAA4C;AAChE,cAAM3B,OAAO,MAAM,KAAKxH,WAAWiG,eAAekD,QAA/B;AACnB,YAAI3B,SAAS,MAAM;AACjB,gBAAM,IAAIC,MAAM,yBAAV;QACP;AACD,YAAI,CAACD,KAAKjC,MAAMmC,OAAO,KAAK9D,SAAvB,GAAmC;AACtC,gBAAM,IAAI6D,MAAO,wBAAX;QACP;AACD,YAAID,KAAKJ,KAAKxE,UAAUrB,eAAeY,MAAM;AAC3C,gBAAM,IAAIsF,MAAO,uBAAX;QACP;AAED,cAAML,OAAO7G,OAAAA,OAAOC,KAAKgH,KAAKJ,IAAjB;AACb,cAAMgC,eAAe7H,eAAeuG,OAAOV,IAAtB;AACrBgC,qBAAaC,UAAU,IAAI/G,UAAU8G,aAAaC,OAA3B;AACvBD,qBAAaE,UAAU,IAAIhH,UAAU8G,aAAaE,OAA3B;AACvBF,qBAAaG,UAAU,IAAIjH,UAAU8G,aAAaG,OAA3B;AACvBH,qBAAaI,UAAU,IAAIlH,UAAU8G,aAAaI,OAA3B;AACvBJ,qBAAaK,UAAU,IAAInH,UAAU8G,aAAaK,OAA3B;AACvBL,qBAAaM,UAAU,IAAIpH,UAAU8G,aAAaM,OAA3B;AACvBN,qBAAaO,UAAU,IAAIrH,UAAU8G,aAAaO,OAA3B;AACvBP,qBAAaQ,UAAU,IAAItH,UAAU8G,aAAaQ,OAA3B;AACvBR,qBAAaS,UAAU,IAAIvH,UAAU8G,aAAaS,OAA3B;AACvBT,qBAAaU,WAAW,IAAIxH,UAAU8G,aAAaU,QAA3B;AACxBV,qBAAaW,WAAW,IAAIzH,UAAU8G,aAAaW,QAA3B;AAExB,eAAOX;MACR;MAWa,MAAR9C,SACJ0D,QACAC,aACA1E,OACA2E,cACA7D,QAC+B;AAC/B,YAAI8D;AACJ,YAAIjK;AACJ,YAAIQ,UAAU6E,KAAD,GAAS;AACpB4E,2BAAiB5E,MAAMjF;AACvBJ,oBAAU,CAACqF,KAAD;QACX,OAAM;AACL4E,2BAAiB5E;AACjBrF,oBAAUgK;QACX;AACD,eAAO,MAAMpK,2BACX,YACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAM4I,0BACJ,KAAKxG,WACLoG,QACAC,aACAE,gBACAD,cACA7D,MANF,CADF,GAUA,KAAKxC,OACL,GAAG3D,OAdiC;MAgBvC;MAWY,MAAPmK,QACJlC,SACAM,UACAlD,OACA2E,cACA7D,QACe;AACf,YAAI8D;AACJ,YAAIjK;AACJ,YAAIQ,UAAU6E,KAAD,GAAS;AACpB4E,2BAAiB5E,MAAMjF;AACvBJ,oBAAU,CAACqF,KAAD;QACX,OAAM;AACL4E,2BAAiB5E;AACjBrF,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,WACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAM8I,yBACJ,KAAK1G,WACLuE,SACAM,UACA0B,gBACAD,cACA7D,MANF,CADF,GAUA,KAAKxC,OACL,GAAG3D,OAd0B;MAgBhC;MASW,MAANqK,OACJpC,SACA5C,OACA2E,cACe;AACf,YAAIC;AACJ,YAAIjK;AACJ,YAAIQ,UAAU6E,KAAD,GAAS;AACpB4E,2BAAiB5E,MAAMjF;AACvBJ,oBAAU,CAACqF,KAAD;QACX,OAAM;AACL4E,2BAAiB5E;AACjBrF,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,UACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAMgJ,wBACJ,KAAK5G,WACLuE,SACAgC,gBACAD,YAJF,CADF,GAQA,KAAKrG,OACL,GAAG3D,OAZ0B;MAchC;MAWiB,MAAZuK,aACJtC,SACAuC,cACAC,eACAC,kBACAV,cACe;AACf,YAAIW;AACJ,YAAI3K;AACJ,YAAIQ,UAAUkK,gBAAD,GAAoB;AAC/BC,sCAA4BD,iBAAiBtK;AAC7CJ,oBAAU,CAAC0K,gBAAD;QACX,OAAM;AACLC,sCAA4BD;AAC5B1K,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,gBACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAMsJ,8BACJ,KAAKlH,WACLuE,SACAuC,cACAC,eACAE,2BACAX,YANF,CADF,GAUA,KAAKrG,OACL,GAAG3D,OAd0B;MAgBhC;MAUW,MAAN6K,OACJC,MACAC,WACAf,cACA7D,QACe;AACf,YAAI8D;AACJ,YAAIjK;AACJ,YAAIQ,UAAUuK,SAAD,GAAa;AACxBd,2BAAiBc,UAAU3K;AAC3BJ,oBAAU,CAAC+K,SAAD;QACX,OAAM;AACLd,2BAAiBc;AACjB/K,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,UACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAM0J,wBACJ,KAAKtH,WACL,KAAKtD,WACL0K,MACAb,gBACAD,cACA7D,MANF,CADF,GAUA,KAAKxC,OACL,GAAG3D,OAd0B;MAgBhC;MAUS,MAAJiL,KACJhD,SACA5C,OACA2E,cACA7D,QACe;AACf,YAAI8D;AACJ,YAAIjK;AACJ,YAAIQ,UAAU6E,KAAD,GAAS;AACpB4E,2BAAiB5E,MAAMjF;AACvBJ,oBAAU,CAACqF,KAAD;QACX,OAAM;AACL4E,2BAAiB5E;AACjBrF,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,QACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAM4J,sBACJ,KAAKxH,WACL,KAAKtD,WACL6H,SACAgC,gBACAD,cACA7D,MANF,CADF,GAUA,KAAKxC,OACL,GAAG3D,OAd0B;MAgBhC;MAUiB,MAAZmL,aACJlD,SACA6C,MACAC,WACAf,cACe;AACf,YAAIoB;AACJ,YAAIpL;AACJ,YAAIQ,UAAUuK,SAAD,GAAa;AACxBK,+BAAqBL,UAAU3K;AAC/BJ,oBAAU,CAAC+K,SAAD;QACX,OAAM;AACLK,+BAAqBL;AACrB/K,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,gBACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAM+J,8BACJ,KAAK3H,WACLuE,SACA6C,MACAM,oBACApB,YALF,CADF,GASA,KAAKrG,OACL,GAAG3D,OAb0B;MAehC;MASkB,MAAbsL,cACJrD,SACA8C,WACAf,cACe;AACf,YAAIoB;AACJ,YAAIpL;AACJ,YAAIQ,UAAUuK,SAAD,GAAa;AACxBK,+BAAqBL,UAAU3K;AAC/BJ,oBAAU,CAAC+K,SAAD;QACX,OAAM;AACLK,+BAAqBL;AACrB/K,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,iBACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAMiK,+BACJ,KAAK7H,WACLuE,SACA,KAAK7H,WACLgL,oBACApB,YALF,CADF,GASA,KAAKrG,OACL,GAAG3D,OAb0B;MAehC;MASgB,MAAXwL,YACJvD,SACA8C,WACAf,cACe;AACf,YAAIoB;AACJ,YAAIpL;AACJ,YAAIQ,UAAUuK,SAAD,GAAa;AACxBK,+BAAqBL,UAAU3K;AAC/BJ,oBAAU,CAAC+K,SAAD;QACX,OAAM;AACLK,+BAAqBL;AACrB/K,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,eACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAMmK,6BACJ,KAAK/H,WACLuE,SACA,KAAK7H,WACLgL,oBACApB,YALF,CADF,GASA,KAAKrG,OACL,GAAG3D,OAb0B;MAehC;MAYoB,MAAf0L,gBACJ5B,QACAC,aACA1E,OACA2E,cACA7D,QACA7B,UAC+B;AAC/B,YAAI2F;AACJ,YAAIjK;AACJ,YAAIQ,UAAU6E,KAAD,GAAS;AACpB4E,2BAAiB5E,MAAMjF;AACvBJ,oBAAU,CAACqF,KAAD;QACX,OAAM;AACL4E,2BAAiB5E;AACjBrF,oBAAUgK;QACX;AACD,eAAO,MAAMpK,2BACX,mBACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAMqK,iCACJ,KAAKjI,WACLoG,QACA,KAAK1J,WACL2J,aACAE,gBACAD,cACA7D,QACA7B,QARF,CADF,GAYA,KAAKX,OACL,GAAG3D,OAhBiC;MAkBvC;MAamB,MAAd4L,eACJ3D,SACAM,UACAlD,OACA2E,cACA7D,QACA7B,UACe;AACf,YAAI2F;AACJ,YAAIjK;AACJ,YAAIQ,UAAU6E,KAAD,GAAS;AACpB4E,2BAAiB5E,MAAMjF;AACvBJ,oBAAU,CAACqF,KAAD;QACX,OAAM;AACL4E,2BAAiB5E;AACjBrF,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,kBACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAMuK,gCACJ,KAAKnI,WACLuE,SACA,KAAK7H,WACLmI,UACA0B,gBACAD,cACA7D,QACA7B,QARF,CADF,GAYA,KAAKX,OACL,GAAG3D,OAhB0B;MAkBhC;MAWkB,MAAb8L,cACJhB,MACAC,WACAf,cACA7D,QACA7B,UACe;AACf,YAAI2F;AACJ,YAAIjK;AACJ,YAAIQ,UAAUuK,SAAD,GAAa;AACxBd,2BAAiBc,UAAU3K;AAC3BJ,oBAAU,CAAC+K,SAAD;QACX,OAAM;AACLd,2BAAiBc;AACjB/K,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,iBACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAMyK,+BACJ,KAAKrI,WACL,KAAKtD,WACL0K,MACAb,gBACAD,cACA7D,QACA7B,QAPF,CADF,GAWA,KAAKX,OACL,GAAG3D,OAf0B;MAiBhC;MAWgB,MAAXgM,YACJ/D,SACA5C,OACA2E,cACA7D,QACA7B,UACe;AACf,YAAI2F;AACJ,YAAIjK;AACJ,YAAIQ,UAAU6E,KAAD,GAAS;AACpB4E,2BAAiB5E,MAAMjF;AACvBJ,oBAAU,CAACqF,KAAD;QACX,OAAM;AACL4E,2BAAiB5E;AACjBrF,oBAAUgK;QACX;AACD,cAAMpK,2BACJ,eACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAM2K,6BACJ,KAAKvI,WACL,KAAKtD,WACL6H,SACAgC,gBACAD,cACA7D,QACA7B,QAPF,CADF,GAWA,KAAKX,OACL,GAAG3D,OAf0B;MAiBhC;MAOe,MAAVkM,WAAWC,eAAyC;AACxD,cAAMvM,2BACJ,cACA,KAAKE,YACL,IAAI8E,YAAJ,EAAkBC,IAChBvD,MAAM8K,4BAA4B,KAAK1I,WAAWyI,aAAlD,CADF,GAGA,KAAKxI,KANwB;MAQhC;MAW+B,OAAzByB,0BACL1B,WACA2E,MACA/D,UACAF,eACAC,iBACwB;AACxB,YAAIoC,OAAO,CACT;UAACC,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,GACA;UAACF,QAAQG;UAAoBF,UAAU;UAAOC,YAAY;QAA1D,CAFS;AAIX,cAAMyF,oBAAoBlK,OAAoB,CAC5CA,GAAgB,aAAhB,GACAA,GAAgB,UAAhB,GACAqB,UAAiB,eAAjB,GACArB,GAAgB,QAAhB,GACAqB,UAAiB,iBAAjB,CAL4C,CAApB;AAO1B,YAAI0D,OAAO7G,OAAAA,OAAOwC,MAAM,IAAb;AACX;AACE,gBAAMyJ,eAAeD,kBAAkBlF,OACrC;YACEC,aAAa;YACb9C;YACAF,eAAejE,eAAeiE,aAAD;YAC7BmI,QAAQlI,oBAAoB,OAAO,IAAI;YACvCA,iBAAiBlE,eAAekE,mBAAmB,IAAIjC,UAAU,CAAd,CAApB;UALjC,GAOA8E,IARmB;AAUrBA,iBAAOA,KAAKhE,MAAM,GAAGoJ,YAAd;QACR;AAED,eAAO,IAAIE,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAUkC,OAA5B1B,6BACL9B,WACA2E,MACAJ,SACA5C,OACwB;AACxB,cAAMoB,OAAO,CACX;UAACC,QAAQuB;UAAStB,UAAU;UAAOC,YAAY;QAA/C,GACA;UAACF,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,GACA;UAACF,QAAQrB;UAAOsB,UAAU;UAAOC,YAAY;QAA7C,GACA;UAACF,QAAQG;UAAoBF,UAAU;UAAOC,YAAY;QAA1D,CAJW;AAMb,cAAMK,aAAa9E,OAAoB,CAACA,GAAgB,aAAhB,CAAD,CAApB;AACnB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;QADf,GAGAF,IAJF;AAOA,eAAO,IAAIsF,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAY+B,OAAzBgD,0BACLxG,WACAoG,QACAC,aACA1E,OACA2E,cACA7D,QACwB;AACxB,cAAMc,aAAa9E,OAAoB,CACrCA,GAAgB,aAAhB,GACAqB,OAAc,QAAd,CAFqC,CAApB;AAKnB,cAAM0D,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;UACbjB,QAAQ,IAAInF,IAAImF,MAAR,EAAgB5F,SAAhB;QAFV,GAIA2G,IALF;AAQA,YAAIT,OAAO,CACT;UAACC,QAAQoD;UAAQnD,UAAU;UAAOC,YAAY;QAA9C,GACA;UAACF,QAAQqD;UAAapD,UAAU;UAAOC,YAAY;QAAnD,CAFS;AAIX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YACRN,QAAQrB;YACRsB,UAAU;YACVC,YAAY;UAHJ,CAAV;QAKD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAOC,YAAY;UAA7C,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AACD,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAY8B,OAAxBkD,yBACL1G,WACAuE,SACAM,UACAlD,OACA2E,cACA7D,QACwB;AACxB,cAAMc,aAAa9E,OAAoB,CACrCA,GAAgB,aAAhB,GACAqB,OAAc,QAAd,CAFqC,CAApB;AAKnB,cAAM0D,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;UACbjB,QAAQ,IAAInF,IAAImF,MAAR,EAAgB5F,SAAhB;QAFV,GAIA2G,IALF;AAQA,YAAIT,OAAO,CACT;UAACC,QAAQuB;UAAStB,UAAU;UAAOC,YAAY;QAA/C,GACA;UAACF,QAAQ6B;UAAU5B,UAAU;UAAOC,YAAY;QAAhD,CAFS;AAIX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAMC,YAAY;UAA5C,CAAV;QACD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAOC,YAAY;UAA7C,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAU6B,OAAvBoD,wBACL5G,WACAuE,SACA5C,OACA2E,cACwB;AACxB,cAAM/C,aAAa9E,OAAoB,CAACA,GAAgB,aAAhB,CAAD,CAApB;AAEnB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;QADf,GAGAF,IAJF;AAOA,YAAIT,OAAO,CAAC;UAACC,QAAQuB;UAAStB,UAAU;UAAOC,YAAY;QAA/C,CAAD;AACX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAMC,YAAY;UAA5C,CAAV;QACD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAOC,YAAY;UAA7C,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAYmC,OAA7B0D,8BACLlH,WACAuE,SACAuC,cACAC,eACAC,kBACAV,cACwB;AACxB,cAAMqC,oBAAoBlK,OAAoB,CAC5CA,GAAgB,aAAhB,GACAA,GAAgB,eAAhB,GACAA,GAAgB,QAAhB,GACAqB,UAAiB,cAAjB,CAJ4C,CAApB;AAO1B,YAAI0D,OAAO7G,OAAAA,OAAOwC,MAAM,IAAb;AACX;AACE,gBAAMyJ,eAAeD,kBAAkBlF,OACrC;YACEC,aAAa;YACbqD,eAAexJ,mBAAmBwJ;YAClC8B,QAAQ/B,iBAAiB,OAAO,IAAI;YACpCA,cAAcrK,eAAeqK,gBAAgB,IAAIpI,UAAU,CAAd,CAAjB;UAJ9B,GAMA8E,IAPmB;AASrBA,iBAAOA,KAAKhE,MAAM,GAAGoJ,YAAd;QACR;AAED,YAAI7F,OAAO,CAAC;UAACC,QAAQuB;UAAStB,UAAU;UAAOC,YAAY;QAA/C,CAAD;AACX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YAACN,QAAQgE;YAAkB/D,UAAU;YAAMC,YAAY;UAAvD,CAAV;QACD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQgE;YAAkB/D,UAAU;YAAOC,YAAY;UAAxD,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAY6B,OAAvB8D,wBACLtH,WACA2E,MACAyC,MACAC,WACAf,cACA7D,QACwB;AACxB,cAAMc,aAAa9E,OAAoB,CACrCA,GAAgB,aAAhB,GACAqB,OAAc,QAAd,CAFqC,CAApB;AAKnB,cAAM0D,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;UACbjB,QAAQ,IAAInF,IAAImF,MAAR,EAAgB5F,SAAhB;QAFV,GAIA2G,IALF;AAQA,YAAIT,OAAO,CACT;UAACC,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,GACA;UAACF,QAAQoE;UAAMnE,UAAU;UAAOC,YAAY;QAA5C,CAFS;AAIX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YACRN,QAAQqE;YACRpE,UAAU;YACVC,YAAY;UAHJ,CAAV;QAKD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQqE;YAAWpE,UAAU;YAAOC,YAAY;UAAjD,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAY2B,OAArBgE,sBACLxH,WACA2E,MACAJ,SACA5C,OACA2E,cACA7D,QACwB;AACxB,cAAMc,aAAa9E,OAAoB,CACrCA,GAAgB,aAAhB,GACAqB,OAAc,QAAd,CAFqC,CAApB;AAKnB,cAAM0D,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;UACbjB,QAAQ,IAAInF,IAAImF,MAAR,EAAgB5F,SAAhB;QAFV,GAIA2G,IALF;AAQA,YAAIT,OAAO,CACT;UAACC,QAAQuB;UAAStB,UAAU;UAAOC,YAAY;QAA/C,GACA;UAACF,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,CAFS;AAIX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YACRN,QAAQrB;YACRsB,UAAU;YACVC,YAAY;UAHJ,CAAV;QAKD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAOC,YAAY;UAA7C,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAWmC,OAA7BmE,8BACL3H,WACAuE,SACA6C,MACAzF,OACA2E,cACwB;AACxB,cAAM/C,aAAa9E,OAAoB,CAACA,GAAgB,aAAhB,CAAD,CAApB;AACnB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;QADf,GAGAF,IAJF;AAOA,YAAIT,OAAO,CACT;UAACC,QAAQuB;UAAStB,UAAU;UAAOC,YAAY;QAA/C,GACA;UAACF,QAAQoE;UAAMnE,UAAU;UAAOC,YAAY;QAA5C,CAFS;AAIX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAMC,YAAY;UAA5C,CAAV;QACD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAOC,YAAY;UAA7C,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAWoC,OAA9BqE,+BACL7H,WACAuE,SACAI,MACA0C,WACAf,cACwB;AACxB,cAAM/C,aAAa9E,OAAoB,CAACA,GAAgB,aAAhB,CAAD,CAApB;AACnB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;QADf,GAGAF,IAJF;AAOA,YAAIT,OAAO,CACT;UAACC,QAAQuB;UAAStB,UAAU;UAAOC,YAAY;QAA/C,GACA;UAACF,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,CAFS;AAIX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YAACN,QAAQqE;YAAWpE,UAAU;YAAMC,YAAY;UAAhD,CAAV;QACD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQqE;YAAWpE,UAAU;YAAOC,YAAY;UAAjD,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAWkC,OAA5BuE,6BACL/H,WACAuE,SACAI,MACA0C,WACAf,cACwB;AACxB,cAAM/C,aAAa9E,OAAoB,CAACA,GAAgB,aAAhB,CAAD,CAApB;AACnB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;QADf,GAGAF,IAJF;AAOA,YAAIT,OAAO,CACT;UAACC,QAAQuB;UAAStB,UAAU;UAAOC,YAAY;QAA/C,GACA;UAACF,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,CAFS;AAIX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YAACN,QAAQqE;YAAWpE,UAAU;YAAMC,YAAY;UAAhD,CAAV;QACD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQqE;YAAWpE,UAAU;YAAOC,YAAY;UAAjD,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAcsC,OAAhCyE,iCACLjI,WACAoG,QACAzB,MACA0B,aACA1E,OACA2E,cACA7D,QACA7B,UACwB;AACxB,cAAM2C,aAAa9E,OAAoB,CACrCA,GAAgB,aAAhB,GACAqB,OAAc,QAAd,GACArB,GAAgB,UAAhB,CAHqC,CAApB;AAMnB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;UACbjB,QAAQ,IAAInF,IAAImF,MAAR,EAAgB5F,SAAhB;UACR+D;QAHF,GAKA4C,IANF;AASA,YAAIT,OAAO,CACT;UAACC,QAAQoD;UAAQnD,UAAU;UAAOC,YAAY;QAA9C,GACA;UAACF,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,GACA;UAACF,QAAQqD;UAAapD,UAAU;UAAOC,YAAY;QAAnD,CAHS;AAKX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YACRN,QAAQrB;YACRsB,UAAU;YACVC,YAAY;UAHJ,CAAV;QAKD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAOC,YAAY;UAA7C,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AACD,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAcqC,OAA/B2E,gCACLnI,WACAuE,SACAI,MACAE,UACAlD,OACA2E,cACA7D,QACA7B,UACwB;AACxB,cAAM2C,aAAa9E,OAAoB,CACrCA,GAAgB,aAAhB,GACAqB,OAAc,QAAd,GACArB,GAAgB,UAAhB,CAHqC,CAApB;AAMnB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;UACbjB,QAAQ,IAAInF,IAAImF,MAAR,EAAgB5F,SAAhB;UACR+D;QAHF,GAKA4C,IANF;AASA,YAAIT,OAAO,CACT;UAACC,QAAQuB;UAAStB,UAAU;UAAOC,YAAY;QAA/C,GACA;UAACF,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,GACA;UAACF,QAAQ6B;UAAU5B,UAAU;UAAOC,YAAY;QAAhD,CAHS;AAKX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAMC,YAAY;UAA5C,CAAV;QACD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAOC,YAAY;UAA7C,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAaoC,OAA9B6E,+BACLrI,WACA2E,MACAyC,MACAC,WACAf,cACA7D,QACA7B,UACwB;AACxB,cAAM2C,aAAa9E,OAAoB,CACrCA,GAAgB,aAAhB,GACAqB,OAAc,QAAd,GACArB,GAAgB,UAAhB,CAHqC,CAApB;AAMnB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;UACbjB,QAAQ,IAAInF,IAAImF,MAAR,EAAgB5F,SAAhB;UACR+D;QAHF,GAKA4C,IANF;AASA,YAAIT,OAAO,CACT;UAACC,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,GACA;UAACF,QAAQoE;UAAMnE,UAAU;UAAOC,YAAY;QAA5C,CAFS;AAIX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YACRN,QAAQqE;YACRpE,UAAU;YACVC,YAAY;UAHJ,CAAV;QAKD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQqE;YAAWpE,UAAU;YAAOC,YAAY;UAAjD,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAYkC,OAA5B+E,6BACLvI,WACA2E,MACAJ,SACA5C,OACA2E,cACA7D,QACA7B,UACwB;AACxB,cAAM2C,aAAa9E,OAAoB,CACrCA,GAAgB,aAAhB,GACAqB,OAAc,QAAd,GACArB,GAAgB,UAAhB,CAHqC,CAApB;AAMnB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;UACbjB,QAAQ,IAAInF,IAAImF,MAAR,EAAgB5F,SAAhB;UACR+D;QAHF,GAKA4C,IANF;AASA,YAAIT,OAAO,CACT;UAACC,QAAQuB;UAAStB,UAAU;UAAOC,YAAY;QAA/C,GACA;UAACF,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,CAFS;AAIX,YAAIoD,aAAatH,WAAW,GAAG;AAC7B+D,eAAKO,KAAK;YACRN,QAAQrB;YACRsB,UAAU;YACVC,YAAY;UAHJ,CAAV;QAKD,OAAM;AACLH,eAAKO,KAAK;YAACN,QAAQrB;YAAOsB,UAAU;YAAOC,YAAY;UAA7C,CAAV;AACAoD,uBAAalD,QAAQC,YACnBN,KAAKO,KAAK;YACRN,QAAQK,OAAO3G;YACfuG,UAAU;YACVC,YAAY;UAHJ,CAAV,CADF;QAOD;AAED,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C;UACAwD;QAHgC,CAA3B;MAKR;MAQiC,OAA3BkF,4BACL1I,WACAyI,eACwB;AACxB,cAAMlF,aAAa9E,OAAoB,CAACA,GAAgB,aAAhB,CAAD,CAApB;AAEnB,cAAM+E,OAAO7G,OAAAA,OAAOwC,MAAMoE,WAAWhF,IAAxB;AACbgF,mBAAWE,OACT;UACEC,aAAa;QADf,GAGAF,IAJF;AAOA,YAAIT,OAAO,CAAC;UAACC,QAAQyF;UAAexF,UAAU;UAAOC,YAAY;QAArD,CAAD;AACX,eAAO,IAAI4F,uBAAuB;UAAC/F;UAAM/C;UAAsBwD;QAA7B,CAA3B;MACR;MAWqC,aAAzBvB,0BACX7B,qBACAJ,WACA2E,MACAhD,OACAoH,qBAA8B,OACV;AACpB,YAAI,CAACA,sBAAsB,CAACrK,UAAUsK,UAAUrH,MAAM9E,SAAN,CAApB,GAAuC;AACjE,gBAAM,IAAIgH,MAAO,sBAAqBlC,MAAMpC,SAAN,GAAhC;QACP;AACD,gBACE,MAAMb,UAAUuK,mBACd,CAACtH,MAAM9E,SAAN,GAAkBmD,UAAUnD,SAAV,GAAsB8H,KAAK9H,SAAL,CAAzC,GACAuD,mBAFI,GAIN;MACH;MAa6C,OAAvC+B,wCACL/B,qBACAJ,WACA2E,MACAuE,mBACAvH,OACA1B,OACwB;AACxB,cAAMuD,OAAO7G,OAAAA,OAAOwC,MAAM,CAAb;AAEb,YAAI4D,OAAO,CACT;UAACC,QAAQ/C;UAAOgD,UAAU;UAAMC,YAAY;QAA5C,GACA;UAACF,QAAQkG;UAAmBjG,UAAU;UAAOC,YAAY;QAAzD,GACA;UAACF,QAAQrB;UAAOsB,UAAU;UAAOC,YAAY;QAA7C,GACA;UAACF,QAAQ2B;UAAM1B,UAAU;UAAOC,YAAY;QAA5C,GACA;UAACF,QAAQ5B,cAAcpB;UAAWiD,UAAU;UAAOC,YAAY;QAA/D,GACA;UAACF,QAAQhD;UAAWiD,UAAU;UAAOC,YAAY;QAAjD,GACA;UAACF,QAAQG;UAAoBF,UAAU;UAAOC,YAAY;QAA1D,CAPS;AAUX,eAAO,IAAI4F,uBAAuB;UAChC/F;UACA/C,WAAWI;UACXoD;QAHgC,CAA3B;MAKR;IA7/DgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7RnB,QAAA,WAAA;AAEA,QAAA,YAAA;AACA,QAAA,cAAA;AAMA,QAAA,YAAA;AAGA,QAAa,eAAb,cAAkC,UAAA,QAAyB;MACzD,YAAY,QAAsB,MAAyB;AACzD,cAAM,QAAQ,IAAI;AAElB,YAAI,CAAC,KAAK,YAAY,YAAA,gBAAgB,GAAG;AACvC,iBAAM,GAAA,SAAA,qBAAmB;;AAG3B,YAAI,CAAC,aAAa,aAAa,KAAK,KAAK,IAAI,GAAG;AAC9C,iBAAM,GAAA,SAAA,4BAA0B;;AAGlC,aAAK,QAAO,GAAA,QAAA,aAAY,KAAK,KAAK,IAAI;MACxC;MAEA,OAAO,aAAa,MAAY;AAC9B,eAAO,KAAK,WAAW,YAAA,cAAc;MACvC;MAEA,OAAa,wBAAwB,YAAwB,OAAmB;;AAC9E,kBACE,MAAM,WAAW,wBAAwB,IAAI,UAAA,UAAU,KAAK,GAAG;YAC7D,WAAW,YAAA;WACZ,GACD,MAAM,IAAI,CAAC,EAAE,QAAQ,QAAO,MAAO,IAAI,aAAa,QAAQ,OAAO,CAAC;QACxE,CAAC;;;AAzBH,YAAA,eAAA;AA4BO,QAAM,cAAc,CAAC,SAAgB;AAC1C,YAAM,cAAc,YAAA,cAAc,OAAO,IAAI;AAC7C,kBAAY,OAAO,IAAI,UAAA,UAAU,YAAY,IAAI;AACjD,kBAAY,QAAQ,IAAI,UAAA,UAAU,YAAY,KAAK;AACnD,kBAAY,SAAS,YAAA,IAAI,WAAW,YAAY,MAAM;AAEtD,UAAI,YAAY,mBAAmB,GAAG;AACpC,oBAAY,WAAW;AACvB,oBAAY,kBAAkB,IAAI,YAAA,IAAI,CAAC;aAClC;AACL,oBAAY,WAAW,IAAI,UAAA,UAAU,YAAY,QAAQ;AACzD,oBAAY,kBAAkB,YAAA,IAAI,WAAW,YAAY,eAAe;;AAG1E,kBAAY,gBAAgB,YAAY,UAAU;AAClD,kBAAY,WAAW,YAAY,UAAU;AAE7C,UAAI,YAAY,mBAAmB,GAAG;AACpC,oBAAY,oBAAoB,YAAA,IAAI,WAAW,YAAY,QAAQ;AACnE,oBAAY,WAAW;aAClB;AACL,oBAAY,oBAAoB;AAChC,oBAAY,WAAW;;AAGzB,UAAI,YAAY,yBAAyB,GAAG;AAC1C,oBAAY,iBAAiB;aACxB;AACL,oBAAY,iBAAiB,IAAI,UAAA,UAAU,YAAY,cAAc;;AAGvE,aAAO;IACT;AAhCa,YAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;ACxCxB,iBAAA,mBAAA,OAAA;AACA,iBAAA,wBAAA,OAAA;;;;;;;;;;ACAa,YAAA,SAAS;MACpB,eAAe;MACf,UAAU;QAER,SAAS;QACT,UAAU;QACV,UAAU;QACV,OAAO;QACP,OAAO;QAEP,MAAM;QACN,OAAO;;MAET,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdnB,QAAA,YAAA;AAOA,QAAA,aAAA;AACA,QAAA,WAAA;AAGA,QAAsB,UAAtB,MAA6B;MAG3B,OAAa,mBAAmB,OAA8B;;AAC5D,kBAAQ,MAAM,UAAA,UAAU,mBAAmB,OAAO,KAAK,MAAM,GAAG;QAClE,CAAC;;MAED,OAAa,mBACX,YACA,oBAA0D;;AAE1D,gBAAM,QAAiE,CAAA;AACvE,cAAI;AACJ,cAAI,oBAAoB;AACtB,gBAAI,OAAO,uBAAuB,UAAU;AAC1C,2BAAa;mBACR;AACL,2BAAa,mBAAmB;AAChC,kBAAI,mBAAmB,WAAW;AAChC,sBAAM,YAAY,mBAAmB;;AAEvC,kBAAI,mBAAmB,SAAS;AAC9B,sBAAM,UAAU,mBAAmB;;;;AAIzC,gBAAM,OAAO,WAAW,WAAW,CAAC,KAAK,OAAO,SAAQ,CAAE,GAAG,YAAY,UAAU,KAAK;AACxF,gBAAM,YAAY,MAAO,WAAyC,YAChE,sBACA,IAAI;AAGN,iBACE,UAAU,OAKT,IAAI,CAAC,EAAE,SAAS,EAAE,MAAM,YAAY,UAAU,MAAK,GAAI,OAAM,OAAQ;YACpE,SAAS;cACP,MAAM,SAAA,OAAO,KAAK,KAAK,IAAI,QAAQ;cACnC;cACA;cACA,OAAO,IAAI,UAAA,UAAU,KAAK;;YAE5B,QAAQ,IAAI,UAAA,UAAU,MAAM;YAC5B,EACD,IAAI,CAAC,EAAE,QAAQ,QAAO,MAAO,IAAI,WAAA,QAAQ,QAAQ,OAAO,CAAC;QAC9D,CAAC;;;AAhDH,YAAA,UAAA;;;;;;;;;;ACXA,QAAA,YAAA;AAEA,QAAa2F,eAAb,cAAiC,UAAA,YAAiB;MAChD,YAAY,SAA+B;AACzC,cAAM,OAAO;MACf;MAEA,OAAO,aAAa,cAA6B,UAAiC,CAAA,GAAE;AAClF,cAAM,sBAAsB,IAAIA,aAAY,OAAO;AACnD,qBAAa,QAAQ,CAAC,gBACpB,YAAY,aAAa,QAAQ,CAAC,gBAAe;AAC/C,8BAAoB,IAAI,WAAW;QACrC,CAAC,CAAC;AAEJ,eAAO;MACT;;AAbF,YAAA,cAAAA;;;;;ACFA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAAA;AAAA;;;;;;;;;;;ACD5D,QAAA,YAAA;AACA,QAAA,UAAA;AA6EsB,WAAA,eAAA,SAAA,wBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aA5EpB,QAAA;IAAoB,EAAA,CAAA;AA4EsB,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aA3E1C,QAAA;IAAS,EAAA,CAAA;AA2EF,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aA1EP,QAAA;IAAW,EAAA,CAAA;AAKb,QAAA,SAAA,gBAAA,cAAA;AAWO,QAAM,cAAc,MAAK;AAC7B,cAAA,aAAa,UAAmC,aAAa,WAAA;AAG5D,cAAM,QAAQ,KAAK,eAAe,EAAE;AACpC,eAAO,IAAI,UAAA,UAAU,KAAK;MAC5B;AACC,cAAA,aAAa,UAAmC,cAAc,SAE7D,OAAgB;AAEhB,aAAK,gBAAgB,MAAM,SAAQ,CAAE;MACvC;AACC,cAAA,aAAa,UAAmC,qBAAqB,WAAA;AAGpE,cAAM,QAAQ,KAAK,eAAe,EAAE;AACpC,eAAO,OAAA,QAAO,OAAO,KAAK;MAC5B;AACC,cAAA,aAAa,UAAmC,sBAAsB,SAErE,OAAa;AAEb,aAAK,gBAAgB,OAAA,QAAO,OAAO,KAAK,CAAC;MAC3C;IACF;AAzBa,YAAA,cAAW;AA2BxB,KAAA,GAAA,QAAA,aAAW;AAQX,QAAa,OAAb,MAAiB;MACf,YAAY,OAAU,CAAA,GAAO;AAC3B,eAAO,OAAO,MAAM,IAAI;MAC1B;MAEA,OAAO,OAA0C,QAAW;AAC1D,gBAAO,GAAA,QAAA,QAAO,MAAM,MAAM;MAC5B;MAEA,OAAO,UAA6C,OAAU,CAAA,GAAO;AACnE,eAAO,OAAO,MAAK,GAAA,QAAA,WAAU,KAAK,QAAQ,IAAI,KAAK,IAAI,CAAC,CAAC;MAC3D;MAEA,OAAO,YAA+C,MAAY;AAChE,gBAAO,GAAA,QAAA,sBAAqB,KAAK,QAAQ,MAAM,IAAI;MACrD;;AAfF,YAAA,OAAA;AAkBO,QAAMC,UAAS,CAAC,MAAW,WAAe;AAC/C,aAAO,oBAAI,IAAc,CAAC,CAAC,MAAM,EAAE,MAAM,UAAU,OAAM,CAAE,CAAC,CAAC;IAC/D;AAFa,YAAA,SAAMA;;;;;;;;;;;;;ACzEnB,QAAA,UAAA,gBAAA,YAAA;AAEA,QAAY;AAAZ,KAAA,SAAYC,mBAAgB;AAC1B,MAAAA,kBAAAA,kBAAA,QAAA,KAAA;AACA,MAAAA,kBAAAA,kBAAA,SAAA,KAAA;AACA,MAAAA,kBAAAA,kBAAA,SAAA,KAAA;AACA,MAAAA,kBAAAA,kBAAA,SAAA,KAAA;IACF,GALY,mBAAA,QAAA,qBAAA,QAAA,mBAAgB,CAAA,EAAA;AAOrB,QAAM,gBAAgB,CAAC,MAAkB,QAAgB,aAAkC;AAChG,cAAQ;aACD,iBAAiB;AACpB,iBAAO,IAAI,QAAA,QAAG,KAAK,SAAS,IAAI;aAC7B,iBAAiB;AACpB,iBAAO,IAAI,QAAA,QAAG,KAAK,MAAM,QAAQ,SAAS,CAAC,GAAG,IAAI;aAC/C,iBAAiB;AACpB,iBAAO,IAAI,QAAA,QAAG,KAAK,MAAM,QAAQ,SAAS,CAAC,GAAG,IAAI;aAC/C,iBAAiB;AACpB,iBAAO,IAAI,QAAA,QAAG,KAAK,MAAM,QAAQ,SAAS,CAAC,GAAG,IAAI;;IAExD;AAXa,YAAA,gBAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT1B,YAAA,QAAA,aAAA,eAAA;AACA,iBAAA,wBAAA,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACDA,iBAAA,oBAAA,OAAA;AACA,iBAAA,kBAAA,OAAA;AACA,iBAAA,kBAAA,OAAA;AACA,iBAAA,mBAAA,OAAA;AACA,iBAAA,uBAAA,OAAA;AACA,iBAAA,iBAAA,OAAA;AACA,iBAAA,iBAAA,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA,QAAA,YAAA;AACA,QAAA,aAAA;AAEA,QAAa,kBAAb,cAAqC,WAAA,QAAO;MAQ1C,OAAa,mBACX,MACA,eAAqB;;AAErB,iBAAO,UAAA,UAAU,mBACf;YACE,OAAO,KAAK,gBAAgB,QAAQ,MAAM;YAC1C,gBAAgB,OAAO,SAAQ;YAC/B,KAAK,SAAQ;YACb,OAAO,KAAK,gBAAgB,SAAS,MAAM;YAC3C,OAAO,KAAK,eAAe,MAAM;aAEnC,gBAAgB,MAAM;QAE1B,CAAC;;MACD,OAAa,yBAAyB,MAAe;;AACnD,iBAAO,UAAA,UAAU,mBACf;YACE,OAAO,KAAK,gBAAgB,QAAQ,MAAM;YAC1C,gBAAgB,OAAO,SAAQ;YAC/B,KAAK,SAAQ;YACb,OAAO,KAAK,gBAAgB,SAAS,MAAM;aAE7C,gBAAgB,MAAM;QAE1B,CAAC;;MAED,OAAa,oBAAoB,MAAe;;AAC9C,iBAAO,UAAA,UAAU,mBACf;YACE,OAAO,KAAK,gBAAgB,QAAQ,MAAM;YAC1C,gBAAgB,OAAO,SAAQ;YAC/B,KAAK,SAAQ;aAEf,gBAAgB,MAAM;QAE1B,CAAC;;MAED,OAAa,wBACX,MACA,WAAoB;;AAEpB,iBAAO,UAAA,UAAU,mBACf;YACE,OAAO,KAAK,gBAAgB,QAAQ,MAAM;YAC1C,gBAAgB,OAAO,SAAQ;YAC/B,KAAK,SAAQ;YACb,OAAO,KAAK,gBAAgB,MAAM,MAAM;YACxC,UAAU,SAAQ;aAEpB,gBAAgB,MAAM;QAE1B,CAAC;;MAED,OAAa,+BACX,MACA,WAAoB;;AAEpB,iBAAO,UAAA,UAAU,mBACf;YACE,OAAO,KAAK,gBAAgB,QAAQ,MAAM;YAC1C,gBAAgB,OAAO,SAAQ;YAC/B,KAAK,SAAQ;YACb,OAAO,KAAK,gBAAgB,sBAAsB,MAAM;YACxD,UAAU,SAAQ;aAEpB,gBAAgB,MAAM;QAE1B,CAAC;;MAED,OAAa,6BAA0B;;AACrC,iBAAO,UAAA,UAAU,mBACf;YACE,OAAO,KAAK,gBAAgB,QAAQ,MAAM;YAC1C,gBAAgB,OAAO,SAAQ;YAC/B,OAAO,KAAK,gBAAgB,MAAM,MAAM;aAE1C,gBAAgB,MAAM;QAE1B,CAAC;;;AAvFH,YAAA,kBAAA;AACkB,oBAAA,SAAS;AACT,oBAAA,UAAU;AACV,oBAAA,OAAO;AACP,oBAAA,uBAAuB;AACvB,oBAAA,OAAO;AACP,oBAAA,SAAS,IAAI,UAAA,UAAU,WAAA,OAAO,SAAS,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTjE,QAAA,aAAA;AAQA,QAAA,oBAAA;AACA,QAAA,YAAA;AAEA,QAAA,WAAA;AACA,QAAA,cAAA;AAGA,QAAa,cAAb,cAAiC,WAAA,MAAM,KAAU;MAY/C,YAAY,MAAU;AACpB,cAAM,IAAI;AACV,aAAK,MAAM,YAAA,YAAY;MACzB;;AAfF,YAAA,cAAA;AACkB,gBAAA,SAAS,YAAY,OAAO;MAC1C,CAAC,OAAO,IAAI;MACZ,CAAC,UAAU,gBAAgB;MAC3B,CAAC,WAAW,KAAK;KAClB;AAaH,QAAa,UAAb,cAA6B,WAAA,QAAoB;MAG/C,YAAY,KAAmB,MAAyB;AACtD,cAAM,KAAK,IAAI;AAEf,YAAI,CAAC,KAAK,YAAY,kBAAA,gBAAgB,MAAM,GAAG;AAC7C,iBAAM,GAAA,WAAA,qBAAmB;;AAG3B,YAAI,CAAC,QAAQ,aAAa,KAAK,KAAK,IAAI,GAAG;AACzC,iBAAM,GAAA,WAAA,4BAA0B;;AAGlC,aAAK,OAAO,YAAY,YAAY,KAAK,KAAK,IAAI;MACpD;MAEA,OAAa,OAAO,MAAkB;;AACpC,iBAAO,kBAAA,gBAAgB,mBAAmB;YACxC,SAAA,OAAO,KAAK,kBAAA,gBAAgB,MAAM;YAClC,kBAAA,gBAAgB,OAAO,SAAQ;YAC/B,IAAI,UAAA,UAAU,IAAI,EAAE,SAAQ;YAC5B,SAAA,OAAO,KAAK,QAAQ,cAAc;WACnC;QACH,CAAC;;MAED,OAAO,aAAa,MAAY;AAC9B,eAAO,KAAK,OAAO,YAAA,YAAY;MACjC;;AA5BF,YAAA,UAAA;AACkB,YAAA,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCnC,QAAA,aAAA;AASA,QAAA,SAAA,gBAAA,cAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AACA,QAAA,WAAA;AACA,QAAA,YAAA;AACA,QAAA,cAAA;AASA,QAAa,sBAAb,cAAyC,WAAA,MAAM,KAAY;MA0BzD,YAAY,MAAY;AACtB,cAAM,IAAI;AACV,aAAK,MAAM,YAAA,YAAY;MACzB;;AA7BF,YAAA,sBAAA;AACkB,wBAAA,SAAS,oBAAoB,OAAO;MAClD,CAAC,OAAO,IAAI;MACZ,CAAC,UAAU,KAAK;MAChB,CAAC,aAAa,EAAE,MAAM,UAAU,MAAM,MAAK,CAAE;MAC7C,CAAC,gBAAgB,gBAAgB;MACjC,CAAC,oCAAoC,gBAAgB;KACtD;AA0BH,QAAa,sBAAb,cAAyC,WAAA,MAAM,KAAY;MAWzD,YAAY,MAAY;AACtB,cAAM,IAAI;AACV,aAAK,MAAM,YAAA,YAAY;MACzB;;AAdF,YAAA,sBAAA;AACkB,wBAAA,SAAS,oBAAoB,OAAO;MAClD,CAAC,OAAO,IAAI;MACZ,CAAC,UAAU,KAAK;MAChB,CAAC,aAAa,EAAE,MAAM,UAAU,MAAM,MAAK,CAAE;KAC9C;AAcH,QAAa,gBAAb,cAAmC,WAAA,QAA0B;MAG3D,YAAY,KAAmB,MAAyB;AACtD,cAAM,KAAK,IAAI;AAEf,YAAI,CAAC,KAAK,YAAY,kBAAA,gBAAgB,MAAM,GAAG;AAC7C,iBAAM,GAAA,WAAA,qBAAmB;;AAG3B,YAAI,cAAc,kBAAkB,KAAK,KAAK,IAAI,GAAG;AACnD,eAAK,OAAO,oBAAoB,YAAY,KAAK,KAAK,IAAI;mBACjD,cAAc,kBAAkB,KAAK,KAAK,IAAI,GAAG;AAC1D,eAAK,OAAO,oBAAoB,YAAY,KAAK,KAAK,IAAI;eACrD;AACL,iBAAM,GAAA,WAAA,4BAA0B;;MAEpC;MAEA,OAAa,OAAO,MAAkB;;AACpC,iBAAO,kBAAA,gBAAgB,mBAAmB;YACxC,SAAA,OAAO,KAAK,kBAAA,gBAAgB,MAAM;YAClC,kBAAA,gBAAgB,OAAO,SAAQ;YAC/B,IAAI,UAAA,UAAU,IAAI,EAAE,SAAQ;YAC5B,SAAA,OAAO,KAAK,cAAc,cAAc;WACzC;QACH,CAAC;;MAED,OAAO,aAAa,MAAY;AAC9B,eAAO,cAAc,kBAAkB,IAAI,KAAK,cAAc,kBAAkB,IAAI;MACtF;MAEA,OAAO,kBAAkB,MAAY;AACnC,eAAO,KAAK,OAAO,YAAA,YAAY;MACjC;MAEA,OAAO,kBAAkB,MAAY;AACnC,eAAO,KAAK,OAAO,YAAA,YAAY;MACjC;MAEM,YAAY,YAAsB;;AACtC,kBACE,MAAM,kBAAA,gBAAgB,mBAAmB,YAAY;YACnD,SAAS;cAEP;gBACE,QAAQ;kBACN,QAAQ;kBACR,OAAO,OAAA,QAAK,OAAO,SAAA,OAAO,KAAK,CAAC,YAAA,YAAY,SAAS,CAAC,CAAC;;;cAI3D;gBACE,QAAQ;kBACN,QAAQ;kBACR,OAAO,KAAK,OAAO,SAAQ;;;;WAIlC,GACD,IAAI,CAAC,YAAY,UAAA,QAAQ,KAAK,OAAO,CAAC;QAC1C,CAAC;;;AA7DH,YAAA,gBAAA;AACkB,kBAAA,iBAAiB;;;;;;;;;;AC5EnC,QAAA,aAAA;AACA,QAAA,KAAA;AAGA,QAAa,OAAb,cAA0B,WAAA,MAAM,KAAc;MAU5C,YAAY,MAAc;AACxB,cAAM,IAAI;AACV,aAAK,YAAY,KAAK;AACtB,aAAK,QAAQ,KAAK;AAClB,aAAK,YAAY,KAAK;MACxB;;AAfF,YAAA,OAAA;AACkB,SAAA,SAAS,KAAK,OAAO;MACnC,CAAC,aAAa,IAAI;MAClB,CAAC,SAAS,KAAK;MACf,CAAC,aAAa,KAAK;KACpB;AAcH,QAAa,qBAAb,cAAwC,WAAA,MAAM,KAA4B;MAUxE,YAAY,MAA4B;AACtC,cAAM,IAAI;AACV,aAAK,MAAM,GAAA,YAAY;AACvB,aAAK,cAAc,KAAK;AACxB,aAAK,OAAO,KAAK;MACnB;;AAfF,YAAA,qBAAA;AACkB,uBAAA,SAAS,mBAAmB,OAAO;MACjD,CAAC,OAAO,IAAI;MACZ,CAAC,eAAe,KAAK;MACrB,CAAC,QAAQ,IAAI;KACd;;;;;;;;;;AC5BH,QAAA,aAAA;AACA,QAAA,cAAA;AAGA,QAAa,aAAb,cAAgC,WAAA,MAAM,KAAU;MAQ9C,YAAY,MAAU;AACpB,cAAM,IAAI;AACV,aAAK,MAAM,KAAK;AAChB,aAAK,WAAW,KAAK;MACvB;;AAZF,YAAA,aAAA;AACkB,eAAA,SAAS,WAAW,OAAO;MACzC,CAAC,YAAY,IAAI;MACjB,CAAC,OAAO,gBAAgB;KACzB;AAYH,QAAa,2BAAb,cAA8C,WAAA,MAAM,KAAmC;MAQrF,YAAY,MAAmC;AAC7C,cAAM,IAAI;AACV,aAAK,MAAM,YAAA,YAAY;AACvB,aAAK,OAAO,KAAK;MACnB;;AAZF,YAAA,2BAAA;AACkB,6BAAA,SAAS,yBAAyB,OAAO;MACvD,CAAC,OAAO,IAAI;MACZ,CAAC,QAAQ,IAAI;KACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBH,QAAA,aAAA;AAUA,QAAA,YAAA;AACA,QAAA,UAAA,gBAAA,YAAA;AACA,QAAA,SAAA,gBAAA,cAAA;AACA,QAAA,WAAA;AACA,QAAA,oBAAA;AACA,QAAA,YAAA;AACA,QAAA,kBAAA;AACA,QAAA,SAAA;AACA,QAAA,eAAA;AACA,QAAA,cAAA;AAGA,QAAa,UAAb,cAA6B,WAAA,MAAM,KAAiB;;AAApD,YAAA,UAAA;AACkB,YAAA,SAAS,QAAQ,OAAO;MACtC,CAAC,WAAW,gBAAgB;MAC5B,CAAC,YAAY,IAAI;MACjB,CAAC,SAAS,IAAI;KACf;AAyBH,QAAa,SAAb,cAA4B,WAAA,MAAM,KAAgB;;AAAlD,YAAA,SAAA;AACkB,WAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,QAAQ;MACX,GAAG,aAAA,WAAW;MACd,GAAG,OAAA,KAAK;MACR,GAAG,OAAO,OAAO;QACf,CAAC,QAAQ,QAAQ;QACjB,CAAC,UAAU,QAAQ;QACnB,CAAC,OAAO,QAAQ;QAChB,CAAC,wBAAwB,KAAK;QAC9B,CAAC,YAAY,EAAE,MAAM,UAAU,MAAM,CAAC,OAAO,EAAC,CAAE;QAChD,CAAC,cAAc,EAAE,MAAM,UAAU,MAAM,aAAA,WAAU,CAAE;QACnD,CAAC,QAAQ,EAAE,MAAM,UAAU,MAAM,OAAA,KAAI,CAAE;OACxC;KACF;AAUH,QAAa,mBAAb,cAAsC,WAAA,MAAM,KAAc;MAkBxD,YAAY,MAAc;AACxB,cAAM,IAAI;AAEV,cAAM,mBAAmB,IAAI,OAAO,MAAU,GAAG;AACjD,aAAK,OAAO,KAAK,KAAK,QAAQ,kBAAkB,EAAE;AAClD,aAAK,MAAM,KAAK,IAAI,QAAQ,kBAAkB,EAAE;AAChD,aAAK,SAAS,KAAK,OAAO,QAAQ,kBAAkB,EAAE;MACxD;;AAzBF,YAAA,mBAAA;AACkB,qBAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,QAAQ;MACX,GAAG,iBAAiB,OAAO;QACzB,CAAC,QAAQ,QAAQ;QACjB,CAAC,UAAU,QAAQ;QACnB,CAAC,OAAO,QAAQ;QAChB,CAAC,wBAAwB,KAAK;QAC9B,CAAC,YAAY,EAAE,MAAM,UAAU,MAAM,CAAC,OAAO,EAAC,CAAE;OACjD;KACF;AA0BH,QAAa,eAAb,cAAkC,WAAA,MAAM,KAAU;MAkChD,YAAY,MAAU;AACpB,cAAM,IAAI;AACV,aAAK,MAAM,YAAA,YAAY;MACzB;;AArCF,YAAA,eAAA;AACkB,iBAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,iBAAiB;MACpB,GAAG,aAAA,WAAW;MACd,GAAG,OAAA,KAAK;MACR,GAAG,aAAa,OAAO;QACrB,CAAC,OAAO,IAAI;QACZ,CAAC,mBAAmB,gBAAgB;QACpC,CAAC,QAAQ,gBAAgB;QACzB,CAAC,QAAQ,gBAAgB;QACzB,CAAC,uBAAuB,IAAI;QAC5B,CAAC,aAAa,IAAI;QAClB,CAAC,gBAAgB,EAAE,MAAM,UAAU,MAAM,KAAI,CAAE;QAC/C,CAAC,iBAAiB,EAAE,MAAM,UAAU,MAAM,KAAI,CAAE;QAChD,CAAC,cAAc,EAAE,MAAM,UAAU,MAAM,aAAA,WAAU,CAAE;QACnD,CAAC,QAAQ,EAAE,MAAM,UAAU,MAAM,OAAA,KAAI,CAAE;OACxC;KACF;AAuBH,QAAa,WAAb,cAA8B,WAAA,QAAqB;MACjD,YAAY,QAAsB,MAAyB;AACzD,cAAM,QAAQ,IAAI;AAElB,YAAI,CAAC,KAAK,YAAY,kBAAA,gBAAgB,MAAM,GAAG;AAC7C,iBAAM,GAAA,WAAA,qBAAmB;;AAG3B,YAAI,CAAC,SAAS,aAAa,KAAK,KAAK,IAAI,GAAG;AAC1C,iBAAM,GAAA,WAAA,4BAA0B;;AAGlC,aAAK,OAAO,aAAa,YAAY,KAAK,KAAK,IAAI;MACrD;MAEA,OAAO,aAAa,MAAY;AAC9B,eAAO,KAAK,OAAO,YAAA,YAAY;MACjC;MAEA,OAAa,OAAO,MAAkB;;AACpC,iBAAO,kBAAA,gBAAgB,mBAAmB;YACxC,SAAA,OAAO,KAAK,kBAAA,gBAAgB,MAAM;YAClC,kBAAA,gBAAgB,OAAO,SAAQ;YAC/B,IAAI,UAAA,UAAU,IAAI,EAAE,SAAQ;WAC7B;QACH,CAAC;;MAED,OAAa,SACX,YACA,UAII,CAAA,GAAE;;AAEN,gBAAM,cAAc;YAElB;cACE,QAAQ;gBACN,QAAQ;gBACR,OAAO,OAAA,QAAK,OAAO,SAAA,OAAO,KAAK,CAAC,YAAA,YAAY,UAAU,CAAC,CAAC;;;YAI5D,QAAQ,mBAAmB;cACzB,QAAQ;gBACN,QAAQ;gBACR,OAAO,IAAI,UAAA,UAAU,QAAQ,eAAe,EAAE,SAAQ;;;YAI1D,QAAQ,QAAQ;cACd,QAAQ;gBACN,QAAQ;gBACR,OAAO,IAAI,UAAA,UAAU,QAAQ,IAAI,EAAE,SAAQ;;;YAG/C,OAAO,OAAO;AAEhB,cAAI,QAAQ,UAAU;AACpB,oBACE,MAAM,QAAQ,IACZ,MAAM,KAAK,MAAM,WAAA,OAAO,eAAe,EAAE,KAAI,CAAE,EAAE,OAC/C,CAAC,MAAM,MAAM;cACX,GAAG;cACH,GAAG,QAAQ,SAAS,IAAI,CAAC,WACvB,kBAAA,gBAAgB,mBAAmB,YAAY;gBAC7C,SAAS;kBACP,GAAG;kBACH;oBACE,QAAQ;sBACN,SAAQ,GAAA,QAAA,sBAAqB,CAAC;sBAC9B,OAAO,IAAI,UAAA,UAAU,MAAM,EAAE,SAAQ;;;;eAI5C,CAAC;eAGN,CAAA,CAAE,CACH,GAGF,KAAI,EACJ,IAAI,CAAC,YAAY,SAAS,KAAK,OAAO,CAAC;iBACrC;AACL,oBAAQ,MAAM,kBAAA,gBAAgB,mBAAmB,YAAY,EAAE,SAAS,YAAW,CAAE,GAAG,IACtF,CAAC,YAAY,SAAS,KAAK,OAAO,CAAC;;QAGzC,CAAC;;MAED,OAAa,WAAW,YAAwB,MAAkB;;AAChE,gBAAM,MAAM,MAAM,SAAS,OAAO,IAAI;AAEtC,iBAAO,SAAS,KAAK,YAAY,GAAG;QACtC,CAAC;;MAED,OAAa,YAAY,YAAwB,OAAmB;;AAClE,gBAAM,WAAW,MAAM,WAAA,aAAa,wBAAwB,YAAY,KAAK;AAC7E,gBAAM,aAAa,IAAI,IAAI,SAAS,IAAI,CAAC,EAAE,KAAI,MAAO,CAAC,KAAK,KAAK,SAAQ,GAAI,IAAI,CAAC,CAAC;AAEnF,gBAAM,cAAc,MAAM,SAAS,SAAS,UAAU;AAEtD,iBAAO,YAAY,OACjB,CAAC,aAAY;;AACX,mBAAA,WAAW,IAAI,SAAS,KAAK,IAAI,QAChC,MAAA,KAAA,eAAU,QAAV,eAAU,SAAA,SAAV,WAAY,IAAI,SAAS,KAAK,IAAI,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,YAAM,QAAA,OAAA,SAAA,SAAA,GAAE,SAAQ,MAAM,KAAK;WAAC;QAExE,CAAC;;MAED,OAAa,cAAc,YAAwB,OAAmB;;AACpE,gBAAM,WAAW,MAAM,WAAA,aAAa,wBAAwB,YAAY,KAAK;AAC7E,gBAAM,qBAAqB,SACxB,IAAI,CAAC,EAAE,KAAI,MAAO,IAAI,EACtB,OAAO,CAAC,EAAE,OAAM,OAAO,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,SAAQ,KAAK,CAAC;AAEhD,kBACE,MAAM,QAAQ,IACZ,mBAAmB,IAAI,CAAC,EAAE,KAAI,MAAO,SAAS,SAAS,YAAY,EAAE,KAAI,CAAE,CAAC,CAAC,GAE/E,KAAI;QACR,CAAC;;MAED,OAAa,cAAc,YAAwB,OAAmB;;AACpE,gBAAM,YAAY,MAAM,SAAS,gBAAgB,YAAY,KAAK;AAElE,iBAAO,MAAM,KAAK,UAAU,QAAO,CAAE,EAAE,IAAI,CAAC,CAAC,QAAQ,IAAI,MAAM,IAAI,SAAS,QAAQ,IAAI,CAAC;QAC3F,CAAC;;MAED,OAAa,gBACX,YACA,OAAmB;;AAEnB,gBAAM,WAAW,MAAM,WAAA,aAAa,wBAAwB,YAAY,KAAK;AAE7E,gBAAM,qBAAqB,SAAS,OAAO,CAAC,MAAM,EAAE,KAAI,MAAM;;AAI5D,qBAAO,KAAA,KAAK,YAAM,QAAA,OAAA,SAAA,SAAA,GAAE,GAAG,IAAI,QAAA,QAAG,CAAC,CAAC,KAAI,CAAC,GAAG,MAAM,SAAS,OAAO,KAAK,IAAI,CAAC,IAAI;UAC9E,GAAG,CAAA,CAAE;AAEL,gBAAM,oBAAoB,MAAM,QAAQ,IAAI,kBAAkB;AAE9D,iBAAO,WAAA,QAAQ,SAAS,YAAY,iBAAiB;QACvD,CAAC;;MAED,OAAa,gBACX,YACA,OAAmB;;AAEnB,gBAAM,YAAY,MAAM,SAAS,gBAAgB,YAAY,KAAK;AAElE,iBAAO,MAAM,KAAK,UAAU,OAAM,CAAE,EAAE,IAAI,CAAC,MAAM,aAAa,YAAY,EAAE,IAAI,CAAC;QACnF,CAAC;;MAED,OAAa,WAAW,YAAwB,MAAkB;;AAChE,gBAAM,MAAM,MAAM,UAAA,QAAQ,OAAO,IAAI;AACrC,gBAAM,OAAO,MAAM,WAAA,QAAQ,QAAQ,YAAY,GAAG;AAClD,gBAAM,MAAM,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,KAAK;AAEvB,kBAAQ;iBACD,YAAA,YAAY;AACf,qBAAO,IAAI,UAAA,QAAQ,KAAK,IAAI;iBACzB,YAAA,YAAY;iBACZ,YAAA,YAAY;AACf,qBAAO,IAAI,gBAAA,cAAc,KAAK,IAAI;;AAElC;;QAEN,CAAC;;;AA3KH,YAAA,WAAA;AA8Ka,YAAA,kBAAkB;AAClB,YAAA,oBAAoB;AACpB,YAAA,iBAAiB;AACjB,YAAA,kBAAkB,KAAK,IAAI;AAEjC,QAAM,uBAAuB,CAAC,UAAiB;AACpD,aACE,IACA,KACA,KACA,IACA,QAAA,kBACA,IACA,QAAA,iBACA,IACA,QAAA,oBACA,IACA,IACA,IACA,QAAQ,QAAA;IAEZ;AAhBa,YAAA,uBAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3UjC,QAAA,aAAA;AAOA,QAAA,YAAA;AAEA,QAAA,YAAA;AACA,QAAA,oBAAA;AACA,QAAA,WAAA;AACA,QAAA,cAAA;AAGA,QAAa,oBAAb,cAAuC,WAAA,MAAM,KAAU;MASrD,YAAY,MAAU;AACpB,cAAM,IAAI;AACV,aAAK,MAAM,YAAA,YAAY;MACzB;MAEA,aAAa,SAAe;AAC1B,cAAM,gBAAgB,UAAU,cAAc;AAC9C,cAAM,cAAc,KAAK,MAAM,gBAAgB,CAAC;AAEhD,YAAI,cAAc,IAAI;AACpB,gBAAM,MAAM,uBAAuB;;AAGrC,cAAM,4BAA4B,IAAK,gBAAgB;AACvD,cAAM,OAAO,KAAK,IAAI,GAAG,yBAAyB;AAClD,cAAM,cAAc,KAAK,OAAO,eAAe;AAE/C,eAAO,eAAe;MACxB;;AA3BF,YAAA,oBAAA;AACkB,sBAAA,SAAS,kBAAkB,OAAO;MAChD,CAAC,OAAO,IAAI;MACZ,CAAC,UAAU,CAAC,EAAE,CAAC;KAChB;AA0BH,QAAa,gBAAb,cAAmC,WAAA,QAA0B;MAG3D,YAAY,KAAmB,MAAyB;AACtD,cAAM,KAAK,IAAI;AAEf,YAAI,CAAC,KAAK,YAAY,kBAAA,gBAAgB,MAAM,GAAG;AAC7C,iBAAM,GAAA,WAAA,qBAAmB;;AAG3B,YAAI,CAAC,cAAc,aAAa,KAAK,KAAK,IAAI,GAAG;AAC/C,iBAAM,GAAA,WAAA,4BAA0B;;AAGlC,aAAK,OAAO,kBAAkB,YAAY,KAAK,KAAK,IAAI;MAC1D;MAEA,OAAa,OAAO,MAAoB,SAAW;;AACjD,gBAAM,gBAAgB,KAAK,MAAM,QAAQ,SAAQ,IAAK,GAAG;AAEzD,iBAAO,kBAAA,gBAAgB,mBAAmB;YACxC,SAAA,OAAO,KAAK,kBAAA,gBAAgB,MAAM;YAClC,kBAAA,gBAAgB,OAAO,SAAQ;YAC/B,IAAI,UAAA,UAAU,IAAI,EAAE,SAAQ;YAC5B,SAAA,OAAO,KAAK,UAAA,QAAQ,cAAc;YAClC,SAAA,OAAO,KAAK,cAAc,SAAQ,CAAE;WACrC;QACH,CAAC;;MAED,OAAO,aAAa,MAAY;AAC9B,eAAO,KAAK,OAAO,YAAA,YAAY;MACjC;;AA/BF,YAAA,gBAAA;AACkB,kBAAA,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;AC9C9B,iBAAA,qBAAA,OAAA;AACA,iBAAA,oBAAA,OAAA;AACA,iBAAA,yBAAA,OAAA;AACA,iBAAA,mBAAA,OAAA;AACA,iBAAA,yBAAA,OAAA;AACA,iBAAA,sBAAA,OAAA;AACA,iBAAA,gBAAA,OAAA;;;;;;;;;;ACNA,QAAA,aAAA;AACA,QAAA,YAAA;AAOA,QAAA,aAAA;AACA,QAAA,oBAAA;AAEA,QAAa,qBAAb,cAAwC,WAAA,MAAM,KAAoD;MAAlG,cAAA;;AAUE,aAAA,cAAc;MAGhB;;AAbA,YAAA,qBAAA;AACkB,uBAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,WAAA,iBAAiB;MACpB,GAAG,mBAAmB,OAAO;QAC3B,CAAC,eAAe,IAAI;QACpB,CAAC,QAAQ,WAAA,gBAAgB;QACzB,CAAC,aAAa,IAAI;OACnB;KACF;AAeH,QAAa,iBAAb,cAAoC,WAAA,YAAW;MAC7C,YAAY,SAAgC,QAA4B;AACtE,cAAM,OAAO;AACb,cAAM,EAAE,SAAQ,IAAK;AACrB,cAAM,EAAE,UAAU,cAAc,iBAAiB,MAAM,cAAa,IAAK;AAEzE,cAAM,OAAO,mBAAmB,UAAU;UACxC,MAAM;UACN,WAAW;SACZ;AAED,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,UAAA,cAAc;cACtB,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,UAAA;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAtDF,YAAA,iBAAA;;;;;;;;;;AClCA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,aAAA;AACA,QAAA,oBAAA;AAEA,QAAa,qBAAb,cAAwC,WAAA,MAAM,KAI5C;MAJF,cAAA;;AAeE,aAAA,cAAc;MAKhB;;AApBA,YAAA,qBAAA;AAKkB,uBAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,WAAA,iBAAiB;MACpB,GAAG,mBAAmB,OAAO;QAC3B,CAAC,eAAe,IAAI;QACpB,CAAC,QAAQ,EAAE,MAAM,UAAU,MAAM,WAAA,iBAAgB,CAAE;QACnD,CAAC,mBAAmB,EAAE,MAAM,UAAU,MAAM,iBAAgB,CAAE;QAC9D,CAAC,uBAAuB,EAAE,MAAM,UAAU,MAAM,KAAI,CAAE;OACvD;KACF;AAiBH,QAAa,iBAAb,cAAoC,WAAA,YAAW;MAC7C,YAAY,SAAgC,QAA4B;AACtE,cAAM,OAAO;AACb,cAAM,EAAE,UAAU,cAAc,iBAAiB,oBAAoB,oBAAmB,IACtF;AAEF,cAAM,OAAO,mBAAmB,UAAU;UACxC,MAAM;UACN,iBAAiB,sBAAsB,mBAAmB,SAAQ;UAClE,qBAAqB,uBAAuB;SAC7C;AAED,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AA9BF,YAAA,iBAAA;;;;;;;;;;ACnCA,QAAA,aAAA;AACA,QAAA,cAAA;AACA,QAAA,YAAA;AAQA,QAAA,oBAAA;AAEA,QAAa,0BAAb,cAA6C,WAAA,MAAM,KAA8B;MAAjF,cAAA;;AAME,aAAA,cAAc;MAEhB;;AARA,YAAA,0BAAA;AACkB,4BAAA,SAAS,wBAAwB,OAAO;MACtD,CAAC,eAAe,IAAI;MACpB,CAAC,aAAa,EAAE,MAAM,UAAU,MAAM,MAAK,CAAE;KAC9C;AAeH,QAAa,sBAAb,cAAyC,WAAA,YAAW;MAClD,YAAY,SAAgC,QAAiC;AAC3E,cAAM,OAAO;AACb,cAAM,EAAE,SAAQ,IAAK;AACrB,cAAM,EAAE,SAAS,UAAU,iBAAiB,MAAM,eAAe,UAAS,IAAK;AAE/E,cAAM,OAAO,wBAAwB,UAAU;UAC7C,WAAW,aAAa;SACzB;AAED,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAGd;cACE,QAAQ,YAAA;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,UAAA,cAAc;cACtB,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,UAAA;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAhEF,YAAA,sBAAA;;;;;;;;;;AC/BA,QAAA,aAAA;AACA,QAAA,cAAA;AACA,QAAA,YAAA;AAQA,QAAA,oBAAA;AAEA,QAAa,8CAAb,cAAiE,WAAA,MAAM,KAAqB;MAA5F,cAAA;;AAME,aAAA,cAAc;MAEhB;;AARA,YAAA,8CAAA;AACkB,gDAAA,SAAS,4CAA4C,OAAO;MAC1E,CAAC,eAAe,IAAI;MACpB,CAAC,WAAW,KAAK;KAClB;AAoBH,QAAa,0CAAb,cAA6D,WAAA,YAAW;MACtE,YACE,SACA,QAAqD;AAErD,cAAM,OAAO;AACb,cAAM,EAAE,SAAQ,IAAK;AACrB,cAAM,EACJ,SACA,UACA,iBACA,eACA,gBACA,MACA,eACA,eACA,YACA,cACA,aAAY,IACV;AAEJ,cAAM,OAAO,4CAA4C,UAAU;UACjE,SAAS;SACV;AAED,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,YAAA;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,UAAA,cAAc;cACtB,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,UAAA;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAvGF,YAAA,0CAAA;;;;;;;;;;ACpCA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AAEA,QAAa,wCAAb,cAA2D,WAAA,MAAM,KAAI;MAArE,cAAA;;AAGE,aAAA,cAAc;MAChB;;AAJA,YAAA,wCAAA;AACkB,0CAAA,SAAS,sCAAsC,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC;AAW/F,QAAa,oCAAb,cAAuD,WAAA,YAAW;MAChE,YAAY,SAAgC,QAA+C;AACzF,cAAM,OAAO;AACb,cAAM,EAAE,UAAU,OAAO,aAAY,IAAK;AAE1C,cAAM,OAAO,sCAAsC,UAAS;AAE5D,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AA9BF,YAAA,oCAAA;;;;;;;;;;AChBA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AAEA,QAAa,mBAAb,cAAsC,WAAA,MAAM,KAAI;MAAhD,cAAA;;AAGE,aAAA,cAAc;MAChB;;AAJA,YAAA,mBAAA;AACkB,qBAAA,SAAS,iBAAiB,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC;AAU1E,QAAa,eAAb,cAAkC,WAAA,YAAW;MAC3C,YAAY,SAAgC,QAA0B;AACpE,cAAM,OAAO;AACb,cAAM,EAAE,UAAU,QAAO,IAAK;AAE9B,cAAM,OAAO,iBAAiB,UAAS;AAEvC,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAzBF,YAAA,eAAA;;;;;;;;;;ACfA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,aAAA;AACA,QAAA,oBAAA;AAEA,QAAa,uBAAb,cAA0C,WAAA,MAAM,KAK9C;MALF,cAAA;;AAiBE,aAAA,cAAc;MAMhB;;AAvBA,YAAA,uBAAA;AAMkB,yBAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,WAAA,OAAO;MACV,GAAG,qBAAqB,OAAO;QAC7B,CAAC,eAAe,IAAI;QACpB,CAAC,QAAQ,EAAE,MAAM,UAAU,MAAM,WAAA,OAAM,CAAE;QACzC,CAAC,mBAAmB,EAAE,MAAM,UAAU,MAAM,iBAAgB,CAAE;QAC9D,CAAC,uBAAuB,EAAE,MAAM,UAAU,MAAM,KAAI,CAAE;QACtD,CAAC,aAAa,EAAE,MAAM,UAAU,MAAM,KAAI,CAAE;OAC7C;KACF;AAmBH,QAAa,mBAAb,cAAsC,WAAA,YAAW;MAC/C,YAAY,SAAgC,QAA8B;AACxE,cAAM,OAAO;AACb,cAAM,EACJ,UACA,cACA,iBACA,oBACA,qBACA,UAAS,IACP;AAEJ,cAAM,OAAO,qBAAqB,UAAU;UAC1C,MAAM;UACN,iBAAiB,sBAAsB,mBAAmB,SAAQ;UAClE,qBAAqB,uBAAuB;UAC5C,WAAW,aAAa;SACzB;AAED,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AArCF,YAAA,mBAAA;;;;;;;;;;ACvCA,QAAA,aAAA;AACA,QAAA,YAAA;AAOA,QAAA,aAAA;AACA,QAAA,oBAAA;AAEA,QAAa,uBAAb,cAA0C,WAAA,MAAM,KAA0C;MAA1F,cAAA;;AAUE,aAAA,cAAc;MAGhB;;AAbA,YAAA,uBAAA;AACkB,yBAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,WAAA,OAAO;MACV,GAAG,qBAAqB,OAAO;QAC7B,CAAC,eAAe,IAAI;QACpB,CAAC,QAAQ,WAAA,MAAM;QACf,CAAC,aAAa,IAAI;OACnB;KACF;AAeH,QAAa,mBAAb,cAAsC,WAAA,YAAW;MAC/C,YAAY,SAAgC,QAA8B;AACxE,cAAM,OAAO;AACb,cAAM,EAAE,SAAQ,IAAK;AACrB,cAAM,EAAE,UAAU,cAAc,iBAAiB,MAAM,cAAa,IAAK;AAEzE,cAAM,OAAO,qBAAqB,UAAU;UAC1C,MAAM;UACN,WAAW;SACZ;AAED,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,UAAA,cAAc;cACtB,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,UAAA;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAtDF,YAAA,mBAAA;;;;;;;;;;AClCA,QAAA,aAAA;AACA,QAAA,cAAA;AACA,QAAA,YAAA;AAQA,QAAA,oBAAA;AAEA,QAAa,4BAAb,cAA+C,WAAA,MAAM,KAA8B;MAAnF,cAAA;;AAME,aAAA,cAAc;MAEhB;;AARA,YAAA,4BAAA;AACkB,8BAAA,SAAS,0BAA0B,OAAO;MACxD,CAAC,eAAe,IAAI;MACpB,CAAC,aAAa,EAAE,MAAM,UAAU,MAAM,MAAK,CAAE;KAC9C;AAMH,QAAa,wBAAb,cAA2C,WAAA,YAAW;MACpD,YAAY,SAAgC,QAAiC;AAC3E,cAAM,OAAO;AACb,cAAM,EAAE,SAAQ,IAAK;AACrB,cAAM,EAAE,SAAS,UAAU,iBAAiB,MAAM,eAAe,UAAS,IAAK;AAE/E,cAAM,OAAO,0BAA0B,UAAU;UAC/C,WAAW,aAAa;SACzB;AAED,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAGd;cACE,QAAQ,YAAA;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,UAAA,cAAc;cACtB,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,UAAA;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAhEF,YAAA,wBAAA;;;;;;;;;;ACtBA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AAEA,QAAa,uBAAb,cAA0C,WAAA,MAAM,KAAI;MAApD,cAAA;;AAEE,aAAA,cAAc;MAChB;;AAHA,YAAA,uBAAA;AACkB,yBAAA,SAAS,IAAI,IAAI,CAAC,GAAG,qBAAqB,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC;AAa5F,QAAa,mBAAb,cAAsC,WAAA,YAAW;MAC/C,YAAY,SAAgC,QAA8B;AACxE,cAAM,OAAO;AACb,cAAM,EAAE,SAAQ,IAAK;AACrB,cAAM,EACJ,UACA,qBACA,gBACA,oBACA,yBACA,0BAAyB,IACvB;AAEJ,cAAM,OAAO,qBAAqB,UAAS;AAC3C,cAAM,WAAW;UACf;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;;AAGhB,YAAI,2BAA2B;AAC7B,mBAAS,KAAK;YACZ,QAAQ;YACR,UAAU;YACV,YAAY;WACb;;AAEH,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;UACN,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AA5DF,YAAA,mBAAA;;;;;;;;;;AClBA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AAEA,QAAa,yBAAb,cAA4C,WAAA,MAAM,KAAI;MAAtD,cAAA;;AAEE,aAAA,cAAc;MAChB;;AAHA,YAAA,yBAAA;AACkB,2BAAA,SAAS,IAAI,IAAI,CAAC,GAAG,uBAAuB,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC;AAa9F,QAAa,qBAAb,cAAwC,WAAA,YAAW;MACjD,YAAY,SAAgC,QAAgC;AAC1E,cAAM,OAAO;AACb,cAAM,EAAE,SAAQ,IAAK;AACrB,cAAM,EACJ,UACA,qBACA,gBACA,oBACA,yBACA,0BAAyB,IACvB;AAEJ,cAAM,OAAO,uBAAuB,UAAS;AAC7C,cAAM,WAAW;UACf;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;;AAGhB,YAAI,2BAA2B;AAC7B,mBAAS,KAAK;YACZ,QAAQ;YACR,UAAU;YACV,YAAY;WACb;;AAEH,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;UACN,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AA5DF,YAAA,qBAAA;;;;;;;;;;AClBA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AAEA,QAAa,6BAAb,cAAgD,WAAA,MAAM,KAAI;MAA1D,cAAA;;AAEE,aAAA,cAAc;MAChB;;AAHA,YAAA,6BAAA;AACkB,+BAAA,SAAS,IAAI,IAAI,CAAC,GAAG,2BAA2B,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC;AAclG,QAAa,mCAAb,cAAsD,WAAA,YAAW;MAC/D,YAAY,SAAgC,QAAoC;AAC9E,cAAM,OAAO;AACb,cAAM,EAAE,SAAQ,IAAK;AACrB,cAAM,EACJ,UACA,qBACA,gBACA,iBACA,oBACA,yBACA,0BAAyB,IACvB;AAEJ,cAAM,OAAO,2BAA2B,UAAS;AACjD,cAAM,WAAW;UACf;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;;AAGhB,YAAI,2BAA2B;AAC7B,mBAAS,KAAK;YACZ,QAAQ;YACR,UAAU;YACV,YAAY;WACb;;AAEH,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;UACN,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAlEF,YAAA,mCAAA;;;;;;;;;;ACnBA,QAAA,aAAA;AACA,QAAA,cAAA;AACA,QAAA,YAAA;AAOA,QAAA,oBAAA;AAEA,QAAa,0BAAb,cAA6C,WAAA,MAAM,KAAI;MAAvD,cAAA;;AAOE,aAAA,cAAc;MAEhB;;AATA,YAAA,0BAAA;AACkB,4BAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,wBAAwB,OAAO;QAChC,CAAC,eAAe,IAAI;QACpB,CAAC,gBAAgB,IAAI;OACtB;KACF;AAgBH,QAAa,sBAAb,cAAyC,WAAA,YAAW;MAClD,YAAY,SAAgC,QAAiC;AAC3E,cAAM,OAAO;AACb,cAAM,EAAE,SAAQ,IAAK;AACrB,cAAM,EACJ,oBACA,MACA,OACA,mBACA,UACA,MACA,QACA,aAAY,IACV;AAEJ,cAAM,OAAO,wBAAwB,UAAU,EAAE,aAAY,CAAE;AAC/D,cAAM,WAAW;UACf;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,YAAA;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,UAAA,cAAc;YACtB,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,UAAA;YACR,UAAU;YACV,YAAY;;;AAIhB,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;UACN,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAjFF,YAAA,sBAAA;;;;;;;;;;ACjCA,QAAA,aAAA;AACA,QAAA,cAAA;AACA,QAAA,YAAA;AAOA,QAAA,oBAAA;AAEA,QAAa,yBAAb,cAA4C,WAAA,MAAM,KAAI;MAAtD,cAAA;;AAEE,aAAA,cAAc;MAChB;;AAHA,YAAA,yBAAA;AACkB,2BAAA,SAAS,IAAI,IAAI,CAAC,GAAG,uBAAuB,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC;AAa9F,QAAa,qBAAb,cAAwC,WAAA,YAAW;MACjD,YAAY,SAAgC,QAAgC;AAC1E,cAAM,OAAO;AACb,cAAM,EAAE,oBAAoB,MAAM,OAAO,mBAAmB,UAAU,KAAI,IAAK;AAE/E,cAAM,OAAO,uBAAuB,UAAS;AAC7C,cAAM,WAAW;UACf;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,YAAA;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,UAAA,cAAc;YACtB,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,UAAA;YACR,UAAU;YACV,YAAY;;;AAIhB,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;UACN,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AA7DF,YAAA,qBAAA;;;;;;;;;;ACzBA,QAAA,aAAA;AACA,QAAA,YAAA;AAOA,QAAA,oBAAA;AAEA,QAAa,iCAAb,cAAoD,WAAA,MAAM,KAAI;MAA9D,cAAA;;AAIE,aAAA,cAAc;MAChB;;AALA,YAAA,iCAAA;AACkB,mCAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,+BAA+B,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC;KACjE;AAYH,QAAa,6BAAb,cAAgD,WAAA,YAAW;MACzD,YAAY,SAAgC,QAAwC;AAClF,cAAM,OAAO;AACb,cAAM,EAAE,SAAQ,IAAK;AACrB,cAAM,EAAE,UAAU,2BAA2B,wBAAwB,iBAAiB,KAAI,IACxF;AAEF,cAAM,OAAO,+BAA+B,UAAS;AACrD,cAAM,WAAW;UACf;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,UAAA,cAAc;YACtB,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,UAAA;YACR,UAAU;YACV,YAAY;;;AAIhB,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;UACN,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AA1DF,YAAA,6BAAA;;;;;;;;;;ACzBA,QAAA,aAAA;AACA,QAAA,YAAA;AAOA,QAAA,oBAAA;AAEA,QAAa,gCAAb,cAAmD,WAAA,MAAM,KAAI;MAA7D,cAAA;;AAIE,aAAA,cAAc;MAChB;;AALA,YAAA,gCAAA;AACkB,kCAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,8BAA8B,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC;KAChE;AAcH,QAAa,4BAAb,cAA+C,WAAA,YAAW;MACxD,YAAY,SAAgC,QAAuC;AACjF,cAAM,OAAO;AACb,cAAM,EACJ,UACA,2BACA,mBACA,wBACA,iBACA,KAAI,IACF;AACJ,cAAM,gBAAgB,qBAAqB;AAC3C,YAAI,CAAC,eAAe;AAClB,gBAAM,IAAI,MAAM,yCAAyC;;AAE3D,cAAM,OAAO,8BAA8B,UAAS;AACpD,cAAM,WAAW;UACf;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,UAAA,cAAc;YACtB,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,UAAA;YACR,UAAU;YACV,YAAY;;;AAIhB,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;UACN,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AA7DF,YAAA,4BAAA;;;;;;;;;;AC3BA,QAAA,aAAA;AACA,QAAA,cAAA;AACA,QAAA,YAAA;AAOA,QAAA,oBAAA;AAEA,QAAa,cAAb,cAAiC,WAAA,MAAM,KAAI;MAA3C,cAAA;;AAOE,aAAA,cAAc;MAEhB;;AATA,YAAA,cAAA;AACkB,gBAAA,SAAS,IAAI,IAAI;MAC/B,GAAG,YAAY,OAAO;QACpB,CAAC,eAAe,IAAI;QACpB,CAAC,gBAAgB,IAAI;OACtB;KACF;AAeH,QAAa,UAAb,cAA6B,WAAA,YAAW;MACtC,YAAY,SAAgC,QAAqB;AAC/D,cAAM,OAAO;AACb,cAAM,EAAE,UAAU,cAAc,cAAc,QAAQ,aAAY,IAAK;AAEvE,cAAM,OAAO,YAAY,UAAU,EAAE,aAAY,CAAE;AACnD,cAAM,WAAW;UACf;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,YAAA;YACR,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,UAAA,cAAc;YACtB,UAAU;YACV,YAAY;;UAEd;YACE,QAAQ,UAAA;YACR,UAAU;YACV,YAAY;;;AAGhB,YAAI,cAAc;AAChB,mBAAS,KAAK;YACZ,QAAQ;YACR,UAAU;YACV,YAAY;WACb;AACD,mBAAS,KAAK;YACZ,QAAQ;YACR,UAAU;YACV,YAAY;WACb;;AAEH,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;UACN,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAzDF,YAAA,UAAA;;;;;;;;;;AChCA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AACA,QAAA,cAAA;AAEA,QAAa,6BAAb,cAAgD,WAAA,MAAM,KAAI;MAA1D,cAAA;;AAEE,aAAA,cAAc;MAChB;;AAHA,YAAA,6BAAA;AACkB,+BAAA,SAAS,IAAI,IAAI,CAAC,GAAG,2BAA2B,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC;AAWlG,QAAa,yBAAb,cAA4C,WAAA,YAAW;MACrD,YAAY,SAAgC,QAAoC;AAC9E,cAAM,OAAO;AACb,cAAM,EAAE,UAAU,eAAe,SAAS,KAAI,IAAK;AAEnD,cAAM,OAAO,2BAA2B,UAAS;AAEjD,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,YAAA;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAxCF,YAAA,yBAAA;;;;;;;;;;ACjBA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AACA,QAAA,cAAA;AAEA,QAAa,2BAAb,cAA8C,WAAA,MAAM,KAAI;MAAxD,cAAA;;AAEE,aAAA,cAAc;MAChB;;AAHA,YAAA,2BAAA;AACkB,6BAAA,SAAS,IAAI,IAAI,CAAC,GAAG,yBAAyB,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC,CAAC,CAAC;AAWhG,QAAa,uBAAb,cAA0C,WAAA,YAAW;MACnD,YAAY,SAAgC,QAAkC;AAC5E,cAAM,OAAO;AACb,cAAM,EAAE,UAAU,eAAe,SAAS,KAAI,IAAK;AAEnD,cAAM,OAAO,yBAAyB,UAAS;AAE/C,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ,YAAA;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAxCF,YAAA,uBAAA;;;;;;;;;;ACjBA,QAAA,aAAA;AACA,QAAA,YAAA;AACA,QAAA,oBAAA;AAEA,QAAa,gCAAb,cAAmD,WAAA,MAAM,KAAI;MAA7D,cAAA;;AAGE,aAAA,cAAc;MAChB;;AAJA,YAAA,gCAAA;AACkB,kCAAA,SAAS,8BAA8B,OAAO,CAAC,CAAC,eAAe,IAAI,CAAC,CAAC;AAUvF,QAAa,4BAAb,cAA+C,WAAA,YAAW;MACxD,YAAY,SAAgC,QAAuC;AACjF,cAAM,OAAO;AACb,cAAM,EAAE,UAAU,QAAO,IAAK;AAE9B,cAAM,OAAO,8BAA8B,UAAS;AAEpD,aAAK,IACH,IAAI,UAAA,uBAAuB;UACzB,MAAM;YACJ;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;YAEd;cACE,QAAQ;cACR,UAAU;cACV,YAAY;;;UAGhB,WAAW,kBAAA,gBAAgB;UAC3B;SACD,CAAC;MAEN;;AAzBF,YAAA,4BAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACfA,iBAAA,0BAAA,OAAA;AACA,iBAAA,0BAAA,OAAA;AACA,iBAAA,+BAAA,OAAA;AACA,iBAAA,mDAAA,OAAA;AACA,iBAAA,6CAAA,OAAA;AACA,iBAAA,wBAAA,OAAA;AACA,iBAAA,4BAAA,OAAA;AACA,iBAAA,4BAAA,OAAA;AACA,iBAAA,iCAAA,OAAA;AACA,iBAAA,4BAAA,OAAA;AACA,iBAAA,8BAAA,OAAA;AACA,iBAAA,wBAAA,OAAA;AACA,iBAAA,kCAAA,OAAA;AACA,iBAAA,+BAAA,OAAA;AACA,iBAAA,8BAAA,OAAA;AACA,iBAAA,sCAAA,OAAA;AACA,iBAAA,qCAAA,OAAA;AACA,iBAAA,mBAAA,OAAA;AACA,iBAAA,kCAAA,OAAA;AACA,iBAAA,gCAAA,OAAA;AACA,iBAAA,qCAAA,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA,iBAAA,qBAAA,OAAA;AACA,iBAAA,2BAAA,OAAA;AACA,iBAAA,wBAAA,OAAA;;;;;ACFA,IAAO,iDAAQ;",
  "names": ["MetadataKey", "UseMethod", "TokenStandard", "ieee754", "Buffer", "byteLength", "compare", "buffer", "inspect", "i", "code", "getMessage", "ErrorCode", "inspect", "isBuffer", "global", "utilInspect", "self", "sendAndConfirmTransaction", "title", "connection", "transaction", "signers", "realSendAndConfirmTransaction", "skipPreflight", "pubkeyToBuffer", "publicKey", "Buffer", "from", "toBuffer", "isAccount", "accountOrPublicKey", "Boolean", "uint64", "TOKEN_PROGRAM_ID", "ASSOCIATED_TOKEN_PROGRAM_ID", "FAILED_TO_FIND_ACCOUNT", "INVALID_ACCOUNT_OWNER", "u64", "AuthorityTypeCodes", "NATIVE_MINT", "MintLayout", "AccountLayout", "MultisigLayout", "Token", "buffer", "require$$0", "ieee754", "require$$1", "byteLength", "compare", "i", "code", "getMessage", "inherits", "span", "property", "BufferLayout", "PublicKey", "BN", "a", "toArray", "reverse", "b", "length", "assert", "zeroPad", "alloc", "copy", "fromBuffer", "map", "toString", "slice", "join", "MintTokens", "FreezeAccount", "AccountOwner", "CloseAccount", "Layout", "constructor", "programId", "payer", "Object", "assign", "associatedProgramId", "getMinBalanceRentForExemptMint", "getMinimumBalanceForRentExemption", "getMinBalanceRentForExemptAccount", "getMinBalanceRentForExemptMultisig", "createMint", "mintAuthority", "freezeAuthority", "decimals", "mintAccount", "Keypair", "generate", "token", "balanceNeeded", "Transaction", "add", "SystemProgram", "createAccount", "fromPubkey", "newAccountPubkey", "lamports", "space", "createInitMintInstruction", "owner", "newAccount", "mintPublicKey", "createInitAccountInstruction", "createAssociatedTokenAccount", "associatedAddress", "getAssociatedTokenAddress", "createAssociatedTokenAccountInternal", "createAssociatedTokenAccountInstruction", "getOrCreateAssociatedAccountInfo", "getAccountInfo", "err", "message", "createWrappedNativeAccount", "amount", "transfer", "toPubkey", "createMultisig", "m", "multisigAccount", "keys", "pubkey", "isSigner", "isWritable", "SYSVAR_RENT_PUBKEY", "forEach", "signer", "push", "dataLayout", "data", "encode", "instruction", "getMintInfo", "info", "Error", "equals", "JSON", "stringify", "mintInfo", "decode", "mintAuthorityOption", "supply", "isInitialized", "freezeAuthorityOption", "account", "commitment", "accountInfo", "address", "mint", "delegateOption", "delegate", "delegatedAmount", "state", "isFrozen", "isNativeOption", "rentExemptReserve", "isNative", "closeAuthorityOption", "closeAuthority", "getMultisigInfo", "multisig", "multisigInfo", "signer1", "signer2", "signer3", "signer4", "signer5", "signer6", "signer7", "signer8", "signer9", "signer10", "signer11", "source", "destination", "multiSigners", "ownerPublicKey", "createTransferInstruction", "approve", "createApproveInstruction", "revoke", "createRevokeInstruction", "setAuthority", "newAuthority", "authorityType", "currentAuthority", "currentAuthorityPublicKey", "createSetAuthorityInstruction", "mintTo", "dest", "authority", "createMintToInstruction", "burn", "createBurnInstruction", "closeAccount", "authorityPublicKey", "createCloseAccountInstruction", "freezeAccount", "createFreezeAccountInstruction", "thawAccount", "createThawAccountInstruction", "transferChecked", "createTransferCheckedInstruction", "approveChecked", "createApproveCheckedInstruction", "mintToChecked", "createMintToCheckedInstruction", "burnChecked", "createBurnCheckedInstruction", "syncNative", "nativeAccount", "createSyncNativeInstruction", "commandDataLayout", "encodeLength", "option", "TransactionInstruction", "allowOwnerOffCurve", "isOnCurve", "findProgramAddress", "associatedAccount", "Transaction", "struct", "TupleNumericType"]
}
