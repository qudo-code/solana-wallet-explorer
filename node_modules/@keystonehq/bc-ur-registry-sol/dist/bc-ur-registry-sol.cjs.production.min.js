"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("@keystonehq/bc-ur-registry"),e=require("uuid");const s={SOL_SIGN_REQUEST:new t.RegistryType("sol-sign-request",1101),SOL_SIGNATURE:new t.RegistryType("sol-signature",1102),SOL_NFT_ITEM:new t.RegistryType("sol-nft-item",1104)},{decodeToDataItem:i,RegistryTypes:a}=t.extend;var r,n;(r=exports.SignType||(exports.SignType={}))[r.Transaction=1]="Transaction",r[r.Message=2]="Message",function(t){t[t.requestId=1]="requestId",t[t.signData=2]="signData",t[t.derivationPath=3]="derivationPath",t[t.address=4]="address",t[t.origin=5]="origin",t[t.signType=6]="signType"}(n||(n={}));class o extends t.RegistryItem{constructor(e){super(),this.getRegistryType=()=>s.SOL_SIGN_REQUEST,this.getRequestId=()=>this.requestId,this.getSignData=()=>this.signData,this.getDerivationPath=()=>this.derivationPath.getPath(),this.getSignRequestAddress=()=>this.address,this.getOrigin=()=>this.origin,this.getSignType=()=>this.signType,this.toDataItem=()=>{const e={};this.requestId&&(e[n.requestId]=new t.DataItem(this.requestId,a.UUID.getTag())),this.address&&(e[n.address]=this.address),this.origin&&(e[n.origin]=this.origin),e[n.signData]=this.signData,e[n.signType]=this.signType;const s=this.derivationPath.toDataItem();return s.setTag(this.derivationPath.getRegistryType().getTag()),e[n.derivationPath]=s,new t.DataItem(e)},this.requestId=e.requestId,this.signData=e.signData,this.derivationPath=e.derivationPath,this.address=e.address,this.origin=e.origin,this.signType=e.signType}static constructSOLRequest(s,i,a,r,n,d,g){const m=i.replace(/[m|M]\//,"").split("/"),h=new t.CryptoKeypath(m.map(e=>{const s=parseInt(e.replace("'",""));let i=!1;return e.endsWith("'")&&(i=!0),new t.PathComponent({index:s,hardened:i})}),Buffer.from(a,"hex"));return new o({requestId:n?Buffer.from(e.parse(n)):void 0,signData:s,derivationPath:h,address:d?Buffer.from(d.replace("0x",""),"hex"):void 0,origin:g||void 0,signType:r})}}o.fromDataItem=e=>{const s=e.getData(),i=s[n.signData],a=t.CryptoKeypath.fromDataItem(s[n.derivationPath]),r=s[n.address]?s[n.address]:void 0,d=s[n.requestId]?s[n.requestId].getData():void 0;return new o({requestId:d,signData:i,derivationPath:a,address:r,origin:s[n.origin]?s[n.origin]:void 0,signType:s[n.signType]})},o.fromCBOR=t=>{const e=i(t);return o.fromDataItem(e)};const{RegistryTypes:d,decodeToDataItem:g}=t.extend;var m;!function(t){t[t.requestId=1]="requestId",t[t.signature=2]="signature"}(m||(m={}));class h extends t.RegistryItem{constructor(e,i){super(),this.getRegistryType=()=>s.SOL_SIGNATURE,this.getRequestId=()=>this.requestId,this.getSignature=()=>this.signature,this.toDataItem=()=>{const e={};return this.requestId&&(e[m.requestId]=new t.DataItem(this.requestId,d.UUID.getTag())),e[m.signature]=this.signature,new t.DataItem(e)},this.signature=e,this.requestId=i}}h.fromDataItem=t=>{const e=t.getData(),s=e[m.signature],i=e[m.requestId]?e[m.requestId].getData():void 0;return new h(s,i)},h.fromCBOR=t=>{const e=g(t);return h.fromDataItem(e)};const{decodeToDataItem:u}=t.extend;var c;!function(t){t[t.mintAddress=1]="mintAddress",t[t.collectionName=2]="collectionName",t[t.name=3]="name",t[t.mediaData=4]="mediaData"}(c||(c={}));class I extends t.RegistryItem{constructor(e){super(),this.getRegistryType=()=>s.SOL_NFT_ITEM,this.getName=()=>this.name,this.getMediaData=()=>this.mediaData,this.getMintAddress=()=>this.mintAddress,this.getCollectionName=()=>this.collectionName,this.toDataItem=()=>{const e={};return e[c.name]=this.name,e[c.mintAddress]=this.mintAddress,e[c.collectionName]=this.collectionName,e[c.mediaData]=this.mediaData,new t.DataItem(e)},this.name=e.name,this.mintAddress=e.mintAddress,this.collectionName=e.collectionName,this.mediaData=e.mediaData}static constructETHNFTItem(t,e,s,i){return new I({mintAddress:t,collectionName:e,mediaData:i,name:s})}}I.fromDataItem=t=>{const e=t.getData();return new I({name:e[c.name],mintAddress:e[c.mintAddress],collectionName:e[c.collectionName],mediaData:e[c.mediaData]})},I.fromCBOR=t=>{const e=u(t);return I.fromDataItem(e)},t.patchTags(Object.values(s).filter(t=>!!t.getTag()).map(t=>t.getTag())),Object.keys(t).forEach((function(e){"default"!==e&&Object.defineProperty(exports,e,{enumerable:!0,get:function(){return t[e]}})})),exports.SOLNFTItem=I,exports.SolSignRequest=o,exports.SolSignature=h;
//# sourceMappingURL=bc-ur-registry-sol.cjs.production.min.js.map
