{"version":3,"file":"AuctionHouseClient.cjs","sources":["../../../../src/plugins/auctionHouseModule/AuctionHouseClient.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport { now, Signer } from '@/types';\nimport { Task } from '@/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { AuctionHouse } from './AuctionHouse';\nimport {\n  CreateListingInput,\n  createListingOperation,\n  CreateListingOutput,\n} from './createListing';\nimport {\n  FindListingByAddressInput,\n  findListingByAddressOperation,\n} from './findListingByAddress';\nimport { LazyListing, Listing } from './Listing';\nimport { LoadListingInput, loadListingOperation } from './loadListing';\nimport {\n  CreateBidInput,\n  createBidOperation,\n  CreateBidOutput,\n} from './createBid';\nimport {\n  findBidByReceiptOperation,\n  FindBidByReceiptInput,\n} from './findBidByReceipt';\nimport {\n  FindBidByTradeStateInput,\n  findBidByTradeStateOperation,\n} from './findBidByTradeState';\nimport { Bid, LazyBid } from './Bid';\nimport { LoadBidInput, loadBidOperation } from './loadBid';\nimport {\n  ExecuteSaleInput,\n  executeSaleOperation,\n  ExecuteSaleOutput,\n} from './executeSale';\nimport {\n  FindPurchaseByAddressInput,\n  findPurchaseByAddressOperation,\n} from './findPurchaseByAddress';\nimport { LazyPurchase, Purchase } from './Purchase';\nimport { LoadPurchaseInput, loadPurchaseOperation } from './loadPurchase';\nimport {\n  CancelBidInput,\n  cancelBidOperation,\n  CancelBidOutput,\n} from './cancelBid';\nimport {\n  CancelListingInput,\n  cancelListingOperation,\n  CancelListingOutput,\n} from './cancelListing';\n\ntype WithoutAH<T> = Omit<T, 'auctionHouse' | 'auctioneerAuthority'>;\n\n/**\n * @group Modules\n */\nexport class AuctionHouseClient {\n  constructor(\n    protected readonly metaplex: Metaplex,\n    protected readonly auctionHouse: AuctionHouse,\n    protected readonly auctioneerAuthority?: Signer\n  ) {}\n\n  cancelBid(input: WithoutAH<CancelBidInput>): Task<CancelBidOutput> {\n    return this.metaplex\n      .operations()\n      .getTask(cancelBidOperation(this.addAH(input)));\n  }\n\n  cancelListing(\n    input: WithoutAH<CancelListingInput>\n  ): Task<CancelListingOutput> {\n    return this.metaplex\n      .operations()\n      .getTask(cancelListingOperation(this.addAH(input)));\n  }\n\n  executeSale(\n    input: WithoutAH<ExecuteSaleInput>\n  ): Task<ExecuteSaleOutput & { purchase: Purchase }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .execute(executeSaleOperation(this.addAH(input)));\n      scope.throwIfCanceled();\n\n      try {\n        const purchase = await this.findPurchaseByAddress(\n          output.sellerTradeState,\n          output.buyerTradeState\n        ).run(scope);\n        return { purchase, ...output };\n      } catch (error) {\n        // Fallback to manually creating a purchase from inputs and outputs.\n      }\n\n      const lazyPurchase: LazyPurchase = {\n        model: 'purchase',\n        lazy: true,\n        auctionHouse: this.auctionHouse,\n        buyerAddress: output.buyer,\n        sellerAddress: output.seller,\n        metadataAddress: output.metadata,\n        bookkeeperAddress: output.bookkeeper,\n        receiptAddress: output.receipt,\n        price: output.price,\n        tokens: output.tokens.basisPoints,\n        createdAt: now(),\n      };\n\n      return {\n        purchase: await this.loadPurchase(lazyPurchase).run(scope),\n        ...output,\n      };\n    });\n  }\n\n  findPurchaseByAddress(\n    sellerTradeState: PublicKey,\n    buyerTradeState: PublicKey,\n    options: Omit<\n      FindPurchaseByAddressInput,\n      'sellerTradeState' | 'buyerTradeState' | 'auctionHouse'\n    > = {}\n  ) {\n    return this.metaplex.operations().getTask(\n      findPurchaseByAddressOperation({\n        sellerTradeState,\n        buyerTradeState,\n        auctionHouse: this.auctionHouse,\n        ...options,\n      })\n    );\n  }\n\n  loadPurchase(\n    lazyPurchase: LazyPurchase,\n    options: Omit<LoadPurchaseInput, 'lazyPurchase'> = {}\n  ): Task<Purchase> {\n    return this.metaplex\n      .operations()\n      .getTask(loadPurchaseOperation({ lazyPurchase, ...options }));\n  }\n\n  list(\n    input: WithoutAH<CreateListingInput>\n  ): Task<CreateListingOutput & { listing: Listing }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .execute(createListingOperation(this.addAH(input)), scope);\n      scope.throwIfCanceled();\n\n      try {\n        const listing = await this.findListingByAddress(\n          output.sellerTradeState\n        ).run(scope);\n        return { listing, ...output };\n      } catch (error) {\n        // Fallback to manually creating a listing from inputs and outputs.\n      }\n\n      scope.throwIfCanceled();\n      const lazyListing: LazyListing = {\n        model: 'listing',\n        lazy: true,\n        auctionHouse: this.auctionHouse,\n        tradeStateAddress: output.sellerTradeState,\n        bookkeeperAddress: output.bookkeeper,\n        sellerAddress: output.seller,\n        metadataAddress: output.metadata,\n        receiptAddress: output.receipt,\n        purchaseReceiptAddress: null,\n        price: output.price,\n        tokens: output.tokens.basisPoints,\n        createdAt: now(),\n        canceledAt: null,\n      };\n\n      return {\n        listing: await this.loadListing(lazyListing).run(scope),\n        ...output,\n      };\n    });\n  }\n\n  findListingByAddress(\n    address: PublicKey,\n    options: Omit<FindListingByAddressInput, 'address' | 'auctionHouse'> = {}\n  ) {\n    return this.metaplex.operations().getTask(\n      findListingByAddressOperation({\n        address,\n        auctionHouse: this.auctionHouse,\n        ...options,\n      })\n    );\n  }\n\n  loadListing(\n    lazyListing: LazyListing,\n    options: Omit<LoadListingInput, 'lazyListing'> = {}\n  ): Task<Listing> {\n    return this.metaplex\n      .operations()\n      .getTask(loadListingOperation({ lazyListing, ...options }));\n  }\n\n  bid(input: WithoutAH<CreateBidInput>): Task<CreateBidOutput & { bid: Bid }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .execute(createBidOperation(this.addAH(input)), scope);\n      scope.throwIfCanceled();\n\n      if (output.receipt) {\n        const bid = await this.findBidByReceipt(output.receipt).run(scope);\n        return { bid, ...output };\n      }\n\n      scope.throwIfCanceled();\n      const lazyBid: LazyBid = {\n        model: 'bid',\n        lazy: true,\n        auctionHouse: this.auctionHouse,\n        tradeStateAddress: output.buyerTradeState,\n        bookkeeperAddress: output.bookkeeper,\n        tokenAddress: output.tokenAccount,\n        buyerAddress: output.buyer,\n        metadataAddress: output.metadata,\n        receiptAddress: output.receipt,\n        purchaseReceiptAddress: null,\n        isPublic: Boolean(output.tokenAccount),\n        price: output.price,\n        tokens: output.tokens.basisPoints,\n        createdAt: now(),\n        canceledAt: null,\n      };\n\n      return {\n        bid: await this.loadBid(lazyBid).run(scope),\n        ...output,\n      };\n    });\n  }\n\n  findBidByReceipt(\n    receiptAddress: PublicKey,\n    options: Omit<FindBidByReceiptInput, 'receiptAddress' | 'auctionHouse'> = {}\n  ) {\n    return this.metaplex.operations().getTask(\n      findBidByReceiptOperation({\n        receiptAddress,\n        auctionHouse: this.auctionHouse,\n        ...options,\n      })\n    );\n  }\n\n  findBidByTradeState(\n    tradeStateAddress: PublicKey,\n    options: Omit<\n      FindBidByTradeStateInput,\n      'tradeStateAddress' | 'auctionHouse'\n    > = {}\n  ) {\n    return this.metaplex.operations().getTask(\n      findBidByTradeStateOperation({\n        tradeStateAddress,\n        auctionHouse: this.auctionHouse,\n        ...options,\n      })\n    );\n  }\n\n  loadBid(\n    lazyBid: LazyBid,\n    options: Omit<LoadBidInput, 'lazyBid'> = {}\n  ): Task<Bid> {\n    return this.metaplex\n      .operations()\n      .getTask(loadBidOperation({ lazyBid, ...options }));\n  }\n\n  protected addAH<T>(input: WithoutAH<T>): T {\n    return {\n      auctionHouse: this.auctionHouse,\n      auctioneerAuthority: this.auctioneerAuthority,\n      ...input,\n    } as unknown as T;\n  }\n}\n"],"names":["AuctionHouseClient","constructor","metaplex","auctionHouse","auctioneerAuthority","cancelBid","input","operations","getTask","cancelBidOperation","addAH","cancelListing","cancelListingOperation","executeSale","Task","scope","output","execute","executeSaleOperation","throwIfCanceled","purchase","findPurchaseByAddress","sellerTradeState","buyerTradeState","run","error","lazyPurchase","model","lazy","buyerAddress","buyer","sellerAddress","seller","metadataAddress","metadata","bookkeeperAddress","bookkeeper","receiptAddress","receipt","price","tokens","basisPoints","createdAt","now","loadPurchase","options","findPurchaseByAddressOperation","loadPurchaseOperation","list","createListingOperation","listing","findListingByAddress","lazyListing","tradeStateAddress","purchaseReceiptAddress","canceledAt","loadListing","address","findListingByAddressOperation","loadListingOperation","bid","createBidOperation","findBidByReceipt","lazyBid","tokenAddress","tokenAccount","isPublic","Boolean","loadBid","findBidByReceiptOperation","findBidByTradeState","findBidByTradeStateOperation","loadBidOperation"],"mappings":"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"}