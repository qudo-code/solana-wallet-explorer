{"version":3,"file":"findPurchaseByAddress.cjs","sources":["../../../../src/plugins/auctionHouseModule/findPurchaseByAddress.ts"],"sourcesContent":["import type { Commitment, PublicKey } from '@solana/web3.js';\nimport type { Metaplex } from '@/Metaplex';\nimport { useOperation, Operation, OperationHandler } from '@/types';\nimport { toPurchaseReceiptAccount } from './accounts';\nimport { AuctionHouse } from './AuctionHouse';\nimport { DisposableScope } from '@/utils';\nimport { Purchase, toLazyPurchase } from './Purchase';\nimport { findPurchaseReceiptPda } from './pdas';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindPurchaseByAddressOperation' as const;\n\n/**\n * @group Operations\n * @category Constructors\n */\nexport const findPurchaseByAddressOperation =\n  useOperation<FindPurchaseByAddressOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindPurchaseByAddressOperation = Operation<\n  typeof Key,\n  FindPurchaseByAddressInput,\n  Purchase\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindPurchaseByAddressInput = {\n  sellerTradeState: PublicKey;\n  buyerTradeState: PublicKey;\n  auctionHouse: AuctionHouse;\n  loadJsonMetadata?: boolean; // Default: true\n  commitment?: Commitment;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findPurchaseByAddressOperationHandler: OperationHandler<FindPurchaseByAddressOperation> =\n  {\n    handle: async (\n      operation: FindPurchaseByAddressOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ) => {\n      const {\n        sellerTradeState,\n        buyerTradeState,\n        auctionHouse,\n        commitment,\n        loadJsonMetadata = true,\n      } = operation.input;\n\n      const receiptAddress = findPurchaseReceiptPda(\n        sellerTradeState,\n        buyerTradeState\n      );\n      const account = toPurchaseReceiptAccount(\n        await metaplex.rpc().getAccount(receiptAddress, commitment)\n      );\n      scope.throwIfCanceled();\n\n      const lazyPurchase = toLazyPurchase(account, auctionHouse);\n      return metaplex\n        .auctions()\n        .for(auctionHouse)\n        .loadPurchase(lazyPurchase, { loadJsonMetadata, commitment })\n        .run(scope);\n    },\n  };\n"],"names":["Key","findPurchaseByAddressOperation","useOperation","findPurchaseByAddressOperationHandler","handle","operation","metaplex","scope","sellerTradeState","buyerTradeState","auctionHouse","commitment","loadJsonMetadata","input","receiptAddress","findPurchaseReceiptPda","account","toPurchaseReceiptAccount","rpc","getAccount","throwIfCanceled","lazyPurchase","toLazyPurchase","auctions","for","loadPurchase","run"],"mappings":";;;;;;;;;AAUA;AACA;;AAEA,MAAMA,GAAG,GAAG,gCAAZ,CAAA;AAEA;AACA;AACA;AACA;;MACaC,8BAA8B,GACzCC,sBAAY,CAAiCF,GAAjC,EADP;AAGP;AACA;AACA;AACA;;AAmBA;AACA;AACA;AACA;AACO,MAAMG,qCAAuF,GAClG;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MACJC,gBADI;MAEJC,eAFI;MAGJC,YAHI;MAIJC,UAJI;AAKJC,MAAAA,gBAAgB,GAAG,IAAA;KACjBP,GAAAA,SAAS,CAACQ,KANd,CAAA;AAQA,IAAA,MAAMC,cAAc,GAAGC,2BAAsB,CAC3CP,gBAD2C,EAE3CC,eAF2C,CAA7C,CAAA;AAIA,IAAA,MAAMO,OAAO,GAAGC,iCAAwB,CACtC,MAAMX,QAAQ,CAACY,GAAT,EAAA,CAAeC,UAAf,CAA0BL,cAA1B,EAA0CH,UAA1C,CADgC,CAAxC,CAAA;AAGAJ,IAAAA,KAAK,CAACa,eAAN,EAAA,CAAA;AAEA,IAAA,MAAMC,YAAY,GAAGC,uBAAc,CAACN,OAAD,EAAUN,YAAV,CAAnC,CAAA;IACA,OAAOJ,QAAQ,CACZiB,QADI,EAEJC,CAAAA,GAFI,CAEAd,YAFA,CAGJe,CAAAA,YAHI,CAGSJ,YAHT,EAGuB;MAAET,gBAAF;AAAoBD,MAAAA,UAAAA;AAApB,KAHvB,CAIJe,CAAAA,GAJI,CAIAnB,KAJA,CAAP,CAAA;AAKD,GAAA;AA7BH;;;;;"}