{"version":3,"file":"errors.cjs","sources":["../../../../src/plugins/candyMachineModule/errors.ts"],"sourcesContent":["import {\n  MetaplexError,\n  MetaplexErrorInputWithoutSource,\n  MetaplexErrorOptions,\n} from '@/errors';\nimport { CandyMachineItem, CandyMachineEndSettings } from './models';\nimport { BigNumber, DateTime, formatDateTime } from '@/types';\nimport { Option } from '@/utils';\nimport { EndSettingType } from '@metaplex-foundation/mpl-candy-machine';\n\n/** @group Errors */\nexport class CandyMachineError extends MetaplexError {\n  constructor(input: MetaplexErrorInputWithoutSource) {\n    super({\n      ...input,\n      key: `plugin.candy_machine.${input.key}`,\n      title: `Candy Machine > ${input.title}`,\n      source: 'plugin',\n      sourceDetails: 'Candy Machine',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineIsFullError extends CandyMachineError {\n  constructor(\n    assetIndex: BigNumber,\n    itemsAvailable: BigNumber,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'candy_machine_is_full',\n      title: 'Candy Machine Is Full',\n      problem:\n        `Trying to add asset number ${assetIndex.addn(1)}, but ` +\n        `candy machine only can hold ${itemsAvailable} assets.`,\n      solution:\n        'Limit number of assets you are adding or create a new Candy Machine that can hold more.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineIsEmptyError extends CandyMachineError {\n  constructor(itemsAvailable: BigNumber, options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'candy_machine_is_empty',\n      title: 'Candy Machine Is Empty',\n      problem:\n        `You're trying to mint from an empty candy machine. ` +\n        `All ${itemsAvailable} items have been minted.`,\n      solution: 'You can no longer mint from this Candy Machine.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineCannotAddAmountError extends CandyMachineError {\n  constructor(\n    index: BigNumber,\n    amount: number,\n    itemsAvailable: BigNumber,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'candy_machine_cannot_add_amount',\n      title: 'Candy Machine Cannot Add Amount',\n      problem: `Trying to add ${amount} assets to candy machine that already has ${index} assets and can only hold ${itemsAvailable} assets.`,\n      solution:\n        'Limit number of assets you are adding or create a new Candy Machine that can hold more.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineAddItemConstraintsViolatedError extends CandyMachineError {\n  constructor(\n    index: BigNumber,\n    item: CandyMachineItem,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'candy_machine_add_item_constraints_violated',\n      title: 'Candy Machine Add Item Constraints Violated',\n      problem: `Trying to add an asset with name \"${item.name}\" and uri: \"${item.uri}\" to candy machine at index ${index} that violates constraints.`,\n      solution: 'Fix the name or URI of this asset and try again.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineNotLiveError extends CandyMachineError {\n  constructor(goLiveDate: Option<DateTime>, options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'candy_machine_not_live',\n      title: 'Candy Machine Not Live',\n      problem:\n        `You're trying to mint from a Candy Machine which is not live yet. ` +\n        (goLiveDate\n          ? `It will go live on ${formatDateTime(goLiveDate)}.`\n          : `Its live date has not been set yet.`),\n      solution:\n        'You need to wait until the Candy Machine is live to mint from it. ' +\n        'If this is your Candy Machine, use \"metaplex.candyMachines().update(...)\" to set the live date. ' +\n        'Note that the authority of the Candy Machine can mint regardless of the live date.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineEndedError extends CandyMachineError {\n  constructor(\n    endSetting: CandyMachineEndSettings,\n    options?: MetaplexErrorOptions\n  ) {\n    const endSettingType =\n      endSetting.endSettingType === EndSettingType.Amount ? 'Amount' : 'Date';\n    const endSettingExplanation =\n      endSetting.endSettingType === EndSettingType.Amount\n        ? `All ${endSetting.number} items have been minted.`\n        : `It ended on ${formatDateTime(endSetting.date)}.`;\n    super({\n      options,\n      key: 'candy_machine_ended',\n      title: 'Candy Machine Ended',\n      problem:\n        `The end condition [${endSettingType}] of this Candy Machine has been reached. ` +\n        endSettingExplanation,\n      solution: 'You can no longer mint from this Candy Machine.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineBotTaxError extends CandyMachineError {\n  constructor(\n    explorerLink: string,\n    cause: Error,\n    options?: Omit<MetaplexErrorOptions, 'cause'>\n  ) {\n    super({\n      options: { ...options, cause },\n      key: 'candy_machine_bot_tax',\n      title: 'Candy Machine Bot Tax',\n      problem:\n        `The NFT couldn't be fetched after being minted. ` +\n        `This is most likely due to a bot tax that occured during minting. ` +\n        `When someone tries to mint an NFT from a Candy Machine which cannot be minted from, ` +\n        `the program will succeed and charge a small tax to fight against bots.`,\n      solution:\n        `Ensure you can mint from the Candy Machine. ` +\n        `You may want to check the transaction logs for more details: [${explorerLink}].`,\n    });\n  }\n}\n"],"names":["CandyMachineError","MetaplexError","constructor","input","key","title","source","sourceDetails","CandyMachineIsFullError","assetIndex","itemsAvailable","options","problem","addn","solution","CandyMachineIsEmptyError","CandyMachineCannotAddAmountError","index","amount","CandyMachineAddItemConstraintsViolatedError","item","name","uri","CandyMachineNotLiveError","goLiveDate","formatDateTime","CandyMachineEndedError","endSetting","endSettingType","EndSettingType","Amount","endSettingExplanation","number","date","CandyMachineBotTaxError","explorerLink","cause"],"mappings":"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"}