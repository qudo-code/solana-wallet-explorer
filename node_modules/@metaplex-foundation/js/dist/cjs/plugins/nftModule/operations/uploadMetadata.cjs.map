{"version":3,"file":"uploadMetadata.cjs","sources":["../../../../../src/plugins/nftModule/operations/uploadMetadata.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport { Operation, OperationHandler, useOperation } from '@/types';\nimport { DisposableScope, walk } from '@/utils';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isMetaplexFile, MetaplexFile } from '../../storageModule';\nimport { JsonMetadata } from '../models';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'UploadMetadataOperation' as const;\n\n/**\n * @group Operations\n * @category Constructors\n */\nexport const uploadMetadataOperation =\n  useOperation<UploadMetadataOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type UploadMetadataOperation = Operation<\n  typeof Key,\n  UploadMetadataInput,\n  UploadMetadataOutput\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type UploadMetadataInput = JsonMetadata<MetaplexFile | string>;\n\n/**\n * @group Operations\n * @category Outputs\n */\nexport type UploadMetadataOutput = {\n  metadata: JsonMetadata;\n  assetUris: string[];\n  uri: string;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const uploadMetadataOperationHandler: OperationHandler<UploadMetadataOperation> =\n  {\n    handle: async (\n      operation: UploadMetadataOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ): Promise<UploadMetadataOutput> => {\n      const rawMetadata = operation.input;\n      const files = getAssetsFromJsonMetadata(rawMetadata);\n      const assetUris = await metaplex.storage().uploadAll(files);\n      scope.throwIfCanceled();\n\n      const metadata = replaceAssetsWithUris(rawMetadata, assetUris);\n      const uri = await metaplex.storage().uploadJson(metadata);\n\n      return { uri, metadata, assetUris };\n    },\n  };\n\nexport const getAssetsFromJsonMetadata = (\n  input: UploadMetadataInput\n): MetaplexFile[] => {\n  const files: MetaplexFile[] = [];\n\n  walk(input, (next, value) => {\n    if (isMetaplexFile(value)) {\n      files.push(value);\n    } else {\n      next(value);\n    }\n  });\n\n  return files;\n};\n\nexport const replaceAssetsWithUris = (\n  input: UploadMetadataInput,\n  replacements: string[]\n): JsonMetadata => {\n  const clone = cloneDeep(input);\n  let index = 0;\n\n  walk(clone, (next, value, key, parent) => {\n    if (isMetaplexFile(value) && index < replacements.length) {\n      parent[key] = replacements[index++];\n    }\n\n    next(value);\n  });\n\n  return clone as JsonMetadata;\n};\n"],"names":["Key","uploadMetadataOperation","useOperation","uploadMetadataOperationHandler","handle","operation","metaplex","scope","rawMetadata","input","files","getAssetsFromJsonMetadata","assetUris","storage","uploadAll","throwIfCanceled","metadata","replaceAssetsWithUris","uri","uploadJson","walk","next","value","isMetaplexFile","push","replacements","clone","cloneDeep","index","key","parent","length"],"mappings":";;;;;;;;;;;;;AAOA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,yBAAZ,CAAA;AAEA;AACA;AACA;AACA;;MACaC,uBAAuB,GAClCC,sBAAY,CAA0BF,GAA1B,EADP;AAGP;AACA;AACA;AACA;;AAuBA;AACA;AACA;AACA;AACO,MAAMG,8BAAyE,GACpF;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAI4B;AAClC,IAAA,MAAMC,WAAW,GAAGH,SAAS,CAACI,KAA9B,CAAA;AACA,IAAA,MAAMC,KAAK,GAAGC,yBAAyB,CAACH,WAAD,CAAvC,CAAA;IACA,MAAMI,SAAS,GAAG,MAAMN,QAAQ,CAACO,OAAT,EAAmBC,CAAAA,SAAnB,CAA6BJ,KAA7B,CAAxB,CAAA;AACAH,IAAAA,KAAK,CAACQ,eAAN,EAAA,CAAA;AAEA,IAAA,MAAMC,QAAQ,GAAGC,qBAAqB,CAACT,WAAD,EAAcI,SAAd,CAAtC,CAAA;IACA,MAAMM,GAAG,GAAG,MAAMZ,QAAQ,CAACO,OAAT,EAAmBM,CAAAA,UAAnB,CAA8BH,QAA9B,CAAlB,CAAA;IAEA,OAAO;MAAEE,GAAF;MAAOF,QAAP;AAAiBJ,MAAAA,SAAAA;KAAxB,CAAA;AACD,GAAA;AAfH,EADK;AAmBMD,MAAAA,yBAAyB,GACpCF,KADuC,IAEpB;EACnB,MAAMC,KAAqB,GAAG,EAA9B,CAAA;AAEAU,EAAAA,WAAI,CAACX,KAAD,EAAQ,CAACY,IAAD,EAAOC,KAAP,KAAiB;AAC3B,IAAA,IAAIC,2BAAc,CAACD,KAAD,CAAlB,EAA2B;MACzBZ,KAAK,CAACc,IAAN,CAAWF,KAAX,CAAA,CAAA;AACD,KAFD,MAEO;MACLD,IAAI,CAACC,KAAD,CAAJ,CAAA;AACD,KAAA;AACF,GANG,CAAJ,CAAA;AAQA,EAAA,OAAOZ,KAAP,CAAA;AACD,EAdM;MAgBMO,qBAAqB,GAAG,CACnCR,KADmC,EAEnCgB,YAFmC,KAGlB;AACjB,EAAA,MAAMC,KAAK,GAAGC,6BAAS,CAAClB,KAAD,CAAvB,CAAA;EACA,IAAImB,KAAK,GAAG,CAAZ,CAAA;EAEAR,WAAI,CAACM,KAAD,EAAQ,CAACL,IAAD,EAAOC,KAAP,EAAcO,GAAd,EAAmBC,MAAnB,KAA8B;IACxC,IAAIP,2BAAc,CAACD,KAAD,CAAd,IAAyBM,KAAK,GAAGH,YAAY,CAACM,MAAlD,EAA0D;MACxDD,MAAM,CAACD,GAAD,CAAN,GAAcJ,YAAY,CAACG,KAAK,EAAN,CAA1B,CAAA;AACD,KAAA;;IAEDP,IAAI,CAACC,KAAD,CAAJ,CAAA;AACD,GANG,CAAJ,CAAA;AAQA,EAAA,OAAOI,KAAP,CAAA;AACD;;;;;;;"}