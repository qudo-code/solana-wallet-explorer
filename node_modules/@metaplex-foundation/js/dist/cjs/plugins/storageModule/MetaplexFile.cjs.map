{"version":3,"file":"MetaplexFile.cjs","sources":["../../../../src/plugins/storageModule/MetaplexFile.ts"],"sourcesContent":["import { Buffer } from 'buffer';\nimport { getContentType, getExtension, randomStr } from '@/utils';\nimport { InvalidJsonVariableError } from '@/errors';\n\nexport type MetaplexFile = {\n  readonly buffer: Buffer;\n  readonly fileName: string;\n  readonly displayName: string;\n  readonly uniqueName: string;\n  readonly contentType: string | null;\n  readonly extension: string | null;\n  readonly tags: MetaplexFileTag[];\n};\n\nexport type MetaplexFileContent = string | Buffer | Uint8Array | ArrayBuffer;\n\nexport type MetaplexFileTag = { name: string; value: string };\n\nexport type MetaplexFileOptions = {\n  displayName?: string;\n  uniqueName?: string;\n  contentType?: string;\n  extension?: string;\n  tags?: { name: string; value: string }[];\n};\n\nexport const toMetaplexFile = (\n  content: MetaplexFileContent,\n  fileName: string,\n  options: MetaplexFileOptions = {}\n): MetaplexFile => ({\n  buffer: parseMetaplexFileContent(content),\n  fileName: fileName,\n  displayName: options.displayName ?? fileName,\n  uniqueName: options.uniqueName ?? randomStr(),\n  contentType: options.contentType ?? getContentType(fileName),\n  extension: options.extension ?? getExtension(fileName),\n  tags: options.tags ?? [],\n});\n\nexport const toMetaplexFileFromBrowser = async (\n  file: File,\n  options: MetaplexFileOptions = {}\n): Promise<MetaplexFile> => {\n  const buffer = await file.arrayBuffer();\n\n  return toMetaplexFile(buffer, file.name, options);\n};\n\nexport const toMetaplexFileFromJson = <T extends object = object>(\n  json: T,\n  fileName: string = 'inline.json',\n  options: MetaplexFileOptions = {}\n): MetaplexFile => {\n  let jsonString;\n\n  try {\n    jsonString = JSON.stringify(json);\n  } catch (error) {\n    throw new InvalidJsonVariableError({ cause: error as Error });\n  }\n\n  return toMetaplexFile(jsonString, fileName, options);\n};\n\nexport const parseMetaplexFileContent = (\n  content: MetaplexFileContent\n): Buffer => {\n  if (content instanceof ArrayBuffer) {\n    return Buffer.from(new Uint8Array(content));\n  }\n\n  return Buffer.from(content);\n};\n\nexport const getBytesFromMetaplexFiles = (...files: MetaplexFile[]): number =>\n  files.reduce((acc, file) => acc + file.buffer.byteLength, 0);\n\nexport const getBrowserFileFromMetaplexFile = (file: MetaplexFile): File =>\n  new File([file.buffer as BlobPart], file.fileName);\n\nexport const isMetaplexFile = (\n  metaplexFile: any\n): metaplexFile is MetaplexFile => {\n  return (\n    metaplexFile != null &&\n    typeof metaplexFile === 'object' &&\n    'buffer' in metaplexFile &&\n    'fileName' in metaplexFile &&\n    'displayName' in metaplexFile &&\n    'uniqueName' in metaplexFile &&\n    'contentType' in metaplexFile &&\n    'extension' in metaplexFile &&\n    'tags' in metaplexFile\n  );\n};\n"],"names":["toMetaplexFile","content","fileName","options","buffer","parseMetaplexFileContent","displayName","uniqueName","randomStr","contentType","getContentType","extension","getExtension","tags","toMetaplexFileFromBrowser","file","arrayBuffer","name","toMetaplexFileFromJson","json","jsonString","JSON","stringify","error","InvalidJsonVariableError","cause","ArrayBuffer","Buffer","from","Uint8Array","getBytesFromMetaplexFiles","files","reduce","acc","byteLength","getBrowserFileFromMetaplexFile","File","isMetaplexFile","metaplexFile"],"mappings":"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"}