{"version":3,"file":"TokenClient.cjs","sources":["../../../../src/plugins/tokenModule/TokenClient.ts"],"sourcesContent":["import type { Metaplex } from '@/Metaplex';\nimport {\n  ApproveTokenDelegateAuthorityInput,\n  approveTokenDelegateAuthorityOperation,\n  CreateMintInput,\n  createMintOperation,\n  CreateTokenInput,\n  createTokenOperation,\n  CreateTokenWithMintInput,\n  createTokenWithMintOperation,\n  FindMintByAddressInput,\n  findMintByAddressOperation,\n  FindTokenByAddressInput,\n  findTokenByAddressOperation,\n  FindTokenWithMintByAddressInput,\n  findTokenWithMintByAddressOperation,\n  FindTokenWithMintByMintInput,\n  findTokenWithMintByMintOperation,\n  FreezeTokensInput,\n  freezeTokensOperation,\n  MintTokensInput,\n  mintTokensOperation,\n  RevokeTokenDelegateAuthorityInput,\n  revokeTokenDelegateAuthorityOperation,\n  SendTokensInput,\n  sendTokensOperation,\n  ThawTokensInput,\n  thawTokensOperation,\n} from './operations';\nimport { TokenBuildersClient } from './TokenBuildersClient';\n\n/**\n * This is a client for the Token module.\n *\n * It enables us to interact with the SPL Token program in order to\n * create, send, freeze, thaw, and mint tokens.\n *\n * You may access this client via the `tokens()` method of your `Metaplex` instance.\n *\n * ```ts\n * const tokenClient = metaplex.tokens();\n * ```\n *\n * @example\n * You can create a new mint account with an associated token account like so.\n * The owner of this token account will, by default, be the current identity\n * of the metaplex instance.\n *\n * ```ts\n * const { token } = await metaplex.tokens().createTokenWithMint();\n * ```\n *\n * @group Modules\n */\nexport class TokenClient {\n  constructor(protected readonly metaplex: Metaplex) {}\n\n  /**\n   * You may use the `builders()` client to access the\n   * underlying Transaction Builders of this module.\n   */\n  builders() {\n    return new TokenBuildersClient(this.metaplex);\n  }\n\n  // -----------------\n  // Queries\n  // -----------------\n\n  /** {@inheritDoc findMintByAddressOperation} */\n  findMintByAddress(input: FindMintByAddressInput) {\n    return this.metaplex\n      .operations()\n      .getTask(findMintByAddressOperation(input));\n  }\n\n  /** {@inheritDoc findTokenByAddressOperation} */\n  findTokenByAddress(input: FindTokenByAddressInput) {\n    return this.metaplex\n      .operations()\n      .getTask(findTokenByAddressOperation(input));\n  }\n\n  /** {@inheritDoc findTokenWithMintByAddressOperation} */\n  findTokenWithMintByAddress(input: FindTokenWithMintByAddressInput) {\n    return this.metaplex\n      .operations()\n      .getTask(findTokenWithMintByAddressOperation(input));\n  }\n\n  /** {@inheritDoc findTokenWithMintByMintOperation} */\n  findTokenWithMintByMint(input: FindTokenWithMintByMintInput) {\n    return this.metaplex\n      .operations()\n      .getTask(findTokenWithMintByMintOperation(input));\n  }\n\n  // -----------------\n  // Create\n  // -----------------\n\n  /** {@inheritDoc createMintOperation} */\n  createMint(input?: CreateMintInput) {\n    return this.metaplex.operations().getTask(createMintOperation(input ?? {}));\n  }\n\n  /**\n   * Create a new Token account from the provided input\n   * and returns the newly created `Token` model.\n   */\n  /** {@inheritDoc createTokenOperation} */\n  createToken(input: CreateTokenInput) {\n    return this.metaplex.operations().getTask(createTokenOperation(input));\n  }\n\n  /** {@inheritDoc createTokenWithMintOperation} */\n  createTokenWithMint(input: CreateTokenWithMintInput = {}) {\n    return this.metaplex\n      .operations()\n      .getTask(createTokenWithMintOperation(input));\n  }\n\n  // -----------------\n  // Update\n  // -----------------\n\n  /** {@inheritDoc mintTokensOperation} */\n  mint(input: MintTokensInput) {\n    return this.metaplex.operations().getTask(mintTokensOperation(input));\n  }\n\n  /** {@inheritDoc sendTokensOperation} */\n  send(input: SendTokensInput) {\n    return this.metaplex.operations().getTask(sendTokensOperation(input));\n  }\n\n  /** {@inheritDoc freezeTokensOperation} */\n  freeze(input: FreezeTokensInput) {\n    return this.metaplex.operations().getTask(freezeTokensOperation(input));\n  }\n\n  /** {@inheritDoc thawTokensOperation} */\n  thaw(input: ThawTokensInput) {\n    return this.metaplex.operations().getTask(thawTokensOperation(input));\n  }\n\n  // -----------------\n  // Delegate\n  // -----------------\n\n  /** {@inheritDoc approveTokenDelegateAuthorityOperation} */\n  approveDelegateAuthority(input: ApproveTokenDelegateAuthorityInput) {\n    return this.metaplex\n      .operations()\n      .getTask(approveTokenDelegateAuthorityOperation(input));\n  }\n\n  /** {@inheritDoc revokeTokenDelegateAuthorityOperation} */\n  revokeDelegateAuthority(input: RevokeTokenDelegateAuthorityInput) {\n    return this.metaplex\n      .operations()\n      .getTask(revokeTokenDelegateAuthorityOperation(input));\n  }\n}\n"],"names":["TokenClient","constructor","metaplex","builders","TokenBuildersClient","findMintByAddress","input","operations","getTask","findMintByAddressOperation","findTokenByAddress","findTokenByAddressOperation","findTokenWithMintByAddress","findTokenWithMintByAddressOperation","findTokenWithMintByMint","findTokenWithMintByMintOperation","createMint","createMintOperation","createToken","createTokenOperation","createTokenWithMint","createTokenWithMintOperation","mint","mintTokensOperation","send","sendTokensOperation","freeze","freezeTokensOperation","thaw","thawTokensOperation","approveDelegateAuthority","approveTokenDelegateAuthorityOperation","revokeDelegateAuthority","revokeTokenDelegateAuthorityOperation"],"mappings":"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"}