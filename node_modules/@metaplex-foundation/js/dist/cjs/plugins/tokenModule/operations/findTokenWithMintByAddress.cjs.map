{"version":3,"file":"findTokenWithMintByAddress.cjs","sources":["../../../../../src/plugins/tokenModule/operations/findTokenWithMintByAddress.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport { Operation, OperationHandler, useOperation } from '@/types';\nimport type { Commitment, PublicKey } from '@solana/web3.js';\nimport { toMintAccount, toTokenAccount } from '../accounts';\nimport { toMint } from '../models/Mint';\nimport { TokenWithMint, toTokenWithMint } from '../models/Token';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindTokenWithMintByAddressOperation' as const;\n\n/**\n * @group Operations\n * @category Constructors\n */\nexport const findTokenWithMintByAddressOperation =\n  useOperation<FindTokenWithMintByAddressOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindTokenWithMintByAddressOperation = Operation<\n  typeof Key,\n  FindTokenWithMintByAddressInput,\n  TokenWithMint\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindTokenWithMintByAddressInput = {\n  address: PublicKey;\n  commitment?: Commitment;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findTokenWithMintByAddressOperationHandler: OperationHandler<FindTokenWithMintByAddressOperation> =\n  {\n    handle: async (\n      operation: FindTokenWithMintByAddressOperation,\n      metaplex: Metaplex\n    ): Promise<TokenWithMint> => {\n      const { address, commitment } = operation.input;\n\n      const tokenAccount = toTokenAccount(\n        await metaplex.rpc().getAccount(address, commitment)\n      );\n\n      const mintAccount = toMintAccount(\n        await metaplex.rpc().getAccount(tokenAccount.data.mint, commitment)\n      );\n\n      return toTokenWithMint(tokenAccount, toMint(mintAccount));\n    },\n  };\n"],"names":["Key","findTokenWithMintByAddressOperation","useOperation","findTokenWithMintByAddressOperationHandler","handle","operation","metaplex","address","commitment","input","tokenAccount","toTokenAccount","rpc","getAccount","mintAccount","toMintAccount","data","mint","toTokenWithMint","toMint"],"mappings":";;;;;;;;;AAQA;AACA;;AAEA,MAAMA,GAAG,GAAG,qCAAZ,CAAA;AAEA;AACA;AACA;AACA;;MACaC,mCAAmC,GAC9CC,sBAAY,CAAsCF,GAAtC,EADP;AAGP;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACO,MAAMG,0CAAiG,GAC5G;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,KAGqB;IAC3B,MAAM;MAAEC,OAAF;AAAWC,MAAAA,UAAAA;KAAeH,GAAAA,SAAS,CAACI,KAA1C,CAAA;AAEA,IAAA,MAAMC,YAAY,GAAGC,uBAAc,CACjC,MAAML,QAAQ,CAACM,GAAT,EAAA,CAAeC,UAAf,CAA0BN,OAA1B,EAAmCC,UAAnC,CAD2B,CAAnC,CAAA;AAIA,IAAA,MAAMM,WAAW,GAAGC,sBAAa,CAC/B,MAAMT,QAAQ,CAACM,GAAT,EAAA,CAAeC,UAAf,CAA0BH,YAAY,CAACM,IAAb,CAAkBC,IAA5C,EAAkDT,UAAlD,CADyB,CAAjC,CAAA;IAIA,OAAOU,qBAAe,CAACR,YAAD,EAAeS,WAAM,CAACL,WAAD,CAArB,CAAtB,CAAA;AACD,GAAA;AAhBH;;;;;"}