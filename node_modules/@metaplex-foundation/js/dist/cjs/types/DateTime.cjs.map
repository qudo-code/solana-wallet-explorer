{"version":3,"file":"DateTime.cjs","sources":["../../../src/types/DateTime.ts"],"sourcesContent":["import BN from 'bn.js';\nimport { assert, Opaque, Option } from '@/utils';\nimport { BigNumberValues } from './BigNumber';\n\nexport type DateTimeString = string;\nexport type DateTimeValues = DateTimeString | BigNumberValues | Date;\nexport type DateTime = Opaque<BN, 'DateTime'>;\n\nexport const toDateTime = (value: DateTimeValues): DateTime => {\n  if (typeof value === 'string' || isDateObject(value)) {\n    const date = new Date(value);\n    const timestamp = Math.floor(date.getTime() / 1000);\n    return new BN(timestamp) as DateTime;\n  }\n\n  return new BN(value) as DateTime;\n};\n\nexport const now = (): DateTime => toDateTime(new Date());\n\nexport const toOptionDateTime = (\n  value: Option<DateTimeValues>\n): Option<DateTime> => {\n  return value === null ? null : toDateTime(value);\n};\n\nexport const isDateTime = (value: any): value is DateTime => {\n  return value?.__opaque__ === 'DateTime';\n};\n\nexport function assertDateTime(value: any): asserts value is DateTime {\n  assert(isDateTime(value), 'Expected DateTime type');\n}\n\nconst isDateObject = (value: any): value is Date => {\n  return Object.prototype.toString.call(value) === '[object Date]';\n};\n\nexport const formatDateTime = (\n  value: DateTime,\n  // @ts-ignore\n  locales: Intl.LocalesArgument = 'en-US',\n  // @ts-ignore\n  options: Intl.DateTimeFormatOptions = {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  }\n): string => {\n  const date = new Date(value.toNumber() * 1000);\n\n  return date.toLocaleDateString(locales, options);\n};\n"],"names":["toDateTime","value","isDateObject","date","Date","timestamp","Math","floor","getTime","BN","now","toOptionDateTime","isDateTime","__opaque__","assertDateTime","assert","Object","prototype","toString","call","formatDateTime","locales","options","month","day","year","hour","minute","toNumber","toLocaleDateString"],"mappings":";;;;;;;;;;;AAQaA,MAAAA,UAAU,GAAIC,KAAD,IAAqC;EAC7D,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BC,YAAY,CAACD,KAAD,CAA7C,EAAsD;AACpD,IAAA,MAAME,IAAI,GAAG,IAAIC,IAAJ,CAASH,KAAT,CAAb,CAAA;IACA,MAAMI,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACK,OAAL,EAAiB,GAAA,IAA5B,CAAlB,CAAA;AACA,IAAA,OAAO,IAAIC,sBAAJ,CAAOJ,SAAP,CAAP,CAAA;AACD,GAAA;;AAED,EAAA,OAAO,IAAII,sBAAJ,CAAOR,KAAP,CAAP,CAAA;AACD,EARM;AAUA,MAAMS,GAAG,GAAG,MAAgBV,UAAU,CAAC,IAAII,IAAJ,EAAD,EAAtC;AAEMO,MAAAA,gBAAgB,GAC3BV,KAD8B,IAET;EACrB,OAAOA,KAAK,KAAK,IAAV,GAAiB,IAAjB,GAAwBD,UAAU,CAACC,KAAD,CAAzC,CAAA;AACD,EAJM;AAMMW,MAAAA,UAAU,GAAIX,KAAD,IAAmC;EAC3D,OAAO,CAAAA,KAAK,KAAA,IAAL,IAAAA,KAAK,KAAL,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,KAAK,CAAEY,UAAP,MAAsB,UAA7B,CAAA;AACD,EAFM;AAIA,SAASC,cAAT,CAAwBb,KAAxB,EAA+D;AACpEc,EAAAA,iBAAM,CAACH,UAAU,CAACX,KAAD,CAAX,EAAoB,wBAApB,CAAN,CAAA;AACD,CAAA;;AAED,MAAMC,YAAY,GAAID,KAAD,IAA+B;EAClD,OAAOe,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BlB,KAA/B,CAAA,KAA0C,eAAjD,CAAA;AACD,CAFD,CAAA;;AAIamB,MAAAA,cAAc,GAAG,CAC5BnB,KAD4B;AAG5BoB,OAA6B,GAAG,OAHJ;AAK5BC,OAAmC,GAAG;AACpCC,EAAAA,KAAK,EAAE,OAD6B;AAEpCC,EAAAA,GAAG,EAAE,SAF+B;AAGpCC,EAAAA,IAAI,EAAE,SAH8B;AAIpCC,EAAAA,IAAI,EAAE,SAJ8B;AAKpCC,EAAAA,MAAM,EAAE,SAAA;AAL4B,CALV,KAYjB;EACX,MAAMxB,IAAI,GAAG,IAAIC,IAAJ,CAASH,KAAK,CAAC2B,QAAN,EAAmB,GAAA,IAA5B,CAAb,CAAA;AAEA,EAAA,OAAOzB,IAAI,CAAC0B,kBAAL,CAAwBR,OAAxB,EAAiCC,OAAjC,CAAP,CAAA;AACD;;;;;;;;;"}