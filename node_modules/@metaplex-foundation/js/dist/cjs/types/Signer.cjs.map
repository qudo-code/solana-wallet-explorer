{"version":3,"file":"Signer.cjs","sources":["../../../src/types/Signer.ts"],"sourcesContent":["import { PublicKey, Transaction } from '@solana/web3.js';\n\nexport type Signer = KeypairSigner | IdentitySigner;\n\nexport type KeypairSigner = {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n};\n\nexport type IdentitySigner = {\n  publicKey: PublicKey;\n  signMessage(message: Uint8Array): Promise<Uint8Array>;\n  signTransaction(transaction: Transaction): Promise<Transaction>;\n  signAllTransactions(transactions: Transaction[]): Promise<Transaction[]>;\n};\n\nexport const isSigner = (input: any): input is Signer => {\n  return (\n    typeof input === 'object' &&\n    'publicKey' in input &&\n    ('secretKey' in input || 'signTransaction' in input)\n  );\n};\n\nexport const isKeypairSigner = (input: any): input is KeypairSigner => {\n  return isSigner(input) && 'secretKey' in input && input.secretKey != null;\n};\n\nexport const isIdentitySigner = (input: any): input is IdentitySigner => {\n  return isSigner(input) && !isKeypairSigner(input);\n};\n\nexport type SignerHistogram = {\n  all: Signer[];\n  keypairs: KeypairSigner[];\n  identities: IdentitySigner[];\n};\n\nexport const getSignerHistogram = (signers: Signer[]) =>\n  signers.reduce(\n    (signers: SignerHistogram, signer: Signer) => {\n      const duplicateIndex = signers.all.findIndex(({ publicKey }) =>\n        publicKey.equals(signer.publicKey)\n      );\n      const duplicate = signers.all[duplicateIndex] ?? null;\n      const duplicateIsIdentity = duplicate\n        ? isIdentitySigner(duplicate)\n        : false;\n      const signerIsIdentity = isIdentitySigner(signer);\n\n      if (!duplicate) {\n        signers.all.push(signer);\n        signerIsIdentity\n          ? signers.identities.push(signer)\n          : signers.keypairs.push(signer);\n      } else if (duplicateIsIdentity && !signerIsIdentity) {\n        // Prefer keypair than identity signer as it requires less user interactions.\n        const duplicateIdentitiesIndex = signers.identities.findIndex(\n          ({ publicKey }) => publicKey.equals(signer.publicKey)\n        );\n        signers.all.splice(duplicateIndex, 1);\n        signers.identities.splice(duplicateIdentitiesIndex, 1);\n        signers.all.push(signer);\n        signers.keypairs.push(signer);\n      }\n\n      return signers;\n    },\n    { all: [], keypairs: [], identities: [] }\n  );\n"],"names":["isSigner","input","isKeypairSigner","secretKey","isIdentitySigner","getSignerHistogram","signers","reduce","signer","duplicateIndex","all","findIndex","publicKey","equals","duplicate","duplicateIsIdentity","signerIsIdentity","push","identities","keypairs","duplicateIdentitiesIndex","splice"],"mappings":";;;;AAgBaA,MAAAA,QAAQ,GAAIC,KAAD,IAAiC;AACvD,EAAA,OACE,OAAOA,KAAP,KAAiB,QAAjB,IACA,WAAA,IAAeA,KADf,KAEC,WAAeA,IAAAA,KAAf,IAAwB,iBAAA,IAAqBA,KAF9C,CADF,CAAA;AAKD,EANM;AAQMC,MAAAA,eAAe,GAAID,KAAD,IAAwC;AACrE,EAAA,OAAOD,QAAQ,CAACC,KAAD,CAAR,IAAmB,WAAA,IAAeA,KAAlC,IAA2CA,KAAK,CAACE,SAAN,IAAmB,IAArE,CAAA;AACD,EAFM;AAIMC,MAAAA,gBAAgB,GAAIH,KAAD,IAAyC;EACvE,OAAOD,QAAQ,CAACC,KAAD,CAAR,IAAmB,CAACC,eAAe,CAACD,KAAD,CAA1C,CAAA;AACD,EAFM;AAUMI,MAAAA,kBAAkB,GAAIC,OAAD,IAChCA,OAAO,CAACC,MAAR,CACE,CAACD,OAAD,EAA2BE,MAA3B,KAA8C;AAAA,EAAA,IAAA,qBAAA,CAAA;;EAC5C,MAAMC,cAAc,GAAGH,OAAO,CAACI,GAAR,CAAYC,SAAZ,CAAsB,CAAC;AAAEC,IAAAA,SAAAA;GAAH,KAC3CA,SAAS,CAACC,MAAV,CAAiBL,MAAM,CAACI,SAAxB,CADqB,CAAvB,CAAA;EAGA,MAAME,SAAS,4BAAGR,OAAO,CAACI,GAAR,CAAYD,cAAZ,CAAH,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAkC,IAAjD,CAAA;EACA,MAAMM,mBAAmB,GAAGD,SAAS,GACjCV,gBAAgB,CAACU,SAAD,CADiB,GAEjC,KAFJ,CAAA;AAGA,EAAA,MAAME,gBAAgB,GAAGZ,gBAAgB,CAACI,MAAD,CAAzC,CAAA;;EAEA,IAAI,CAACM,SAAL,EAAgB;AACdR,IAAAA,OAAO,CAACI,GAAR,CAAYO,IAAZ,CAAiBT,MAAjB,CAAA,CAAA;AACAQ,IAAAA,gBAAgB,GACZV,OAAO,CAACY,UAAR,CAAmBD,IAAnB,CAAwBT,MAAxB,CADY,GAEZF,OAAO,CAACa,QAAR,CAAiBF,IAAjB,CAAsBT,MAAtB,CAFJ,CAAA;AAGD,GALD,MAKO,IAAIO,mBAAmB,IAAI,CAACC,gBAA5B,EAA8C;AACnD;IACA,MAAMI,wBAAwB,GAAGd,OAAO,CAACY,UAAR,CAAmBP,SAAnB,CAC/B,CAAC;AAAEC,MAAAA,SAAAA;KAAH,KAAmBA,SAAS,CAACC,MAAV,CAAiBL,MAAM,CAACI,SAAxB,CADY,CAAjC,CAAA;AAGAN,IAAAA,OAAO,CAACI,GAAR,CAAYW,MAAZ,CAAmBZ,cAAnB,EAAmC,CAAnC,CAAA,CAAA;AACAH,IAAAA,OAAO,CAACY,UAAR,CAAmBG,MAAnB,CAA0BD,wBAA1B,EAAoD,CAApD,CAAA,CAAA;AACAd,IAAAA,OAAO,CAACI,GAAR,CAAYO,IAAZ,CAAiBT,MAAjB,CAAA,CAAA;AACAF,IAAAA,OAAO,CAACa,QAAR,CAAiBF,IAAjB,CAAsBT,MAAtB,CAAA,CAAA;AACD,GAAA;;AAED,EAAA,OAAOF,OAAP,CAAA;AACD,CA5BH,EA6BE;AAAEI,EAAAA,GAAG,EAAE,EAAP;AAAWS,EAAAA,QAAQ,EAAE,EAArB;AAAyBD,EAAAA,UAAU,EAAE,EAAA;AAArC,CA7BF;;;;;;;"}