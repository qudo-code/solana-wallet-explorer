{"version":3,"file":"AuctionsClient.mjs","sources":["../../../../src/plugins/auctionHouseModule/AuctionsClient.ts"],"sourcesContent":["import type { Metaplex } from '@/Metaplex';\nimport { Task } from '@/utils';\nimport type { PublicKey } from '@solana/web3.js';\nimport { AuctionHouse } from './AuctionHouse';\nimport { AuctionsBuildersClient } from './AuctionsBuildersClient';\nimport { findAuctionHousePda } from './pdas';\nimport {\n  CreateAuctionHouseInput,\n  createAuctionHouseOperation,\n  CreateAuctionHouseOutput,\n} from './createAuctionHouse';\nimport {\n  FindAuctionHouseByAddressInput,\n  findAuctionHouseByAddressOperation,\n} from './findAuctionHouseByAddress';\nimport {\n  UpdateAuctionHouseInput,\n  updateAuctionHouseOperation,\n  UpdateAuctionHouseOutput,\n} from './updateAuctionHouse';\nimport { AuctionHouseClient } from './AuctionHouseClient';\nimport { Signer } from '@/types';\n\n/**\n * @group Modules\n */\nexport class AuctionsClient {\n  constructor(protected readonly metaplex: Metaplex) {}\n\n  builders() {\n    return new AuctionsBuildersClient(this.metaplex);\n  }\n\n  for(auctionHouse: AuctionHouse, auctioneerAuthority?: Signer) {\n    return new AuctionHouseClient(\n      this.metaplex,\n      auctionHouse,\n      auctioneerAuthority\n    );\n  }\n\n  createAuctionHouse(\n    input: CreateAuctionHouseInput\n  ): Task<CreateAuctionHouseOutput & { auctionHouse: AuctionHouse }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .getTask(createAuctionHouseOperation(input))\n        .run(scope);\n      scope.throwIfCanceled();\n      const auctionHouse = await this.findAuctionHouseByAddress(\n        output.auctionHouseAddress,\n        input.auctioneerAuthority\n      ).run(scope);\n      return { ...output, auctionHouse };\n    });\n  }\n\n  updateAuctionHouse(\n    auctionHouse: AuctionHouse,\n    input: Omit<UpdateAuctionHouseInput, 'auctionHouse'>\n  ): Task<UpdateAuctionHouseOutput & { auctionHouse: AuctionHouse }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .getTask(updateAuctionHouseOperation({ auctionHouse, ...input }))\n        .run(scope);\n      scope.throwIfCanceled();\n      const currentAuctioneerAuthority = auctionHouse.hasAuctioneer\n        ? auctionHouse.auctioneer.authority\n        : undefined;\n      const updatedAuctionHouse = await this.findAuctionHouseByAddress(\n        auctionHouse.address,\n        input.auctioneerAuthority ?? currentAuctioneerAuthority\n      ).run(scope);\n      return { ...output, auctionHouse: updatedAuctionHouse };\n    });\n  }\n\n  findAuctionHouseByAddress(\n    address: PublicKey,\n    auctioneerAuthority?: PublicKey,\n    options?: Omit<\n      FindAuctionHouseByAddressInput,\n      'address' | 'auctioneerAuthority'\n    >\n  ): Task<AuctionHouse> {\n    return this.metaplex.operations().getTask(\n      findAuctionHouseByAddressOperation({\n        address,\n        auctioneerAuthority,\n        ...options,\n      })\n    );\n  }\n\n  findAuctionHouseByCreatorAndMint(\n    creator: PublicKey,\n    treasuryMint: PublicKey,\n    auctioneerAuthority?: PublicKey,\n    options?: Omit<\n      FindAuctionHouseByAddressInput,\n      'address' | 'auctioneerAuthority'\n    >\n  ): Task<AuctionHouse> {\n    return this.findAuctionHouseByAddress(\n      findAuctionHousePda(creator, treasuryMint),\n      auctioneerAuthority,\n      options\n    );\n  }\n}\n"],"names":["AuctionsClient","constructor","metaplex","builders","AuctionsBuildersClient","for","auctionHouse","auctioneerAuthority","AuctionHouseClient","createAuctionHouse","input","Task","scope","output","operations","getTask","createAuctionHouseOperation","run","throwIfCanceled","findAuctionHouseByAddress","auctionHouseAddress","updateAuctionHouse","updateAuctionHouseOperation","currentAuctioneerAuthority","hasAuctioneer","auctioneer","authority","undefined","updatedAuctionHouse","address","options","findAuctionHouseByAddressOperation","findAuctionHouseByCreatorAndMint","creator","treasuryMint","findAuctionHousePda"],"mappings":"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"}