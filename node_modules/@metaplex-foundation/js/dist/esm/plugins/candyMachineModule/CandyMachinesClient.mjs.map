{"version":3,"file":"CandyMachinesClient.mjs","sources":["../../../../src/plugins/candyMachineModule/CandyMachinesClient.ts"],"sourcesContent":["import type { Metaplex } from '@/Metaplex';\nimport { toPublicKey } from '@/types';\nimport { Task } from '@/utils';\nimport type { PublicKey } from '@solana/web3.js';\nimport { CandyMachinesBuildersClient } from './CandyMachinesBuildersClient';\nimport { CandyMachine } from './models';\nimport {\n  CreateCandyMachineInput,\n  createCandyMachineOperation,\n  DeleteCandyMachineInput,\n  deleteCandyMachineOperation,\n  FindCandyMachineByAddressInput,\n  findCandyMachineByAddressOperation,\n  FindCandyMachinesByPublicKeyFieldInput,\n  findCandyMachinesByPublicKeyFieldOperation,\n  FindMintedNftsByCandyMachineInput,\n  findMintedNftsByCandyMachineOperation,\n  InsertItemsToCandyMachineInput,\n  insertItemsToCandyMachineOperation,\n  MintCandyMachineInput,\n  mintCandyMachineOperation,\n  UpdateCandyMachineInput,\n  updateCandyMachineOperation,\n} from './operations';\n\n/**\n * @group Modules\n */\nexport class CandyMachinesClient {\n  constructor(readonly metaplex: Metaplex) {}\n\n  builders() {\n    return new CandyMachinesBuildersClient(this.metaplex);\n  }\n\n  /** {@inheritDoc createCandyMachineOperation} */\n  create(input: CreateCandyMachineInput) {\n    return this.metaplex\n      .operations()\n      .getTask(createCandyMachineOperation(input));\n  }\n\n  /** {@inheritDoc deleteCandyMachineOperation} */\n  delete(input: DeleteCandyMachineInput) {\n    return this.metaplex\n      .operations()\n      .getTask(deleteCandyMachineOperation(input));\n  }\n\n  /** {@inheritDoc findCandyMachinesByPublicKeyFieldOperation} */\n  findAllBy(input: FindCandyMachinesByPublicKeyFieldInput) {\n    return this.metaplex\n      .operations()\n      .getTask(findCandyMachinesByPublicKeyFieldOperation(input));\n  }\n\n  /** {@inheritDoc findCandyMachineByAddressOperation} */\n  findByAddress(input: FindCandyMachineByAddressInput): Task<CandyMachine> {\n    return this.metaplex\n      .operations()\n      .getTask(findCandyMachineByAddressOperation(input));\n  }\n\n  /** {@inheritDoc findMintedNftsByCandyMachineOperation} */\n  findMintedNfts(input: FindMintedNftsByCandyMachineInput) {\n    return this.metaplex\n      .operations()\n      .getTask(findMintedNftsByCandyMachineOperation(input));\n  }\n\n  /** {@inheritDoc insertItemsToCandyMachineOperation} */\n  insertItems(input: InsertItemsToCandyMachineInput) {\n    return this.metaplex\n      .operations()\n      .getTask(insertItemsToCandyMachineOperation(input));\n  }\n\n  /** {@inheritDoc mintCandyMachineOperation} */\n  mint(input: MintCandyMachineInput) {\n    return this.metaplex.operations().getTask(mintCandyMachineOperation(input));\n  }\n\n  /**\n   * Helper method that refetches a given Candy Machine.\n   */\n  refresh(\n    candyMachine: CandyMachine | PublicKey,\n    input?: Omit<FindCandyMachineByAddressInput, 'address'>\n  ): Task<CandyMachine> {\n    return this.findByAddress({ address: toPublicKey(candyMachine), ...input });\n  }\n\n  /** {@inheritDoc updateCandyMachineOperation} */\n  update(input: UpdateCandyMachineInput) {\n    return this.metaplex\n      .operations()\n      .getTask(updateCandyMachineOperation(input));\n  }\n}\n"],"names":["CandyMachinesClient","constructor","metaplex","builders","CandyMachinesBuildersClient","create","input","operations","getTask","createCandyMachineOperation","delete","deleteCandyMachineOperation","findAllBy","findCandyMachinesByPublicKeyFieldOperation","findByAddress","findCandyMachineByAddressOperation","findMintedNfts","findMintedNftsByCandyMachineOperation","insertItems","insertItemsToCandyMachineOperation","mint","mintCandyMachineOperation","refresh","candyMachine","address","toPublicKey","update","updateCandyMachineOperation"],"mappings":";;;;;;;;;;;AAyBA;AACA;AACA;;AACO,MAAMA,mBAAN,CAA0B;EAC/BC,WAAW,CAAUC,QAAV,EAA8B;IAAA,IAApBA,CAAAA,QAAoB,GAApBA,QAAoB,CAAA;AAAE,GAAA;;AAE3CC,EAAAA,QAAQ,GAAG;AACT,IAAA,OAAO,IAAIC,2BAAJ,CAAgC,IAAA,CAAKF,QAArC,CAAP,CAAA;AACD,GAAA;AAED;;;EACAG,MAAM,CAACC,KAAD,EAAiC;IACrC,OAAO,IAAA,CAAKJ,QAAL,CACJK,UADI,EAAA,CAEJC,OAFI,CAEIC,2BAA2B,CAACH,KAAD,CAF/B,CAAP,CAAA;AAGD,GAAA;AAED;;;EACAI,MAAM,CAACJ,KAAD,EAAiC;IACrC,OAAO,IAAA,CAAKJ,QAAL,CACJK,UADI,EAAA,CAEJC,OAFI,CAEIG,2BAA2B,CAACL,KAAD,CAF/B,CAAP,CAAA;AAGD,GAAA;AAED;;;EACAM,SAAS,CAACN,KAAD,EAAgD;IACvD,OAAO,IAAA,CAAKJ,QAAL,CACJK,UADI,EAAA,CAEJC,OAFI,CAEIK,0CAA0C,CAACP,KAAD,CAF9C,CAAP,CAAA;AAGD,GAAA;AAED;;;EACAQ,aAAa,CAACR,KAAD,EAA4D;IACvE,OAAO,IAAA,CAAKJ,QAAL,CACJK,UADI,EAAA,CAEJC,OAFI,CAEIO,kCAAkC,CAACT,KAAD,CAFtC,CAAP,CAAA;AAGD,GAAA;AAED;;;EACAU,cAAc,CAACV,KAAD,EAA2C;IACvD,OAAO,IAAA,CAAKJ,QAAL,CACJK,UADI,EAAA,CAEJC,OAFI,CAEIS,qCAAqC,CAACX,KAAD,CAFzC,CAAP,CAAA;AAGD,GAAA;AAED;;;EACAY,WAAW,CAACZ,KAAD,EAAwC;IACjD,OAAO,IAAA,CAAKJ,QAAL,CACJK,UADI,EAAA,CAEJC,OAFI,CAEIW,kCAAkC,CAACb,KAAD,CAFtC,CAAP,CAAA;AAGD,GAAA;AAED;;;EACAc,IAAI,CAACd,KAAD,EAA+B;IACjC,OAAO,IAAA,CAAKJ,QAAL,CAAcK,UAAd,EAAA,CAA2BC,OAA3B,CAAmCa,yBAAyB,CAACf,KAAD,CAA5D,CAAP,CAAA;AACD,GAAA;AAED;AACF;AACA;;;AACEgB,EAAAA,OAAO,CACLC,YADK,EAELjB,KAFK,EAGe;IACpB,OAAO,IAAA,CAAKQ,aAAL,CAAmB;AAAEU,MAAAA,OAAO,EAAEC,WAAW,CAACF,YAAD,CAAtB;MAAsC,GAAGjB,KAAAA;AAAzC,KAAnB,CAAP,CAAA;AACD,GAAA;AAED;;;EACAoB,MAAM,CAACpB,KAAD,EAAiC;IACrC,OAAO,IAAA,CAAKJ,QAAL,CACJK,UADI,EAAA,CAEJC,OAFI,CAEImB,2BAA2B,CAACrB,KAAD,CAF/B,CAAP,CAAA;AAGD,GAAA;;AArE8B;;;;"}