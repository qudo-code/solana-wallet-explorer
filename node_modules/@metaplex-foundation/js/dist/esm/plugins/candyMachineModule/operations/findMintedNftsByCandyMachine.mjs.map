{"version":3,"file":"findMintedNftsByCandyMachine.mjs","sources":["../../../../../src/plugins/candyMachineModule/operations/findMintedNftsByCandyMachine.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport { Operation, OperationHandler, useOperation } from '@/types';\nimport { DisposableScope } from '@/utils';\nimport { Commitment, PublicKey } from '@solana/web3.js';\nimport { findNftsByCreatorOperation, Metadata, Nft } from '../../nftModule';\nimport { findCandyMachineCreatorPda } from '../pdas';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindMintedNftsByCandyMachineOperation' as const;\n\n/**\n * @group Operations\n * @category Constructors\n */\nexport const findMintedNftsByCandyMachineOperation =\n  useOperation<FindMintedNftsByCandyMachineOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindMintedNftsByCandyMachineOperation = Operation<\n  typeof Key,\n  FindMintedNftsByCandyMachineInput,\n  FindMintedNftsByCandyMachineOutput\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindMintedNftsByCandyMachineInput = {\n  candyMachine: PublicKey;\n  version?: 1 | 2;\n  commitment?: Commitment;\n};\n\n/**\n * @group Operations\n * @category Outputs\n */\nexport type FindMintedNftsByCandyMachineOutput = (Metadata | Nft)[];\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findMintedNftsByCandyMachineOperationHandler: OperationHandler<FindMintedNftsByCandyMachineOperation> =\n  {\n    handle: async (\n      operation: FindMintedNftsByCandyMachineOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ) => {\n      const { candyMachine, version = 2, commitment } = operation.input;\n      const firstCreator =\n        version === 2 ? findCandyMachineCreatorPda(candyMachine) : candyMachine;\n\n      const mintedNfts = await metaplex.operations().execute(\n        findNftsByCreatorOperation({\n          creator: firstCreator,\n          position: 1,\n          commitment,\n        }),\n        scope\n      );\n\n      return mintedNfts as (Nft | Metadata)[];\n    },\n  };\n"],"names":["Key","findMintedNftsByCandyMachineOperation","useOperation","findMintedNftsByCandyMachineOperationHandler","handle","operation","metaplex","scope","candyMachine","version","commitment","input","firstCreator","findCandyMachineCreatorPda","mintedNfts","operations","execute","findNftsByCreatorOperation","creator","position"],"mappings":";;;;AAQA;AACA;;AAEA,MAAMA,GAAG,GAAG,uCAAZ,CAAA;AAEA;AACA;AACA;AACA;;MACaC,qCAAqC,GAChDC,YAAY,CAAwCF,GAAxC,EADP;AAGP;AACA;AACA;AACA;;AAuBA;AACA;AACA;AACA;AACO,MAAMG,4CAAqG,GAChH;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MAAEC,YAAF;AAAgBC,MAAAA,OAAO,GAAG,CAA1B;AAA6BC,MAAAA,UAAAA;KAAeL,GAAAA,SAAS,CAACM,KAA5D,CAAA;IACA,MAAMC,YAAY,GAChBH,OAAO,KAAK,CAAZ,GAAgBI,0BAA0B,CAACL,YAAD,CAA1C,GAA2DA,YAD7D,CAAA;IAGA,MAAMM,UAAU,GAAG,MAAMR,QAAQ,CAACS,UAAT,EAAsBC,CAAAA,OAAtB,CACvBC,0BAA0B,CAAC;AACzBC,MAAAA,OAAO,EAAEN,YADgB;AAEzBO,MAAAA,QAAQ,EAAE,CAFe;AAGzBT,MAAAA,UAAAA;KAHwB,CADH,EAMvBH,KANuB,CAAzB,CAAA;AASA,IAAA,OAAOO,UAAP,CAAA;AACD,GAAA;AApBH;;;;"}