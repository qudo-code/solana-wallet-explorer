{"version":3,"file":"insertItemsToCandyMachine.mjs","sources":["../../../../../src/plugins/candyMachineModule/operations/insertItemsToCandyMachine.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport {\n  BigNumber,\n  Operation,\n  OperationHandler,\n  Signer,\n  useOperation,\n} from '@/types';\nimport { TransactionBuilder } from '@/utils';\nimport { createAddConfigLinesInstruction } from '@metaplex-foundation/mpl-candy-machine';\nimport type { ConfirmOptions } from '@solana/web3.js';\nimport { SendAndConfirmTransactionResponse } from '../../rpcModule';\nimport {\n  assertAllConfigLineConstraints,\n  assertCanAdd,\n  assertNotFull,\n} from '../asserts';\nimport { CandyMachine, CandyMachineItem } from '../models/CandyMachine';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'InsertItemsToCandyMachineOperation' as const;\n\n/**\n * @group Operations\n * @category Constructors\n */\nexport const insertItemsToCandyMachineOperation =\n  useOperation<InsertItemsToCandyMachineOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type InsertItemsToCandyMachineOperation = Operation<\n  typeof Key,\n  InsertItemsToCandyMachineInput,\n  InsertItemsToCandyMachineOutput\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type InsertItemsToCandyMachineInput = {\n  // Models and Accounts.\n  candyMachine: Pick<\n    CandyMachine,\n    'itemsAvailable' | 'itemsLoaded' | 'address'\n  >;\n  authority: Signer;\n\n  // Data.\n  items: CandyMachineItem[];\n  index?: BigNumber;\n\n  // Transaction Options.\n  confirmOptions?: ConfirmOptions;\n};\n\n/**\n * @group Operations\n * @category Outputs\n */\nexport type InsertItemsToCandyMachineOutput = {\n  response: SendAndConfirmTransactionResponse;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const InsertItemsToCandyMachineOperationHandler: OperationHandler<InsertItemsToCandyMachineOperation> =\n  {\n    async handle(\n      operation: InsertItemsToCandyMachineOperation,\n      metaplex: Metaplex\n    ): Promise<InsertItemsToCandyMachineOutput> {\n      return insertItemsToCandyMachineBuilder(operation.input).sendAndConfirm(\n        metaplex,\n        operation.input.confirmOptions\n      );\n    },\n  };\n\n// -----------------\n// Builder\n// -----------------\n\n/**\n * @group Transaction Builders\n * @category Inputs\n */\nexport type InsertItemsToCandyMachineBuilderParams = Omit<\n  InsertItemsToCandyMachineInput,\n  'confirmOptions'\n> & {\n  instructionKey?: string;\n};\n\n/**\n * @group Transaction Builders\n * @category Constructors\n */\nexport const insertItemsToCandyMachineBuilder = (\n  params: InsertItemsToCandyMachineBuilderParams\n): TransactionBuilder => {\n  const index = params.index ?? params.candyMachine.itemsLoaded;\n  const items = params.items;\n  assertNotFull(params.candyMachine, index);\n  assertCanAdd(params.candyMachine, index, items.length);\n  assertAllConfigLineConstraints(items);\n\n  return TransactionBuilder.make().add({\n    instruction: createAddConfigLinesInstruction(\n      {\n        candyMachine: params.candyMachine.address,\n        authority: params.authority.publicKey,\n      },\n      { index: index.toNumber(), configLines: items }\n    ),\n    signers: [params.authority],\n    key: params.instructionKey ?? 'insertItems',\n  });\n};\n"],"names":["Key","insertItemsToCandyMachineOperation","useOperation","InsertItemsToCandyMachineOperationHandler","handle","operation","metaplex","insertItemsToCandyMachineBuilder","input","sendAndConfirm","confirmOptions","params","index","candyMachine","itemsLoaded","items","assertNotFull","assertCanAdd","length","assertAllConfigLineConstraints","TransactionBuilder","make","add","instruction","createAddConfigLinesInstruction","address","authority","publicKey","toNumber","configLines","signers","key","instructionKey"],"mappings":";;;;;AAmBA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,oCAAZ,CAAA;AAEA;AACA;AACA;AACA;;MACaC,kCAAkC,GAC7CC,YAAY,CAAqCF,GAArC,EADP;AAGP;AACA;AACA;AACA;;AAmCA;AACA;AACA;AACA;AACO,MAAMG,yCAA+F,GAC1G;AACE,EAAA,MAAMC,MAAN,CACEC,SADF,EAEEC,QAFF,EAG4C;AAC1C,IAAA,OAAOC,gCAAgC,CAACF,SAAS,CAACG,KAAX,CAAhC,CAAkDC,cAAlD,CACLH,QADK,EAELD,SAAS,CAACG,KAAV,CAAgBE,cAFX,CAAP,CAAA;AAID,GAAA;;AATH;AAaF;AACA;;AAEA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACaH,MAAAA,gCAAgC,GAC3CI,MAD8C,IAEvB;AAAA,EAAA,IAAA,aAAA,EAAA,qBAAA,CAAA;;EACvB,MAAMC,KAAK,GAAGD,CAAAA,aAAAA,GAAAA,MAAM,CAACC,KAAV,yDAAmBD,MAAM,CAACE,YAAP,CAAoBC,WAAlD,CAAA;AACA,EAAA,MAAMC,KAAK,GAAGJ,MAAM,CAACI,KAArB,CAAA;AACAC,EAAAA,aAAa,CAACL,MAAM,CAACE,YAAR,EAAsBD,KAAtB,CAAb,CAAA;EACAK,YAAY,CAACN,MAAM,CAACE,YAAR,EAAsBD,KAAtB,EAA6BG,KAAK,CAACG,MAAnC,CAAZ,CAAA;EACAC,8BAA8B,CAACJ,KAAD,CAA9B,CAAA;AAEA,EAAA,OAAOK,kBAAkB,CAACC,IAAnB,EAAA,CAA0BC,GAA1B,CAA8B;IACnCC,WAAW,EAAEC,+BAA+B,CAC1C;AACEX,MAAAA,YAAY,EAAEF,MAAM,CAACE,YAAP,CAAoBY,OADpC;AAEEC,MAAAA,SAAS,EAAEf,MAAM,CAACe,SAAP,CAAiBC,SAAAA;AAF9B,KAD0C,EAK1C;AAAEf,MAAAA,KAAK,EAAEA,KAAK,CAACgB,QAAN,EAAT;AAA2BC,MAAAA,WAAW,EAAEd,KAAAA;AAAxC,KAL0C,CADT;AAQnCe,IAAAA,OAAO,EAAE,CAACnB,MAAM,CAACe,SAAR,CAR0B;AASnCK,IAAAA,GAAG,EAAEpB,CAAAA,qBAAAA,GAAAA,MAAM,CAACqB,cAAT,MAA2B,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,aAAA;AATK,GAA9B,CAAP,CAAA;AAWD;;;;"}