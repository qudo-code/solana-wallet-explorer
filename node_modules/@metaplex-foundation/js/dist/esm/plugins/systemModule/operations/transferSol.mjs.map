{"version":3,"file":"transferSol.mjs","sources":["../../../../../src/plugins/systemModule/operations/transferSol.ts"],"sourcesContent":["import { ConfirmOptions, PublicKey, SystemProgram } from '@solana/web3.js';\nimport type { Metaplex } from '@/Metaplex';\nimport {\n  assertSol,\n  Operation,\n  OperationHandler,\n  Signer,\n  SolAmount,\n  useOperation,\n} from '@/types';\nimport { DisposableScope, TransactionBuilder } from '@/utils';\nimport { SendAndConfirmTransactionResponse } from '../../rpcModule';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'TransferSolOperation' as const;\n\n/**\n * @group Operations\n * @category Constructors\n */\nexport const transferSolOperation = useOperation<TransferSolOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type TransferSolOperation = Operation<\n  typeof Key,\n  TransferSolInput,\n  TransferSolOutput\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type TransferSolInput = {\n  from?: Signer; // Defaults to mx.identity().\n  to: PublicKey;\n  amount: SolAmount;\n  basePubkey?: PublicKey;\n  seed?: string;\n  program?: PublicKey;\n  confirmOptions?: ConfirmOptions;\n};\n\n/**\n * @group Operations\n * @category Outputs\n */\nexport type TransferSolOutput = {\n  response: SendAndConfirmTransactionResponse;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const transferSolOperationHandler: OperationHandler<TransferSolOperation> =\n  {\n    async handle(\n      operation: TransferSolOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ): Promise<TransferSolOutput> {\n      const builder = transferSolBuilder(metaplex, operation.input);\n      return builder.sendAndConfirm(metaplex, operation.input.confirmOptions);\n    },\n  };\n\n// -----------------\n// Builder\n// -----------------\n\n/**\n * @group Transaction Builders\n * @category Inputs\n */\nexport type TransferSolBuilderParams = Omit<\n  TransferSolInput,\n  'confirmOptions'\n> & {\n  instructionKey?: string;\n};\n\n/**\n * @group Transaction Builders\n * @category Constructors\n */\nexport const transferSolBuilder = (\n  metaplex: Metaplex,\n  params: TransferSolBuilderParams\n): TransactionBuilder => {\n  const {\n    from = metaplex.identity(),\n    to,\n    amount,\n    basePubkey,\n    seed,\n    program = SystemProgram.programId,\n  } = params;\n\n  assertSol(amount);\n\n  return TransactionBuilder.make().add({\n    instruction: SystemProgram.transfer({\n      fromPubkey: from.publicKey,\n      toPubkey: to,\n      lamports: amount.basisPoints.toNumber(),\n      ...(basePubkey ? { basePubkey, seed } : {}),\n      programId: program,\n    }),\n    signers: [from],\n    key: params.instructionKey ?? 'transferSol',\n  });\n};\n"],"names":["Key","transferSolOperation","useOperation","transferSolOperationHandler","handle","operation","metaplex","scope","builder","transferSolBuilder","input","sendAndConfirm","confirmOptions","params","from","identity","to","amount","basePubkey","seed","program","SystemProgram","programId","assertSol","TransactionBuilder","make","add","instruction","transfer","fromPubkey","publicKey","toPubkey","lamports","basisPoints","toNumber","signers","key","instructionKey"],"mappings":";;;;;AAaA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,sBAAZ,CAAA;AAEA;AACA;AACA;AACA;;MACaC,oBAAoB,GAAGC,YAAY,CAAuBF,GAAvB,EAAzC;AAEP;AACA;AACA;AACA;;AA6BA;AACA;AACA;AACA;AACO,MAAMG,2BAAmE,GAC9E;AACE,EAAA,MAAMC,MAAN,CACEC,SADF,EAEEC,QAFF,EAGEC,KAHF,EAI8B;IAC5B,MAAMC,OAAO,GAAGC,kBAAkB,CAACH,QAAD,EAAWD,SAAS,CAACK,KAArB,CAAlC,CAAA;IACA,OAAOF,OAAO,CAACG,cAAR,CAAuBL,QAAvB,EAAiCD,SAAS,CAACK,KAAV,CAAgBE,cAAjD,CAAP,CAAA;AACD,GAAA;;AARH;AAYF;AACA;;AAEA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;MACaH,kBAAkB,GAAG,CAChCH,QADgC,EAEhCO,MAFgC,KAGT;AAAA,EAAA,IAAA,qBAAA,CAAA;;EACvB,MAAM;AACJC,IAAAA,IAAI,GAAGR,QAAQ,CAACS,QAAT,EADH;IAEJC,EAFI;IAGJC,MAHI;IAIJC,UAJI;IAKJC,IALI;IAMJC,OAAO,GAAGC,aAAa,CAACC,SAAAA;AANpB,GAAA,GAOFT,MAPJ,CAAA;EASAU,SAAS,CAACN,MAAD,CAAT,CAAA;AAEA,EAAA,OAAOO,kBAAkB,CAACC,IAAnB,EAAA,CAA0BC,GAA1B,CAA8B;AACnCC,IAAAA,WAAW,EAAEN,aAAa,CAACO,QAAd,CAAuB;MAClCC,UAAU,EAAEf,IAAI,CAACgB,SADiB;AAElCC,MAAAA,QAAQ,EAAEf,EAFwB;AAGlCgB,MAAAA,QAAQ,EAAEf,MAAM,CAACgB,WAAP,CAAmBC,QAAnB,EAHwB;AAIlC,MAAA,IAAIhB,UAAU,GAAG;QAAEA,UAAF;AAAcC,QAAAA,IAAAA;OAAjB,GAA0B,EAAxC,CAJkC;AAKlCG,MAAAA,SAAS,EAAEF,OAAAA;AALuB,KAAvB,CADsB;IAQnCe,OAAO,EAAE,CAACrB,IAAD,CAR0B;AASnCsB,IAAAA,GAAG,EAAEvB,CAAAA,qBAAAA,GAAAA,MAAM,CAACwB,cAAT,MAA2B,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,aAAA;AATK,GAA9B,CAAP,CAAA;AAWD;;;;"}