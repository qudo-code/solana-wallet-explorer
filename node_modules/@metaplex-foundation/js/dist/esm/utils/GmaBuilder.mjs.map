{"version":3,"file":"GmaBuilder.mjs","sources":["../../../src/utils/GmaBuilder.ts"],"sourcesContent":["import { Commitment, PublicKey } from '@solana/web3.js';\nimport { Metaplex } from '@/Metaplex';\nimport { UnparsedMaybeAccount } from '@/types';\nimport { chunk } from './common';\n\nexport type GmaBuilderOptions = {\n  chunkSize?: number;\n  commitment?: Commitment;\n};\n\nexport class GmaBuilder {\n  protected readonly metaplex: Metaplex;\n  protected readonly publicKeys: PublicKey[];\n  protected readonly commitment?: Commitment;\n  protected chunkSize: number;\n\n  constructor(\n    metaplex: Metaplex,\n    publicKeys: PublicKey[],\n    options: GmaBuilderOptions = {}\n  ) {\n    this.metaplex = metaplex;\n    this.chunkSize = options.chunkSize ?? 100;\n    this.commitment = options.commitment;\n    this.publicKeys = publicKeys;\n  }\n\n  static make(\n    metaplex: Metaplex,\n    publicKeys: PublicKey[],\n    options: GmaBuilderOptions = {}\n  ) {\n    return new GmaBuilder(metaplex, publicKeys, options);\n  }\n\n  chunkBy(n: number) {\n    this.chunkSize = n;\n\n    return this;\n  }\n\n  addPublicKeys(publicKeys: PublicKey[]) {\n    this.publicKeys.push(...publicKeys);\n\n    return this;\n  }\n\n  getPublicKeys(): PublicKey[] {\n    return this.publicKeys;\n  }\n\n  getUniquePublicKeys(): PublicKey[] {\n    // TODO: Only send unique keys and reconciliate after call.\n    return this.getPublicKeys();\n  }\n\n  async getFirst(n?: number): Promise<UnparsedMaybeAccount[]> {\n    const end = this.boundNumber(n ?? 1);\n\n    return this.getChunks(this.getPublicKeys().slice(0, end));\n  }\n\n  async getLast(n?: number): Promise<UnparsedMaybeAccount[]> {\n    const start = this.boundNumber(n ?? 1);\n\n    return this.getChunks(this.getPublicKeys().slice(-start));\n  }\n\n  async getBetween(\n    start: number,\n    end: number\n  ): Promise<UnparsedMaybeAccount[]> {\n    start = this.boundNumber(start);\n    end = this.boundNumber(end);\n    [start, end] = start > end ? [end, start] : [start, end];\n\n    return this.getChunks(this.getPublicKeys().slice(start, end));\n  }\n\n  async getPage(\n    page: number,\n    perPage: number\n  ): Promise<UnparsedMaybeAccount[]> {\n    return this.getBetween((page - 1) * perPage, page * perPage);\n  }\n\n  async get(): Promise<UnparsedMaybeAccount[]> {\n    return this.getChunks(this.getPublicKeys());\n  }\n\n  async getAndMap<T>(\n    callback: (account: UnparsedMaybeAccount) => T\n  ): Promise<T[]> {\n    return (await this.get()).map(callback);\n  }\n\n  protected async getChunks(\n    publicKeys: PublicKey[]\n  ): Promise<UnparsedMaybeAccount[]> {\n    const chunks = chunk(publicKeys, this.chunkSize);\n    const chunkPromises = chunks.map((chunk) => this.getChunk(chunk));\n    const resolvedChunks = await Promise.all(chunkPromises);\n\n    return resolvedChunks.flat();\n  }\n\n  protected async getChunk(\n    publicKeys: PublicKey[]\n  ): Promise<UnparsedMaybeAccount[]> {\n    try {\n      // TODO(loris): Use lower level RPC call to add dataSlice support.\n      return await this.metaplex\n        .rpc()\n        .getMultipleAccounts(publicKeys, this.commitment);\n    } catch (error) {\n      // TODO(loris): Custom error instead.\n      throw error;\n    }\n  }\n\n  protected boundNumber(n: number): number {\n    return this.boundIndex(n - 1) + 1;\n  }\n\n  protected boundIndex(index: number): number {\n    index = index < 0 ? 0 : index;\n    index =\n      index >= this.publicKeys.length ? this.publicKeys.length - 1 : index;\n\n    return index;\n  }\n}\n"],"names":["GmaBuilder","constructor","metaplex","publicKeys","options","chunkSize","commitment","make","chunkBy","n","addPublicKeys","push","getPublicKeys","getUniquePublicKeys","getFirst","end","boundNumber","getChunks","slice","getLast","start","getBetween","getPage","page","perPage","get","getAndMap","callback","map","chunks","chunk","chunkPromises","getChunk","resolvedChunks","Promise","all","flat","rpc","getMultipleAccounts","error","boundIndex","index","length"],"mappings":"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"}