{"version":3,"file":"GpaBuilder.mjs","sources":["../../../src/utils/GpaBuilder.ts"],"sourcesContent":["import {\n  GetProgramAccountsConfig,\n  GetProgramAccountsFilter,\n  PublicKey,\n} from '@solana/web3.js';\nimport { Buffer } from 'buffer';\nimport base58 from 'bs58';\nimport BN from 'bn.js';\nimport { Metaplex } from '@/Metaplex';\nimport { UnparsedAccount } from '@/types';\nimport { GmaBuilder, GmaBuilderOptions } from './GmaBuilder';\n\nexport type GpaSortCallback = (\n  a: UnparsedAccount,\n  b: UnparsedAccount\n) => number;\n\nexport class GpaBuilder {\n  /** The connection instance to use when fetching accounts. */\n  protected readonly metaplex: Metaplex;\n\n  /** The public key of the program we want to retrieve accounts from. */\n  protected readonly programId: PublicKey;\n\n  /** The configs to use when fetching program accounts. */\n  protected config: GetProgramAccountsConfig = {};\n\n  /** When provided, reorder accounts using this callback. */\n  protected sortCallback?: GpaSortCallback;\n\n  constructor(metaplex: Metaplex, programId: PublicKey) {\n    this.metaplex = metaplex;\n    this.programId = programId;\n  }\n\n  mergeConfig(config: GetProgramAccountsConfig) {\n    this.config = { ...this.config, ...config };\n\n    return this;\n  }\n\n  slice(offset: number, length: number) {\n    this.config.dataSlice = { offset, length };\n\n    return this;\n  }\n\n  withoutData() {\n    return this.slice(0, 0);\n  }\n\n  addFilter(...filters: GetProgramAccountsFilter[]) {\n    if (!this.config.filters) {\n      this.config.filters = [];\n    }\n\n    this.config.filters.push(...filters);\n\n    return this;\n  }\n\n  where(offset: number, bytes: string | Buffer | PublicKey | BN | number) {\n    if (Buffer.isBuffer(bytes)) {\n      bytes = base58.encode(bytes);\n    } else if (typeof bytes === 'object' && 'toBase58' in bytes) {\n      bytes = bytes.toBase58();\n    } else if (BN.isBN(bytes)) {\n      bytes = base58.encode(bytes.toArray());\n    } else if (typeof bytes !== 'string') {\n      bytes = base58.encode(new BN(bytes, 'le').toArray());\n    }\n\n    return this.addFilter({ memcmp: { offset, bytes } });\n  }\n\n  whereSize(dataSize: number) {\n    return this.addFilter({ dataSize });\n  }\n\n  sortUsing(callback: GpaSortCallback) {\n    this.sortCallback = callback;\n\n    return this;\n  }\n\n  async get(): Promise<UnparsedAccount[]> {\n    const accounts = await this.metaplex\n      .rpc()\n      .getProgramAccounts(this.programId, this.config);\n\n    if (this.sortCallback) {\n      accounts.sort(this.sortCallback);\n    }\n\n    return accounts;\n  }\n\n  async getAndMap<T>(callback: (account: UnparsedAccount) => T): Promise<T[]> {\n    return (await this.get()).map(callback);\n  }\n\n  async getPublicKeys(): Promise<PublicKey[]> {\n    return this.getAndMap((account) => account.publicKey);\n  }\n\n  async getDataAsPublicKeys(): Promise<PublicKey[]> {\n    return this.getAndMap((account) => new PublicKey(account.data));\n  }\n\n  async getMultipleAccounts(\n    callback?: (account: UnparsedAccount) => PublicKey,\n    options?: GmaBuilderOptions\n  ): Promise<GmaBuilder> {\n    const cb = callback ?? ((account) => new PublicKey(account.data));\n\n    return new GmaBuilder(this.metaplex, await this.getAndMap(cb), options);\n  }\n}\n"],"names":["GpaBuilder","constructor","metaplex","programId","mergeConfig","config","slice","offset","length","dataSlice","withoutData","addFilter","filters","push","where","bytes","Buffer","isBuffer","base58","encode","toBase58","BN","isBN","toArray","memcmp","whereSize","dataSize","sortUsing","callback","sortCallback","get","accounts","rpc","getProgramAccounts","sort","getAndMap","map","getPublicKeys","account","publicKey","getDataAsPublicKeys","PublicKey","data","getMultipleAccounts","options","cb","GmaBuilder"],"mappings":"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"}