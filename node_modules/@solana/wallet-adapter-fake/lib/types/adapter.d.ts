import type { SendTransactionOptions, WalletName } from '@solana/wallet-adapter-base';
import { BaseWalletAdapter, WalletReadyState } from '@solana/wallet-adapter-base';
import type { Connection, Transaction, TransactionSignature } from '@solana/web3.js';
import { PublicKey } from '@solana/web3.js';
export declare const FakeWalletName: WalletName<"Fake Wallet">;
export declare class FakeWalletAdapter extends BaseWalletAdapter {
    name: WalletName<"Fake Wallet">;
    url: string;
    icon: string;
    private _publicKey;
    constructor();
    get connecting(): boolean;
    get publicKey(): PublicKey | null;
    get readyState(): WalletReadyState;
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    sendTransaction(transaction: Transaction, connection: Connection, options?: SendTransactionOptions): Promise<TransactionSignature>;
}
//# sourceMappingURL=adapter.d.ts.map