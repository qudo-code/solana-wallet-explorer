import { Connection, PublicKey, Signer, Transaction, TransactionSignature } from "@solana/web3.js";
export interface SignerOptions {
    signers?: Signer[];
}
export declare class StrikeWallet {
    isLoggedIn: boolean;
    url: string;
    private _pendingTransactions;
    private _pendingTransactionErrors;
    private _timers;
    private _wallet;
    private _connecting;
    private _publicKey;
    constructor();
    connect(url: string | null): Promise<PublicKey>;
    cleanUp: () => void;
    signTransaction(transaction: Transaction): Promise<Transaction>;
    signAllTransactions(transactions: Transaction[]): Promise<Transaction[]>;
    sendTransaction(transaction: Transaction, connection: Connection, options?: SignerOptions): Promise<TransactionSignature>;
    private clearTimer;
    private instructionsToSerializableInstructions;
    private buildTransaction;
    private verifyCanSignRequests;
    private signOneTransaction;
    private signMultipleTransactions;
    private handleWalletMessage;
}
