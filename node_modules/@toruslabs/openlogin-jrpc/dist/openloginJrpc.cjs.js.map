{"version":3,"file":"openloginJrpc.cjs.js","mappings":"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","sources":["webpack://@toruslabs/openlogin-jrpc/./src/basePostMessageStream.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@toruslabs/openlogin-utils\"","webpack://@toruslabs/openlogin-jrpc/./src/jrpc.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"eth-rpc-errors\"","webpack://@toruslabs/openlogin-jrpc/./src/jrpcEngine.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"end-of-stream\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"once\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"pump\"","webpack://@toruslabs/openlogin-jrpc/./src/mux.ts","webpack://@toruslabs/openlogin-jrpc/./src/postMessageStream.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"events\"","webpack://@toruslabs/openlogin-jrpc/./src/safeEventEmitter.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"fast-safe-stringify\"","webpack://@toruslabs/openlogin-jrpc/./src/serializableError.ts","webpack://@toruslabs/openlogin-jrpc/./src/substream.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"readable-stream\"","webpack://@toruslabs/openlogin-jrpc/webpack/bootstrap","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/compat get default export","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/define property getters","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/make namespace object","webpack://@toruslabs/openlogin-jrpc/./src/index.ts"],"sourcesContent":["import { Duplex } from \"readable-stream\";\n\nfunction noop(): void {\n  return undefined;\n}\n\nconst SYN = \"SYN\";\nconst ACK = \"ACK\";\nconst BRK = \"BRK\";\n\nexport default class BasePostMessageStream extends Duplex {\n  _init: boolean;\n\n  _haveSyn: boolean;\n\n  _name: string;\n\n  _target: string;\n\n  _targetWindow: Window;\n\n  _targetOrigin: string;\n\n  _onMessage: any;\n\n  _synIntervalId: number;\n\n  constructor({\n    name,\n    target,\n    targetWindow = window,\n    targetOrigin = \"*\",\n  }: {\n    name: string;\n    target: string;\n    targetWindow?: Window;\n    targetOrigin?: string;\n  }) {\n    super({\n      objectMode: true,\n    });\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n    this._init = false;\n    this._haveSyn = false;\n    this._name = name;\n    this._target = target; // target origin\n    this._targetWindow = targetWindow;\n    this._targetOrigin = targetOrigin;\n    this._onMessage = this.onMessage.bind(this);\n    this._synIntervalId = null;\n\n    window.addEventListener(\"message\", this._onMessage, false);\n    this._handShake();\n  }\n\n  _break(): void {\n    this.cork();\n    this._write(BRK, null, noop);\n    this._haveSyn = false;\n    this._init = false;\n  }\n\n  _handShake(): void {\n    this._write(SYN, null, noop);\n    this.cork();\n  }\n\n  _onData(data: unknown): void {\n    if (!this._init) {\n      // listen for handshake\n      if (data === SYN) {\n        this._haveSyn = true;\n        this._write(ACK, null, noop);\n      } else if (data === ACK) {\n        this._init = true;\n        if (!this._haveSyn) {\n          this._write(ACK, null, noop);\n        }\n        this.uncork();\n      }\n    } else if (data === BRK) {\n      this._break();\n    } else {\n      // forward message\n      try {\n        this.push(data);\n      } catch (err) {\n        this.emit(\"error\", err);\n      }\n    }\n  }\n\n  _postMessage(data: unknown): void {\n    const originConstraint = this._targetOrigin;\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n\n  onMessage(event: MessageEvent): void {\n    const message = event.data;\n\n    // validate message\n    if (\n      (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin) ||\n      event.source !== this._targetWindow ||\n      typeof message !== \"object\" ||\n      message.target !== this._name ||\n      !message.data\n    ) {\n      return;\n    }\n\n    this._onData(message.data);\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(data: unknown, _, cb: () => void): void {\n    this._postMessage(data);\n    cb();\n  }\n\n  _destroy(): void {\n    window.removeEventListener(\"message\", this._onMessage, false);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-utils\");","import { randomId } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport type Json = boolean | number | string | null | { [property: string]: Json } | Json[];\n\nexport type JRPCVersion = \"2.0\";\nexport type JRPCId = number | string | void;\n\nexport type ConsoleLike = Pick<Console, \"log\" | \"warn\" | \"error\" | \"debug\" | \"info\" | \"trace\">;\nexport interface JRPCBase {\n  jsonrpc?: JRPCVersion;\n  id?: JRPCId;\n}\n\nexport interface JRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: any;\n}\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport interface JRPCRequest<T> extends JRPCBase {\n  method: string;\n  params?: T;\n}\n\nexport type JRPCEngineNextCallback = (cb?: (done: (error?: Error) => void) => void) => void;\nexport type JRPCEngineEndCallback = (error?: Error) => void;\nexport type JRPCEngineReturnHandler = (done: (error?: Error) => void) => void;\n\ninterface IdMapValue {\n  req: JRPCRequest<unknown>;\n  res: JRPCResponse<unknown>;\n  next: JRPCEngineNextCallback;\n  end: JRPCEngineEndCallback;\n}\n\ninterface IdMap {\n  [requestId: string]: IdMapValue;\n}\n\nexport type JRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: JRPCResponse<U>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => void;\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error) {\n      log.error(`OpenLogin - RPC Error thrown: ${error.message}`, error);\n      res.error = new SerializableError({ code: -32603, message: error.message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\ntype ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport type AsyncJRPCEngineNextCallback = () => Promise<void>;\n\ntype Maybe<T> = Partial<T> | null | undefined;\n\nexport interface JRPCSuccess<T> extends JRPCBase {\n  result: Maybe<T>;\n}\n\nexport interface JRPCError {\n  code: number;\n  message: string;\n  data?: unknown;\n  stack?: string;\n}\n\nexport interface PendingJRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: Error | JRPCError;\n}\n\nexport interface JRPCFailure extends JRPCBase {\n  error: JRPCError;\n}\n\nexport type AsyncJRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: PendingJRPCResponse<U>, next: AsyncJRPCEngineNextCallback) => Promise<void>;\n\ntype ReturnHandlerCallback = (error: null | Error) => void;\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (error) {\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"eth-rpc-errors\");","import { serializeError } from \"eth-rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCEngineReturnHandler, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"./jrpc\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[]\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          res.error = serializeError(error);\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error) {\n        end(error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error) {\n            return handlerCallback(error);\n          }\n          return handlerCallback();\n        });\n      } catch (error) {\n        return end(error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"end-of-stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"once\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pump\");","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","import BasePostMessageStream from \"./basePostMessageStream\";\n\nexport default class PostMessageStream extends BasePostMessageStream {\n  _postMessage(data: unknown): void {\n    let originConstraint = this._targetOrigin;\n    if (typeof data === \"object\") {\n      const dataObj = data as Record<string, unknown>;\n      if (typeof dataObj.data === \"object\") {\n        const dataObjData = dataObj.data as Record<string, unknown>;\n        if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n          const dataObjDataParam = dataObjData.params[0] as Record<string, unknown>;\n          if (dataObjDataParam._origin) {\n            originConstraint = dataObjDataParam._origin as string;\n          }\n\n          // add a constraint for the response\n          dataObjDataParam._origin = window.location.origin;\n        }\n      }\n    }\n\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"events\");","import { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-safe-stringify\");","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nexport default class Substream extends Duplex {\n  private readonly _parent: any;\n\n  private readonly _name: string;\n\n  constructor({ parent, name }: { parent: any; name: string }) {\n    super({ objectMode: true });\n    this._parent = parent;\n    this._name = name;\n  }\n\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n  _read(): void {\n    return undefined;\n  }\n\n  /**\n   * Called when data should be written to this writable stream.\n   *\n   * @param chunk - Arbitrary object to write\n   * @param encoding - Encoding to use when writing payload\n   * @param callback - Called when writing is complete or an error occurs\n   */\n  _write(chunk: unknown, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    this._parent.push({\n      name: this._name,\n      data: chunk,\n    });\n    callback();\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"readable-stream\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { default as BasePostMessageStream } from \"./basePostMessageStream\";\nexport * from \"./jrpc\";\nexport * from \"./jrpcEngine\";\nexport * from \"./mux\";\nexport { default as PostMessageStream } from \"./postMessageStream\";\nexport { default as SafeEventEmitter } from \"./safeEventEmitter\";\nexport { default as SerializableError } from \"./serializableError\";\nexport { default as Substream } from \"./substream\";\nexport * from \"./utils\";\n"],"names":["Duplex","noop","undefined","SYN","ACK","BRK","BasePostMessageStream","constructor","name","target","targetWindow","window","targetOrigin","objectMode","Error","_init","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_synIntervalId","addEventListener","_handShake","_break","cork","_write","_onData","data","uncork","push","err","emit","_postMessage","originConstraint","postMessage","event","message","origin","source","_read","_","cb","_destroy","removeEventListener","randomId","SafeEventEmitter","SerializableError","getRpcPromiseCallback","resolve","reject","unwrapResult","error","response","Array","isArray","result","createErrorMiddleware","log","req","res","next","end","method","code","done","createStreamMiddleware","idMap","readNoop","events","processResponse","context","id","Object","assign","setTimeout","processNotification","processMessage","_encoding","isNotification","_err","stream","read","write","middleware","createScaffoldMiddleware","handlers","handler","createIdRemapMiddleware","_end","originalId","newId","createLoggerMiddleware","logger","debug","createAsyncMiddleware","asyncMiddleware","resolveNextPromise","nextPromise","Promise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","serializeError","JRPCEngine","_middleware","_runAllMiddleware","middlewareStack","returnHandlers","isComplete","_runMiddleware","reverse","returnHandler","_runReturnHandlers","_checkForCompletion","handle","_handleBatch","_handle","_promiseHandle","asMiddleware","middlewareError","handlerCallback","reqs","responses","all","map","callerReq","jsonrpc","_processRequest","_error","mergeMiddleware","engine","forEach","createEngineStream","opts","on","eos","once","pump","Substream","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","_substreams","createStream","substream","parent","anyStreamEnd","destroy","ignoreStream","chunk","callback","console","warn","_cb","readable","writable","setupMultiplex","mux","getStream","streamHelper","PostMessageStream","dataObj","dataObjData","params","length","dataObjDataParam","_origin","location","EventEmitter","safeApply","args","Reflect","apply","arrayClone","arr","n","copy","i","type","doError","_events","er","len","listeners","stringify","Number","isInteger","toString","stack","_parent","default"],"sourceRoot":""}