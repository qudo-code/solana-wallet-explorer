{"version":3,"file":"solanaEmbed.cjs.js","mappings":"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","sources":["webpack://@toruslabs/solana-embed/webpack/bootstrap","webpack://@toruslabs/solana-embed/webpack/runtime/compat get default export","webpack://@toruslabs/solana-embed/webpack/runtime/define property getters","webpack://@toruslabs/solana-embed/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/solana-embed/webpack/runtime/make namespace object","webpack://@toruslabs/solana-embed/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/solana-embed/external commonjs2 \"@solana/web3.js\"","webpack://@toruslabs/solana-embed/external commonjs2 \"@toruslabs/base-controllers\"","webpack://@toruslabs/solana-embed/external commonjs2 \"@toruslabs/http-helpers\"","webpack://@toruslabs/solana-embed/external commonjs2 \"@toruslabs/openlogin-jrpc\"","webpack://@toruslabs/solana-embed/external commonjs2 \"eth-rpc-errors\"","webpack://@toruslabs/solana-embed/external commonjs2 \"is-stream\"","webpack://@toruslabs/solana-embed/external commonjs2 \"pump\"","webpack://@toruslabs/solana-embed/./src/messages.ts","webpack://@toruslabs/solana-embed/./src/interfaces.ts","webpack://@toruslabs/solana-embed/./src/config.ts","webpack://@toruslabs/solana-embed/external commonjs2 \"loglevel\"","webpack://@toruslabs/solana-embed/./src/loglevel.ts","webpack://@toruslabs/solana-embed/./src/utils.ts","webpack://@toruslabs/solana-embed/./src/baseProvider.ts","webpack://@toruslabs/solana-embed/./src/embedUtils.ts","webpack://@toruslabs/solana-embed/./src/PopupHandler.ts","webpack://@toruslabs/solana-embed/./src/communicationProvider.ts","webpack://@toruslabs/solana-embed/external commonjs2 \"fast-deep-equal\"","webpack://@toruslabs/solana-embed/./src/inPageProvider.ts","webpack://@toruslabs/solana-embed/./src/siteMetadata.ts","webpack://@toruslabs/solana-embed/./src/embed.ts","webpack://@toruslabs/solana-embed/./src/index.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@solana/web3.js\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/base-controllers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/http-helpers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-jrpc\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"eth-rpc-errors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"is-stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pump\");","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number): string => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {},\n};\n","import { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = typeof PAYMENT_PROVIDER[keyof typeof PAYMENT_PROVIDER];\n\nexport type TORUS_BUILD_ENV_TYPE = typeof TORUS_BUILD_ENV[keyof typeof TORUS_BUILD_ENV];\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = typeof BUTTON_POSITION[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\" | \"discover\";\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n} as const;\n\nexport type LOGIN_PROVIDER_TYPE = typeof LOGIN_PROVIDER[keyof typeof LOGIN_PROVIDER];\n\nexport interface TorusCtorArgs {\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n}\n\nexport interface NetworkInterface {\n  /**\n   * Block explorer url for the chain\n   * @example https://explorer.solana.com/\n   */\n  blockExplorerUrl: string;\n  /**\n   * Logo url for the base token\n   */\n  logo: string;\n  /**\n   * Name for ticker\n   * @example 'Solana'\n   */\n  tickerName: string;\n  /**\n   * Symbol for ticker\n   * @example SOL\n   */\n  ticker: string;\n  /**\n   * RPC target Url for the chain\n   * @example https://api.devnet.solana.com/\n   */\n  rpcTarget: string;\n  /**\n   * Chain Id parameter(hex with 0x prefix) for the network. Mandatory for all networks. (assign one with a map to network identifier for platforms)\n   * @example 0x1 for mainnet, 0x2 for testnet, 0x3 for devnet,  'loading' if not connected to anything yet or connection fails\n   * @defaultValue 'loading'\n   */\n  chainId: string;\n  /**\n   * Display name for the network\n   */\n  displayName: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Amount Cryptocurrency to buy\n   */\n  cryptoAmount?: number;\n}\n\nexport interface LoginParams {\n  loginProvider?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport type NetworkLabel = \"mainnet-beta\" | \"testnet\" | \"devnet\";\n\nexport interface TorusParams {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface | NetworkLabel;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://solana.tor.us,\n   *\n   * development uses http://localhost:8080 (expects torus-website to be run locally),\n   *\n   * testing uses https://solana-testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * Prefers to use localStorage instead of sessionStorage for torus iframe. Allows longer lived sessions\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useLocalStorage?: boolean;\n  /**\n   * Allows passing external data for initialize\n   *\n   * Defaults to empty object\n   */\n  extraParams?: { [keyof: string]: string };\n}\n\nexport interface TorusLoginParams {\n  loginProvider?: LOGIN_PROVIDER_TYPE;\n  login_hint?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n}\n\nexport interface BaseProviderState {\n  isConnected: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface InPageProviderState extends BaseProviderState {\n  accounts: null | string[];\n  isUnlocked: boolean;\n}\n\nexport interface CommunicationProviderState extends BaseProviderState {\n  buttonPosition: string;\n  isLoggedIn: boolean;\n  torusWidgetVisibility: boolean;\n  currentLoginProvider: LOGIN_PROVIDER_TYPE;\n  isIFrameFullScreen: boolean;\n}\n\nexport type Maybe<T> = Partial<T> | T | null | undefined;\n\nexport interface UnValidatedJsonRpcRequest extends JRPCRequest<unknown> {\n  windowId?: string;\n}\n\nexport interface RequestArguments<T> {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: T;\n}\n","import { EMBED_TRANSLATION_ITEM, LocaleLinks, LOGIN_PROVIDER } from \"./interfaces\";\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: `torus-${window.location.hostname}`,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"solana-embed\");\n","import { JRPCMiddleware, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { NetworkInterface, NetworkLabel } from \"./interfaces\";\nimport log from \"./loglevel\";\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req,\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Torus - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `Torus: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getWindowId = (): string => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (buildEnv: string): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://solana.tor.us`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = { height: 660, width: 375 };\nexport const FEATURES_DEFAULT_WALLET_WINDOW = { height: 740, width: 1315 };\nexport const FEATURES_DEFAULT_POPUP_WINDOW = { height: 700, width: 1200 };\nexport const FEATURES_CONFIRM_WINDOW = { height: 600, width: 400 };\n\nexport function storageAvailable(type: \"localStorage\" | \"sessionStorage\"): boolean {\n  let storage: Storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\n/**\n * popup handler utils\n */\nexport function getPopupFeatures({ width: w, height: h }: { width: number; height: number }): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const getNetworkConfig = (label: NetworkLabel): NetworkInterface | undefined => {\n  switch (label) {\n    case \"mainnet-beta\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x1\",\n        displayName: \"Solana Mainnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://green-dark-sky.solana-mainnet.quiknode.pro/0b4b99540b7930cf590dc7fb0a2d1c9a906fd53c/\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    case \"testnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x2\",\n        displayName: \"Solana Testnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://spring-black-waterfall.solana-testnet.quiknode.pro/89830c37acd15df105b23742d37f33dc85b5eff8/\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    case \"devnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x3\",\n        displayName: \"Solana Devnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.devnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    default:\n      return undefined;\n  }\n};\n","import { createLoggerMiddleware, SafeEventEmitterProvider, SendCallBack } from \"@toruslabs/base-controllers\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  getRpcPromiseCallback,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  ObjectMultiplex,\n  SafeEventEmitter,\n  Stream,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { duplex as isDuplexStream } from \"is-stream\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport { BaseProviderState, Maybe, ProviderOptions, RequestArguments, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, logStreamDisconnectWarning } from \"./utils\";\n\nabstract class BaseProvider<U extends BaseProviderState> extends SafeEventEmitter implements SafeEventEmitterProvider {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  public readonly isTorus: true;\n\n  _rpcEngine: JRPCEngine;\n\n  jsonRpcConnectionEvents: SafeEventEmitter;\n\n  protected _state: U;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(\n      connectionStream as unknown as Stream,\n      mux as unknown as Stream,\n      connectionStream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus\")\n    );\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream as unknown as Stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Stream,\n      jsonRpcConnection.stream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({ origin: location.origin }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n  async request<TArgs, TResponse>(args: RequestArguments<TArgs>): Promise<Maybe<TResponse>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  send<T, V>(req: JRPCRequest<T>, callback: SendCallBack<V>): void;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  send(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  sendAsync<T, V>(req: JRPCRequest<T>): Promise<V>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  sendAsync(payload: JRPCRequest<unknown>): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  abstract _initializeState(...args: unknown[]): Promise<void>;\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected abstract _rpcRequest(\n    payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[],\n    callback: (...args: unknown[]) => void,\n    isInternal?: boolean\n  ): void;\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInPageProvider#connect\n   */\n  protected abstract _handleConnect(...args: unknown[]): void;\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected abstract _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void;\n}\n\nexport default BaseProvider;\n","export const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport async function documentReady(): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { FEATURES_DEFAULT_POPUP_WINDOW, getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, target, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWalletProviderState } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport {\n  BUTTON_POSITION,\n  CommunicationProviderState,\n  EMBED_TRANSLATION_ITEM,\n  LOGIN_PROVIDER_TYPE,\n  ProviderOptions,\n  RequestArguments,\n  UnValidatedJsonRpcRequest,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport PopupHandler from \"./PopupHandler\";\nimport { FEATURES_CONFIRM_WINDOW, getPopupFeatures, getUserLanguage } from \"./utils\";\n\nclass TorusCommunicationProvider extends BaseProvider<CommunicationProviderState> {\n  protected static _defaultState: CommunicationProviderState = {\n    buttonPosition: \"bottom-left\",\n    currentLoginProvider: null,\n    isIFrameFullScreen: false,\n    hasEmittedConnection: false,\n\n    torusWidgetVisibility: false,\n    initialized: false,\n    isLoggedIn: false,\n    isPermanentlyDisconnected: false,\n    isConnected: false,\n  };\n\n  public embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  public torusUrl: string;\n\n  public dappStorageKey: string;\n\n  public windowRefs: Record<string, PopupHandler>;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusIframe: HTMLIFrameElement;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusCommunicationProvider._defaultState,\n    };\n\n    // public state\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {};\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = (payload: RequestArguments<Record<string, unknown>>) => {\n      const { method, params } = payload;\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const { isFullScreen, rid } = params;\n        this._displayIframe({ isFull: isFullScreen as boolean, rid: rid as string });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const { windowId, url } = params as Record<string, string>;\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const { currentLoginProvider } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider as LOGIN_PROVIDER_TYPE;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn(): boolean {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen(): boolean {\n    return this._state.isIFrameFullScreen;\n  }\n\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params: Record<string, unknown>): Promise<void> {\n    try {\n      const { torusUrl, dappStorageKey, torusAlertContainer, torusIframe } = params;\n      this.torusUrl = torusUrl as string;\n      this.dappStorageKey = dappStorageKey as string;\n      this.torusAlertContainer = torusAlertContainer as HTMLDivElement;\n      this.torusIframe = torusIframe as HTMLIFrameElement;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const { currentLoginProvider, isLoggedIn } = (await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as CommunicationWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    const finalUrl = new URL(url || `${this.torusUrl}/redirect?windowId=${windowId}`);\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += `&dappStorageKey=${this.dappStorageKey}`;\n      else finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n    handledWindow.open();\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs[windowId] = handledWindow;\n    // We tell the iframe that the window has been successfully opened\n    this.request<{ windowId: string }, unknown>({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: { windowId },\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request<{ windowId: string }, unknown>({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: { windowId },\n      });\n    });\n  }\n\n  _displayIframe({ isFull = false, rid = \"\" }: { isFull?: boolean; rid?: string } = {}): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    // set phase\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request<{ isIFrameFullScreen: boolean; rid: string }, unknown>({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: { isIFrameFullScreen: isFull, rid },\n    });\n  }\n\n  hideTorusButton(): void {\n    this._state.torusWidgetVisibility = false;\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this._state.torusWidgetVisibility = true;\n    this._displayIframe();\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void): void {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.tryWindowHandle(_payload as JRPCRequest<unknown>[], cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(currentLoginProvider: string, isLoggedIn: boolean): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { currentLoginProvider, isLoggedIn });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  // Called if the iframe wants to close the window cause it is done processing the request\n  private _handleCloseWindow(params: { windowId?: string }): void {\n    const { windowId } = params;\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  private async _createPopupBlockAlert(windowId: string, url: string): Promise<void> {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  private getLogoUrl(): string {\n    const logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    return logoUrl;\n  }\n}\n\nexport default TorusCommunicationProvider;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-deep-equal\");","import { InPageWalletProviderState, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, JRPCSuccess } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport dequal from \"fast-deep-equal\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport { InPageProviderState, ProviderOptions, RequestArguments, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\n\nclass TorusInPageProvider extends BaseProvider<InPageProviderState> {\n  protected static _defaultState: InPageProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusInPageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = (payload: RequestArguments<unknown[] | Record<string, unknown>>) => {\n      const { method, params } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params as unknown[]);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params as Record<string, unknown>);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params as Record<string, unknown>);\n      }\n    };\n\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked } = (await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as InPageWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId }: { chainId?: string } = {}): void {\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", { chainId });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInPageProvider;\n","/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window): string => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string> {\n  try {\n    const { document } = window;\n\n    // Use the site's favicon if it exists\n    let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async (): Promise<{ name: string; icon: string }> => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\nexport default getSiteMetadata;\n","import { PublicKey, SignaturePubkeyPair, Transaction } from \"@solana/web3.js\";\nimport { COMMUNICATION_JRPC_METHODS } from \"@toruslabs/base-controllers\";\nimport { setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, getRpcPromiseCallback, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport TorusCommunicationProvider from \"./communicationProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport TorusInPageProvider from \"./inPageProvider\";\nimport {\n  BUTTON_POSITION,\n  LOGIN_PROVIDER_TYPE,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusParams,\n  UnValidatedJsonRpcRequest,\n  UserInfo,\n  WALLET_PATH,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport getSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPopupFeatures,\n  getTorusUrl,\n  getWindowId,\n  storageAvailable,\n} from \"./utils\";\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { version } = require(\"../package.json\");\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\n\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\");\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  isInitialized: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  public requestedLoginProvider?: LOGIN_PROVIDER_TYPE;\n\n  provider: TorusInPageProvider;\n\n  communicationProvider: TorusCommunicationProvider;\n\n  dappStorageKey: string;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusUrl: string;\n\n  private torusIframe: HTMLIFrameElement;\n\n  private styleLink: HTMLLinkElement;\n\n  constructor({ modalZIndex = 99999 }: TorusCtorArgs = {}) {\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  get isLoggedIn(): boolean {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    network,\n    showTorusButton = false,\n    useLocalStorage = false,\n    buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n    apiKey = \"torus-default\",\n    extraParams = {},\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv);\n    log.enableAll();\n    log.info(torusUrl, \"url loaded\");\n    log.info(`Solana Embed Version :${version}`);\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";\n    else torusIframeUrl.pathname += \"/frame\";\n\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n\n    torusIframeUrl.hash = hashParams.toString();\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>(\n      `<div id=\"torusAlertContainer\" style=\"display:none; z-index: ${this.alertZIndex.toString()}\"></div>`\n    );\n\n    this.styleLink = htmlToElement<HTMLLinkElement>(`<link href=\"${torusUrl}/css/widget.css\" rel=\"stylesheet\" type=\"text/css\">`);\n    const handleSetup = async () => {\n      return new Promise<void>((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata();\n            // send init params here\n            this.torusIframe.contentWindow.postMessage(\n              {\n                buttonPosition,\n                apiKey,\n                network,\n                dappMetadata,\n                extraParams,\n              },\n              torusIframeUrl.origin\n            );\n            await this._setupWeb3({\n              torusUrl,\n            });\n            if (showTorusButton) this.showTorusButton();\n            else this.hideTorusButton();\n            this.isInitialized = true;\n            (window as any).torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login(params: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({ isFull: true });\n      }\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest(\n          { method: \"solana_requestAccounts\", params: [this.requestedLoginProvider, params.login_hint] },\n          getRpcPromiseCallback(resolve, reject)\n        );\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: UserInfo }): Promise<void> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    const { privateKey, userInfo } = loginParams;\n    const { success } = await this.communicationProvider.request<{ privateKey: string; userInfo: UserInfo }, { success: boolean }>({\n      method: \"login_with_private_key\",\n      params: {\n        privateKey,\n        userInfo,\n      },\n    });\n    if (!success) throw new Error(\"Login Failed\");\n  }\n\n  async logout(): Promise<void> {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: [],\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton(): void {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params: NetworkInterface): Promise<void> {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: { ...params },\n    });\n  }\n\n  async showWallet(path: WALLET_PATH, params: Record<string, string> = {}): Promise<void> {\n    const instanceId = await this.communicationProvider.request<[], string>({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: [],\n    });\n    const finalPath = path ? `/${path}` : \"\";\n\n    const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n    // Using URL constructor to prevent js injection and allow parameter validation.!\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach((x) => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n    if (this.dappStorageKey) {\n      finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    // No need to track this window state. Hence, no _handleWindow call.\n    const walletWindow = new PopupHandler({ url: finalUrl, features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW) });\n    walletWindow.open();\n  }\n\n  async getUserInfo(): Promise<UserInfo> {\n    const userInfoResponse = await this.communicationProvider.request<[], UserInfo>({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: [],\n    });\n    return userInfoResponse as UserInfo;\n  }\n\n  async initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n    this.communicationProvider._handleWindow(windowId);\n    const topupResponse = await this.communicationProvider.request<\n      { provider: PAYMENT_PROVIDER_TYPE; params: PaymentParams; windowId: string },\n      boolean\n    >({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: { provider, params, windowId },\n    });\n    return topupResponse;\n  }\n\n  // Solana specific API\n  async getAccounts() {\n    const response = (await this.provider.request({\n      method: \"getAccounts\",\n      params: [],\n    })) as string[];\n    return response;\n  }\n\n  async sendTransaction(transaction: Transaction): Promise<string> {\n    const response = (await this.provider.request({\n      method: \"send_transaction\",\n      params: { message: transaction.serialize({ requireAllSignatures: false }).toString(\"hex\") },\n    })) as string;\n    return response;\n  }\n\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const response: string = (await this.provider.request({\n      method: \"sign_transaction\",\n      params: { message: transaction.serializeMessage().toString(\"hex\"), messageOnly: true },\n    })) as string;\n\n    // reconstruct signature pair\n    const parsed = JSON.parse(response);\n    const signature: SignaturePubkeyPair = { publicKey: new PublicKey(parsed.publicKey), signature: Buffer.from(parsed.signature, \"hex\") };\n    transaction.addSignature(signature.publicKey, signature.signature);\n    return transaction;\n  }\n\n  async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const encodedMessage: string[] = transactions.map((tx) => {\n      return tx.serializeMessage().toString(\"hex\");\n    });\n    const responses: string[] = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: { message: encodedMessage, messageOnly: true },\n    });\n\n    // reconstruct signature pairs\n    const signatures: SignaturePubkeyPair[] = responses.map((item) => {\n      const parsed = JSON.parse(item);\n      return { publicKey: new PublicKey(parsed.publicKey), signature: Buffer.from(parsed.signature, \"hex\") };\n    });\n\n    transactions.forEach((tx, idx) => {\n      tx.addSignature(signatures[idx].publicKey, signatures[idx].signature);\n      return tx;\n    });\n    return transactions;\n  }\n\n  async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = (await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data,\n      },\n    })) as Uint8Array;\n    return response;\n  }\n\n  async getGaslessPublicKey(): Promise<string> {\n    const response = (await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: [],\n    })) as string;\n    return response;\n  }\n\n  // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n  private handleDappStorageKey(useLocalStorage: boolean) {\n    let dappStorageKey = \"\";\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;\n      else {\n        const generatedKey = `torus-app-${getWindowId()}`;\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n\n  private async _setupWeb3(providerParams: { torusUrl: string }): Promise<void> {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow,\n    });\n\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow,\n    });\n\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload: JRPCRequest<unknown>, cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW), // todo: are these features generic for all\n        });\n        // for communication methods sending window id in jrpc req params\n        (_payload.params as Record<string, unknown>).windowId = windowId;\n      }\n      communicationProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>, cb);\n    };\n\n    // detect solana_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m) => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const { method, params = [] } = request;\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({ loginProvider: params[0] });\n          self\n            .login({ loginProvider: params[0] })\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .then((res) => cb(null, res))\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .catch((err) => cb(err));\n        }\n        return originalMethod.apply(this, [request, cb]);\n      };\n    };\n\n    // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n\n    await Promise.all([\n      inPageProvider._initializeState(),\n      communicationProvider._initializeState({\n        ...providerParams,\n        dappStorageKey: this.dappStorageKey,\n        torusAlertContainer: this.torusAlertContainer,\n        torusIframe: this.torusIframe,\n      }),\n    ]);\n    log.debug(\"Torus - injected provider\");\n  }\n}\n\nexport default Torus;\n","export { default } from \"./embed\";\nexport { default as TorusInPageProvider } from \"./inPageProvider\";\nexport * from \"./interfaces\";\n"],"names":["errors","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","api","prodTorusUrl","localStorageKey","window","location","hostname","loglevel","getLogger","ethErrors","config","log","createErrorMiddleware","req","res","next","error","rpc","invalidRequest","message","data","done","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getWindowId","Math","random","toString","slice","getTorusUrl","buildEnv","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","Object","prototype","hasOwnProperty","call","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","type","storage","x","setItem","removeItem","e","code","name","length","getPopupFeatures","w","h","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","left","abs","top","features","getNetworkConfig","label","blockExplorerUrl","displayName","logo","rpcTarget","ticker","tickerName","createLoggerMiddleware","createIdRemapMiddleware","createStreamMiddleware","getRpcPromiseCallback","JRPCEngine","ObjectMultiplex","SafeEventEmitter","duplex","isDuplexStream","pump","messages","BaseProvider","constructor","connectionStream","jsonRpcStreamName","Error","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","ignoreStream","jsonRpcConnection","stream","createStream","rpcEngine","push","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","Array","isArray","params","Promise","resolve","reject","send","payload","callback","streamName","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","addEventListener","documentReady","readyState","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","focus","close","redirect","locationReplaceOnRedirect","replace","COMMUNICATION_JRPC_METHODS","COMMUNICATION_NOTIFICATIONS","EthereumRpcError","configuration","TorusCommunicationProvider","_state","_defaultState","dappStorageKey","languageTranslations","embedTranslations","windowRefs","on","isConnected","notificationHandler","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","GET_PROVIDER_STATE","initialized","_handleWindow","finalUrl","URL","hash","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","display","torusWidgetVisibility","buttonPosition","right","bottom","assign","hideTorusButton","showTorusButton","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","bindOnLoad","remove","children","attachOnLoad","hasEmittedConnection","PROVIDER_JRPC_METHODS","PROVIDER_NOTIFICATIONS","dequal","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","jsonRpcNotificationHandler","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","accounts","isUnlocked","isInternal","err","result","isEthAccounts","finalAccounts","account","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","PublicKey","setAPIKey","BasePostMessageStream","version","require","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","init","enableLogging","network","useLocalStorage","apiKey","extraParams","enableAll","setDefaultLevel","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","handleSetup","body","dappMetadata","contentWindow","postMessage","_setupWeb3","torus","login","loginProvider","provider","login_hint","loginWithPrivateKey","loginParams","privateKey","userInfo","success","logout","LOGOUT","cleanUp","clearInit","isElement","element","Element","Document","contains","setProvider","showWallet","path","instanceId","WALLET_INSTANCE_ID","finalPath","searchParams","keys","forEach","walletWindow","getUserInfo","userInfoResponse","USER_INFO","initiateTopup","topupResponse","TOPUP","getAccounts","response","sendTransaction","transaction","serialize","requireAllSignatures","signTransaction","serializeMessage","messageOnly","parsed","JSON","parse","signature","publicKey","Buffer","addSignature","signAllTransactions","transactions","encodedMessage","map","tx","responses","signatures","item","idx","signMessage","getGaslessPublicKey","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","targetWindow","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","providerFunc","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all","default"],"sourceRoot":""}