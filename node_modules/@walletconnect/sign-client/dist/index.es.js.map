{"version":3,"file":"index.es.js","sources":["../../../node_modules/events/events.js","../src/constants/client.ts","../src/constants/expirer.ts","../src/constants/history.ts","../src/constants/pairing.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/controllers/engine.ts","../src/controllers/expirer.ts","../src/controllers/history.ts","../src/controllers/pairing.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  pairing_ping: \"pairing_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  pairing_delete: \"pairing_delete\",\n  pairing_expire: \"pairing_expire\",\n  session_request: \"session_request\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","import { ONE_DAY } from \"@walletconnect/time\";\n\nexport const EXPIRER_CONTEXT = \"expirer\";\n\nexport const EXPIRER_EVENTS = {\n  created: \"expirer_created\",\n  deleted: \"expirer_deleted\",\n  expired: \"expirer_expired\",\n  sync: \"expirer_sync\",\n};\n\nexport const EXPIRER_STORAGE_VERSION = \"0.3\";\n\nexport const EXPIRER_DEFAULT_TTL = ONE_DAY;\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PAIRING_CONTEXT = \"pairing\";\n\nexport const PAIRING_DEFAULT_TTL = THIRTY_DAYS;\n","import { calcExpiry } from \"@walletconnect/utils\";\nimport { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = calcExpiry(THIRTY_DAYS);\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\nimport { calcExpiry } from \"@walletconnect/utils\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_DEFAULT_TTL = SEVEN_DAYS;\n\nexport const SESSION_EXPIRY = calcExpiry(SESSION_DEFAULT_TTL);\n","import { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_pairingDelete: {\n    req: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1000,\n    },\n    res: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1001,\n    },\n  },\n  wc_pairingPing: {\n    req: {\n      // ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1002,\n    },\n    res: {\n      // ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1003,\n    },\n  },\n  wc_sessionPropose: {\n    req: {\n      // ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      // ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      // ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      // ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      // ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      // ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      // ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      // ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      // ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      // ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      // ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n","import EventEmmiter from \"events\";\nimport { RELAYER_EVENTS, RELAYER_DEFAULT_PROTOCOL } from \"@walletconnect/core\";\nimport {\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  formatJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  isJsonRpcError,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES } from \"@walletconnect/time\";\nimport {\n  IEngine,\n  EngineTypes,\n  IEngineEvents,\n  RelayerTypes,\n  EnginePrivate,\n  SessionTypes,\n  JsonRpcTypes,\n  ExpirerTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  formatUri,\n  generateRandomBytes32,\n  parseUri,\n  parseExpirerTarget,\n  createDelayedPromise,\n  getInternalError,\n  getSdkError,\n  engineEvent,\n  isValidNamespaces,\n  isValidRelays,\n  isValidUrl,\n  isValidRelay,\n  isValidId,\n  isValidParams,\n  isValidString,\n  isValidErrorReason,\n  isValidNamespacesChainId,\n  isValidNamespacesRequest,\n  isValidNamespacesEvent,\n  isValidRequest,\n  isValidEvent,\n  isValidResponse,\n  isValidRequiredNamespaces,\n  isSessionCompatible,\n  isExpired,\n  isUndefined,\n  isConformingNamespaces,\n  isValidController,\n} from \"@walletconnect/utils\";\n\nimport {\n  EXPIRER_EVENTS,\n  SESSION_EXPIRY,\n  PROPOSAL_EXPIRY,\n  ENGINE_CONTEXT,\n  ENGINE_RPC_OPTS,\n} from \"../constants\";\n\nexport class Engine extends IEngine {\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  public name = ENGINE_CONTEXT;\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.initialized = true;\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidConnect(params);\n    const { pairingTopic, requiredNamespaces, relays } = params;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.pairing.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.createPairing();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n    const proposal = {\n      requiredNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n    };\n\n    const { reject, resolve, done: approval } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = { ...session, requiredNamespaces };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic)\n            await this.client.pairing.update(topic, { peerMetadata: session.peer.metadata });\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest(topic, \"wc_sessionPropose\", proposal);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    await this.setProposal(id, { id, expiry, ...proposal });\n\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    this.isInitialized();\n    this.isValidPair(params);\n    const { topic, symKey, relay } = parseUri(params.uri);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    const pairing = { topic, relay, expiry, active: false };\n    await this.client.pairing.set(topic, pairing);\n    await this.client.core.crypto.setSymKey(symKey, topic);\n    await this.client.core.relayer.subscribe(topic, { relay });\n    await this.setExpiry(topic, expiry);\n\n    return pairing;\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidApprove(params);\n    const { id, relayProtocol, namespaces } = params;\n    const { pairingTopic, proposer, requiredNamespaces } = this.client.proposal.get(id);\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"irn\" },\n      namespaces,\n      requiredNamespaces,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: SESSION_EXPIRY,\n    };\n\n    await this.client.core.relayer.subscribe(sessionTopic);\n    const requestId = await this.sendRequest(sessionTopic, \"wc_sessionSettle\", sessionSettle);\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once(engineEvent(\"session_approve\", requestId), ({ error }) => {\n      if (error) reject(error);\n      else resolve(this.client.session.get(sessionTopic));\n    });\n\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    await this.setExpiry(sessionTopic, SESSION_EXPIRY);\n    if (pairingTopic)\n      await this.client.pairing.update(pairingTopic, { peerMetadata: session.peer.metadata });\n\n    if (pairingTopic && id) {\n      await this.sendResult<\"wc_sessionPropose\">(id, pairingTopic, {\n        relay: {\n          protocol: relayProtocol ?? \"irn\",\n        },\n        responderPublicKey: selfPublicKey,\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.activatePairing(pairingTopic);\n    }\n\n    return { topic: sessionTopic, acknowledged };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionUpdate\", { namespaces });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionExtend\", {});\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, SESSION_EXPIRY);\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionRequest\", { request, chainId });\n    const { done, resolve, reject } = createDelayedPromise<T>();\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    return await done();\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult(id, topic, response.result);\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_sessionPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.pairing.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_pairingPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"pairing_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest(topic, \"wc_sessionEvent\", { event, chainId });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_sessionDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deleteSession(topic);\n    } else if (this.client.pairing.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_pairingDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deletePairing(topic);\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private async createPairing() {\n    const symKey = generateRandomBytes32();\n    const topic = await this.client.core.crypto.setSymKey(symKey);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    const relay = { protocol: RELAYER_DEFAULT_PROTOCOL };\n    const pairing = { topic, expiry, relay, active: false };\n    const uri = formatUri({\n      protocol: this.client.protocol,\n      version: this.client.version,\n      topic,\n      symKey,\n      relay,\n    });\n    await this.client.pairing.set(topic, pairing);\n    await this.client.core.relayer.subscribe(topic);\n    await this.setExpiry(topic, expiry);\n\n    return { topic, uri };\n  }\n\n  private activatePairing: EnginePrivate[\"activatePairing\"] = async (topic) => {\n    await this.client.pairing.update(topic, { active: true, expiry: PROPOSAL_EXPIRY });\n    await this.setExpiry(topic, PROPOSAL_EXPIRY);\n  };\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (topic) => {\n    const { self } = this.client.session.get(topic);\n    await Promise.all([\n      this.client.core.relayer.unsubscribe(topic),\n      this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.core.crypto.deleteKeyPair(self.publicKey),\n      this.client.core.crypto.deleteSymKey(topic),\n      this.client.expirer.del(topic),\n    ]);\n  };\n\n  private deletePairing: EnginePrivate[\"deleteSession\"] = async (topic) => {\n    await Promise.all([\n      this.client.core.relayer.unsubscribe(topic),\n      this.client.pairing.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.core.crypto.deleteSymKey(topic),\n      this.client.expirer.del(topic),\n    ]);\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.expirer.del(id),\n    ]);\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.pairing.keys.includes(topic)) {\n      await this.client.pairing.update(topic, { expiry });\n    } else if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.expirer.set(id, proposal.expiry);\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (topic, method, params) => {\n    const payload = formatJsonRpcRequest(method, params);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    await this.client.core.relayer.publish(topic, message, opts);\n    this.client.history.set(topic, payload);\n\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    await this.client.core.relayer.publish(topic, message, opts);\n    await this.client.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    await this.client.core.relayer.publish(topic, message, opts);\n    await this.client.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const pairingTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      if (isExpired(session.expiry)) sessionTopics.push(session.topic);\n    });\n    this.client.pairing.getAll().forEach((pairing) => {\n      if (isExpired(pairing.expiry)) pairingTopics.push(pairing.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiry)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map(this.deleteSession),\n      ...pairingTopics.map(this.deletePairing),\n      ...proposalIds.map(this.deleteProposal),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n        const payload = await this.client.core.crypto.decode(topic, message);\n        if (isJsonRpcRequest(payload)) {\n          this.client.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.client.history.resolve(payload);\n          this.onRelayEventResponse({ topic, payload });\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_pairingPing\":\n        return this.onPairingPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_pairingDelete\":\n        return this.onPairingDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_pairingPing\":\n        return this.onPairingPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiry = calcExpiry(FIVE_MINUTES);\n      const proposal = { id, pairingTopic: topic, expiry, ...params };\n      await this.setProposal(id, proposal);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.activatePairing(topic);\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const { relay, controller, expiry, namespaces } = payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n      };\n      await this.sendResult<\"wc_sessionSettle\">(payload.id, topic, true);\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">(id, topic, true);\n      this.client.events.emit(\"session_update\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, SESSION_EXPIRY);\n      await this.sendResult<\"wc_sessionExtend\">(id, topic, true);\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">(id, topic, true);\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_ping\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n    }\n  };\n\n  private onPairingPingRequest: EnginePrivate[\"onPairingPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_pairingPing\">(id, topic, true);\n      this.client.events.emit(\"pairing_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onPairingPingResponse: EnginePrivate[\"onPairingPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"pairing_ping\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"pairing_ping\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      // RPC request needs to happen before deletion as it utalises session encryption\n      await this.sendResult<\"wc_sessionDelete\">(id, topic, true);\n      await this.deleteSession(topic);\n      this.client.events.emit(\"session_delete\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onPairingDeleteRequest: EnginePrivate[\"onPairingDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      // RPC request needs to happen before deletion as it utalises pairing encryption\n      await this.sendResult<\"wc_pairingDelete\">(id, topic, true);\n      await this.deletePairing(topic);\n      this.client.events.emit(\"pairing_delete\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      this.client.events.emit(\"session_request\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession(topic);\n          this.client.events.emit(\"session_expire\", { topic });\n        } else if (this.client.pairing.keys.includes(topic)) {\n          await this.deletePairing(topic);\n          this.client.events.emit(\"pairing_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id);\n      }\n    });\n  }\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private async isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.pairing.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.pairing.get(topic).expiry)) {\n      await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession(topic);\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) await this.isValidSessionTopic(topic);\n    else if (this.client.pairing.keys.includes(topic)) await this.isValidPairingTopic(topic);\n    else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiry)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, relays } = params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n    const validRequiredNamespacesError = isValidRequiredNamespaces(requiredNamespaces, \"connect()\");\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidPair: EnginePrivate[\"isValidPair\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() params: ${params}`);\n      throw new Error(message);\n    }\n    if (!isValidUrl(params.uri)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `pair() uri: ${params.uri}`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    await this.isValidSessionTopic(topic);\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n}\n","import { HEARTBEAT_EVENTS } from \"@walletconnect/heartbeat\";\nimport { generateChildLogger, getLoggerContext } from \"@walletconnect/logger\";\nimport { toMiliseconds } from \"@walletconnect/time\";\nimport { ExpirerTypes, ICore, IExpirer } from \"@walletconnect/types\";\nimport { getInternalError, formatIdTarget, formatTopicTarget } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { Logger } from \"pino\";\nimport {\n  SIGN_CLIENT_STORAGE_PREFIX,\n  EXPIRER_CONTEXT,\n  EXPIRER_EVENTS,\n  EXPIRER_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class Expirer extends IExpirer {\n  public expirations = new Map<string, ExpirerTypes.Expiration>();\n  public events = new EventEmitter();\n  public name = EXPIRER_CONTEXT;\n  public version = EXPIRER_STORAGE_VERSION;\n\n  private cached: ExpirerTypes.Expiration[] = [];\n  private initialized = false;\n\n  private storagePrefix = SIGN_CLIENT_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IExpirer[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((expiration) => this.expirations.set(expiration.target, expiration));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey(): string {\n    return this.storagePrefix + this.version + \"//\" + this.name;\n  }\n\n  get length(): number {\n    return this.expirations.size;\n  }\n\n  get keys(): string[] {\n    return Array.from(this.expirations.keys());\n  }\n\n  get values(): ExpirerTypes.Expiration[] {\n    return Array.from(this.expirations.values());\n  }\n\n  public has: IExpirer[\"has\"] = (key) => {\n    try {\n      const target = this.formatTarget(key);\n      const expiration = this.getExpiration(target);\n      return typeof expiration !== \"undefined\";\n    } catch (e) {\n      // ignore\n      return false;\n    }\n  };\n\n  public set: IExpirer[\"set\"] = (key, expiry) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    const expiration = { target, expiry };\n    this.expirations.set(target, expiration);\n    this.checkExpiry(target, expiration);\n    this.events.emit(EXPIRER_EVENTS.created, {\n      target,\n      expiration,\n    } as ExpirerTypes.Created);\n  };\n\n  public get: IExpirer[\"get\"] = (key) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    return this.getExpiration(target);\n  };\n\n  public del: IExpirer[\"del\"] = (key) => {\n    this.isInitialized();\n    const target = this.formatTarget(key);\n    const exists = this.has(target);\n    if (exists) {\n      const expiration = this.getExpiration(target);\n      this.expirations.delete(target);\n      this.events.emit(EXPIRER_EVENTS.deleted, {\n        target,\n        expiration,\n      } as ExpirerTypes.Deleted);\n    }\n  };\n\n  public on: IExpirer[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IExpirer[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IExpirer[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IExpirer[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private formatTarget(key: string | number) {\n    if (typeof key === \"string\") {\n      return formatTopicTarget(key);\n    } else if (typeof key === \"number\") {\n      return formatIdTarget(key);\n    }\n    const { message } = getInternalError(\"UNKNOWN_TYPE\", `Target type: ${typeof key}`);\n    throw new Error(message);\n  }\n\n  private async setExpirations(expirations: ExpirerTypes.Expiration[]): Promise<void> {\n    await this.core.storage.setItem<ExpirerTypes.Expiration[]>(this.storageKey, expirations);\n  }\n\n  private async getExpirations(): Promise<ExpirerTypes.Expiration[] | undefined> {\n    const expirations = await this.core.storage.getItem<ExpirerTypes.Expiration[]>(this.storageKey);\n    return expirations;\n  }\n\n  private async persist() {\n    await this.setExpirations(this.values);\n    this.events.emit(EXPIRER_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getExpirations();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.expirations.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored expirations for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", expirations: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore expirations for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private getExpiration(target: string): ExpirerTypes.Expiration {\n    const expiration = this.expirations.get(target);\n    if (!expiration) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${target}`);\n      this.logger.error(message);\n      throw new Error(message);\n    }\n    return expiration;\n  }\n\n  private checkExpiry(target: string, expiration: ExpirerTypes.Expiration): void {\n    const { expiry } = expiration;\n    const msToTimeout = toMiliseconds(expiry) - Date.now();\n    if (msToTimeout <= 0) this.expire(target, expiration);\n  }\n\n  private expire(target: string, expiration: ExpirerTypes.Expiration): void {\n    this.expirations.delete(target);\n    this.events.emit(EXPIRER_EVENTS.expired, {\n      target,\n      expiration,\n    } as ExpirerTypes.Expired);\n  }\n\n  private checkExpirations(): void {\n    this.expirations.forEach((expiration, target) => this.checkExpiry(target, expiration));\n  }\n\n  private registerEventListeners(): void {\n    this.core.heartbeat.on(HEARTBEAT_EVENTS.pulse, () => this.checkExpirations());\n    this.events.on(EXPIRER_EVENTS.created, (createdEvent: ExpirerTypes.Created) => {\n      const eventName = EXPIRER_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: createdEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.expired, (expiredEvent: ExpirerTypes.Expired) => {\n      const eventName = EXPIRER_EVENTS.expired;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: expiredEvent });\n      this.persist();\n    });\n    this.events.on(EXPIRER_EVENTS.deleted, (deletedEvent: ExpirerTypes.Deleted) => {\n      const eventName = EXPIRER_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, data: deletedEvent });\n      this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { formatJsonRpcRequest, isJsonRpcError } from \"@walletconnect/jsonrpc-utils\";\nimport { generateChildLogger, getLoggerContext } from \"@walletconnect/logger\";\nimport { IJsonRpcHistory, JsonRpcRecord, RequestEvent, ICore } from \"@walletconnect/types\";\nimport { getInternalError } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { Logger } from \"pino\";\nimport {\n  SIGN_CLIENT_STORAGE_PREFIX,\n  HISTORY_CONTEXT,\n  HISTORY_EVENTS,\n  HISTORY_STORAGE_VERSION,\n} from \"../constants\";\n\nexport class JsonRpcHistory extends IJsonRpcHistory {\n  public records = new Map<number, JsonRpcRecord>();\n  public events = new EventEmitter();\n  public name = HISTORY_CONTEXT;\n  public version = HISTORY_STORAGE_VERSION;\n  private cached: JsonRpcRecord[] = [];\n  private initialized = false;\n\n  private storagePrefix = SIGN_CLIENT_STORAGE_PREFIX;\n\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger);\n    this.logger = generateChildLogger(logger, this.name);\n  }\n\n  public init: IJsonRpcHistory[\"init\"] = async () => {\n    if (!this.initialized) {\n      this.logger.trace(`Initialized`);\n      await this.restore();\n      this.cached.forEach((record) => this.records.set(record.id, record));\n      this.cached = [];\n      this.registerEventListeners();\n      this.initialized = true;\n    }\n  };\n\n  get context(): string {\n    return getLoggerContext(this.logger);\n  }\n\n  get storageKey(): string {\n    return this.storagePrefix + this.version + \"//\" + this.name;\n  }\n\n  get size(): number {\n    return this.records.size;\n  }\n\n  get keys(): number[] {\n    return Array.from(this.records.keys());\n  }\n\n  get values() {\n    return Array.from(this.records.values());\n  }\n\n  get pending(): RequestEvent[] {\n    const requests: RequestEvent[] = [];\n    this.values.forEach((record) => {\n      if (typeof record.response !== \"undefined\") return;\n      const requestEvent: RequestEvent = {\n        topic: record.topic,\n        request: formatJsonRpcRequest(record.request.method, record.request.params, record.id),\n        chainId: record.chainId,\n      };\n      return requests.push(requestEvent);\n    });\n    return requests;\n  }\n\n  public set: IJsonRpcHistory[\"set\"] = (topic, request, chainId) => {\n    this.isInitialized();\n    this.logger.debug(`Setting JSON-RPC request history record`);\n    this.logger.trace({ type: \"method\", method: \"set\", topic, request, chainId });\n    if (this.records.has(request.id)) return;\n    const record: JsonRpcRecord = {\n      id: request.id,\n      topic,\n      request: { method: request.method, params: request.params || null },\n      chainId,\n    };\n    this.records.set(record.id, record);\n    this.events.emit(HISTORY_EVENTS.created, record);\n  };\n\n  public resolve: IJsonRpcHistory[\"resolve\"] = async (response) => {\n    this.isInitialized();\n    this.logger.debug(`Updating JSON-RPC response history record`);\n    this.logger.trace({ type: \"method\", method: \"update\", response });\n    if (!this.records.has(response.id)) return;\n    const record = await this.getRecord(response.id);\n    if (typeof record.response !== \"undefined\") return;\n    record.response = isJsonRpcError(response)\n      ? { error: response.error }\n      : { result: response.result };\n    this.records.set(record.id, record);\n    this.events.emit(HISTORY_EVENTS.updated, record);\n  };\n\n  public get: IJsonRpcHistory[\"get\"] = async (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Getting record`);\n    this.logger.trace({ type: \"method\", method: \"get\", topic, id });\n    const record = await this.getRecord(id);\n    if (record.topic !== topic) {\n      const { message } = getInternalError(\"MISMATCHED_TOPIC\", `${this.name}, ${id}`);\n      this.logger.error(message);\n      throw new Error(message);\n    }\n    return record;\n  };\n\n  public delete: IJsonRpcHistory[\"delete\"] = (topic, id) => {\n    this.isInitialized();\n    this.logger.debug(`Deleting record`);\n    this.logger.trace({ type: \"method\", method: \"delete\", id });\n    this.values.forEach((record: JsonRpcRecord) => {\n      if (record.topic === topic) {\n        if (typeof id !== \"undefined\" && record.id !== id) return;\n        this.records.delete(record.id);\n        this.events.emit(HISTORY_EVENTS.deleted, record);\n      }\n    });\n  };\n\n  public exists: IJsonRpcHistory[\"exists\"] = async (topic, id) => {\n    this.isInitialized();\n    if (!this.records.has(id)) return false;\n    const record = await this.getRecord(id);\n    return record.topic === topic;\n  };\n\n  public on: IJsonRpcHistory[\"on\"] = (event, listener) => {\n    this.events.on(event, listener);\n  };\n\n  public once: IJsonRpcHistory[\"once\"] = (event, listener) => {\n    this.events.once(event, listener);\n  };\n\n  public off: IJsonRpcHistory[\"off\"] = (event, listener) => {\n    this.events.off(event, listener);\n  };\n\n  public removeListener: IJsonRpcHistory[\"removeListener\"] = (event, listener) => {\n    this.events.removeListener(event, listener);\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async setJsonRpcRecords(records: JsonRpcRecord[]): Promise<void> {\n    await this.core.storage.setItem<JsonRpcRecord[]>(this.storageKey, records);\n  }\n\n  private async getJsonRpcRecords(): Promise<JsonRpcRecord[] | undefined> {\n    const records = await this.core.storage.getItem<JsonRpcRecord[]>(this.storageKey);\n    return records;\n  }\n\n  private getRecord(id: number) {\n    this.isInitialized();\n    const record = this.records.get(id);\n    if (!record) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `${this.name}: ${id}`);\n      throw new Error(message);\n    }\n    return record;\n  }\n\n  private async persist() {\n    await this.setJsonRpcRecords(this.values);\n    this.events.emit(HISTORY_EVENTS.sync);\n  }\n\n  private async restore() {\n    try {\n      const persisted = await this.getJsonRpcRecords();\n      if (typeof persisted === \"undefined\") return;\n      if (!persisted.length) return;\n      if (this.records.size) {\n        const { message } = getInternalError(\"RESTORE_WILL_OVERRIDE\", this.name);\n        this.logger.error(message);\n        throw new Error(message);\n      }\n      this.cached = persisted;\n      this.logger.debug(`Successfully Restored records for ${this.name}`);\n      this.logger.trace({ type: \"method\", method: \"restore\", records: this.values });\n    } catch (e) {\n      this.logger.debug(`Failed to Restore records for ${this.name}`);\n      this.logger.error(e as any);\n    }\n  }\n\n  private registerEventListeners(): void {\n    this.events.on(HISTORY_EVENTS.created, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.created;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n    this.events.on(HISTORY_EVENTS.updated, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.updated;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n\n    this.events.on(HISTORY_EVENTS.deleted, (record: JsonRpcRecord) => {\n      const eventName = HISTORY_EVENTS.deleted;\n      this.logger.info(`Emitting ${eventName}`);\n      this.logger.debug({ type: \"event\", event: eventName, record });\n      this.persist();\n    });\n  }\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n}\n","import { Logger } from \"pino\";\nimport { Store } from \"@walletconnect/core\";\nimport { ICore, PairingTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PAIRING_CONTEXT } from \"../constants\";\n\nexport class Pairing extends Store<string, PairingTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PAIRING_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Logger } from \"pino\";\nimport { Store } from \"@walletconnect/core\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Logger } from \"pino\";\nimport { Store } from \"@walletconnect/core\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport pino from \"pino\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, Expirer, JsonRpcHistory, Pairing, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public pairing: ISignClient[\"pairing\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public history: ISignClient[\"history\"];\n  public expirer: ISignClient[\"expirer\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.pairing = new Pairing(this.core, this.logger);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.history = new JsonRpcHistory(this.core, this.logger);\n    this.expirer = new Expirer(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.pairing.init();\n      await this.session.init();\n      await this.proposal.init();\n      await this.history.init();\n      await this.expirer.init();\n      await this.engine.init();\n      this.logger.info(`SignClient Initilization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initilization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\n\nexport * from \"./constants\";\n\nexport const SignClient = Client;\nexport default Client;\n"],"names":["ONE_DAY","THIRTY_DAYS","calcExpiry","SEVEN_DAYS","IEngine","client","EventEmmiter","ENGINE_CONTEXT","params","pairingTopic","requiredNamespaces","relays","topic","uri","active","newTopic","newUri","publicKey","proposal","RELAYER_DEFAULT_PROTOCOL","reject","resolve","approval","createDelayedPromise","engineEvent","error","session","completeSession","__spreadProps","__spreadValues","message","getInternalError","id","expiry","FIVE_MINUTES","symKey","relay","parseUri","pairing","relayProtocol","namespaces","proposer","selfPublicKey","peerPublicKey","sessionTopic","sessionSettle","SESSION_EXPIRY","requestId","acknowledged","getSdkError","reason","chainId","request","done","result","response","isJsonRpcResult","isJsonRpcError","event","isSessionCompatible","PROPOSAL_EXPIRY","self","method","payload","formatJsonRpcRequest","opts","ENGINE_RPC_OPTS","formatJsonRpcResult","record","formatJsonRpcError","sessionTopics","pairingTopics","proposalIds","isExpired","reqMethod","resMethod","err","subscriptionId","controller","_topic","isValidParams","isUndefined","validRequiredNamespacesError","isValidRequiredNamespaces","isValidRelays","isValidUrl","validNamespacesError","isValidNamespaces","conformingNamespacesError","isConformingNamespaces","isValidString","isValidErrorReason","isValidRelay","validControllerError","isValidController","isValidNamespacesChainId","isValidRequest","isValidNamespacesRequest","isValidResponse","isValidEvent","isValidNamespacesEvent","generateRandomBytes32","formatUri","RELAYER_EVENTS","isJsonRpcRequest","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","isValidId","IExpirer","core","logger","EventEmitter","EXPIRER_CONTEXT","EXPIRER_STORAGE_VERSION","SIGN_CLIENT_STORAGE_PREFIX","expiration","key","target","e","listener","generateChildLogger","getLoggerContext","formatTopicTarget","formatIdTarget","expirations","persisted","toMiliseconds","HEARTBEAT_EVENTS","createdEvent","eventName","expiredEvent","deletedEvent","IJsonRpcHistory","HISTORY_CONTEXT","HISTORY_STORAGE_VERSION","HISTORY_EVENTS","requests","requestEvent","records","Store","PAIRING_CONTEXT","PROPOSAL_CONTEXT","SESSION_CONTEXT","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","name","getAppMetadata","pino","getDefaultLoggerOptions","Core","Pairing","Session","Proposal","JsonRpcHistory","Expirer","Engine","Client"],"mappings":"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"}