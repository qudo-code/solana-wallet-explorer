import { Logger } from "pino";
import { IEvents } from "@walletconnect/events";
import { IHeartBeat } from "@walletconnect/heartbeat";
import { IKeyValueStorage, KeyValueStorageOptions } from "@walletconnect/keyvaluestorage";
import { ICrypto } from "./crypto";
import { IRelayer } from "./relayer";
import { IKeyChain } from "./keychain";
export declare namespace CoreTypes {
    interface Options {
        projectId?: string;
        name?: string;
        relayUrl?: string;
        logger?: string | Logger;
        keychain?: IKeyChain;
        storage?: IKeyValueStorage;
        storageOptions?: KeyValueStorageOptions;
    }
}
export declare abstract class ICore extends IEvents {
    opts?: CoreTypes.Options | undefined;
    readonly protocol = "wc";
    readonly version = 2;
    abstract readonly name: string;
    abstract readonly context: string;
    abstract readonly relayUrl?: string;
    abstract readonly projectId?: string;
    abstract logger: Logger;
    abstract heartbeat: IHeartBeat;
    abstract crypto: ICrypto;
    abstract relayer: IRelayer;
    abstract storage: IKeyValueStorage;
    constructor(opts?: CoreTypes.Options | undefined);
    abstract start(): Promise<void>;
}
//# sourceMappingURL=core.d.ts.map